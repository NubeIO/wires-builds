import { InfluxDB } from '@influxdata/influxdb-client';
import { RequestOptions } from '../APIBase';
import { Template, TemplateApply, TemplateExport, TemplateSummary } from './types';
export interface ApplyTemplateRequest {
    /** entity body */
    body: TemplateApply;
}
export interface ExportTemplateRequest {
    /** Export resources as an InfluxDB template. */
    body: TemplateExport;
}
/**
 * Templates API
 */
export declare class TemplatesAPI {
    private base;
    /**
     * Creates TemplatesAPI
     * @param influxDB - an instance that knows how to communicate with InfluxDB server
     */
    constructor(influxDB: InfluxDB);
    /**
     * Apply or dry-run an InfluxDB Template.
     * See {@link https://v2.docs.influxdata.com/v2.0/api/#operation/ApplyTemplate }
     * @param request - request parameters and body (if supported)
     * @param requestOptions - optional transport options
     * @returns promise of response
     */
    applyTemplate(request: ApplyTemplateRequest, requestOptions?: RequestOptions): Promise<TemplateSummary>;
    /**
     * Export a new Influx Template.
     * See {@link https://v2.docs.influxdata.com/v2.0/api/#operation/ExportTemplate }
     * @param request - request parameters and body (if supported)
     * @param requestOptions - optional transport options
     * @returns promise of response
     */
    exportTemplate(request: ExportTemplateRequest, requestOptions?: RequestOptions): Promise<Template>;
}
//# sourceMappingURL=TemplatesAPI.d.ts.map