import { InfluxDB } from '@influxdata/influxdb-client';
import { RequestOptions } from '../APIBase';
import { AddResourceMemberRequestBody, Organization, Organizations, ResourceMember, ResourceMembers, ResourceOwner, ResourceOwners, SecretKeys, SecretKeysResponse, Secrets } from './types';
export interface GetOrgsRequest {
    offset?: number;
    limit?: number;
    descending?: any;
    /** Filter organizations to a specific organization name. */
    org?: string;
    /** Filter organizations to a specific organization ID. */
    orgID?: string;
    /** Filter organizations to a specific user ID. */
    userID?: string;
}
export interface PostOrgsRequest {
    /** Organization to create */
    body: Organization;
}
export interface GetOrgsIDRequest {
    /** The ID of the organization to get. */
    orgID: string;
}
export interface PatchOrgsIDRequest {
    /** The ID of the organization to get. */
    orgID: string;
    /** Organization update to apply */
    body: Organization;
}
export interface DeleteOrgsIDRequest {
    /** The ID of the organization to delete. */
    orgID: string;
}
export interface GetOrgsIDSecretsRequest {
    /** The organization ID. */
    orgID: string;
}
export interface PatchOrgsIDSecretsRequest {
    /** The organization ID. */
    orgID: string;
    /** Secret key value pairs to update/add */
    body: Secrets;
}
export interface PostOrgsIDSecretsRequest {
    /** The organization ID. */
    orgID: string;
    /** Secret key to delete */
    body: SecretKeys;
}
export interface GetOrgsIDMembersRequest {
    /** The organization ID. */
    orgID: string;
}
export interface PostOrgsIDMembersRequest {
    /** The organization ID. */
    orgID: string;
    /** User to add as member */
    body: AddResourceMemberRequestBody;
}
export interface DeleteOrgsIDMembersIDRequest {
    /** The ID of the member to remove. */
    userID: string;
    /** The organization ID. */
    orgID: string;
}
export interface GetOrgsIDOwnersRequest {
    /** The organization ID. */
    orgID: string;
}
export interface PostOrgsIDOwnersRequest {
    /** The organization ID. */
    orgID: string;
    /** User to add as owner */
    body: AddResourceMemberRequestBody;
}
export interface DeleteOrgsIDOwnersIDRequest {
    /** The ID of the owner to remove. */
    userID: string;
    /** The organization ID. */
    orgID: string;
}
/**
 * Orgs API
 */
export declare class OrgsAPI {
    private base;
    /**
     * Creates OrgsAPI
     * @param influxDB - an instance that knows how to communicate with InfluxDB server
     */
    constructor(influxDB: InfluxDB);
    /**
     * List all organizations.
     * See {@link https://v2.docs.influxdata.com/v2.0/api/#operation/GetOrgs }
     * @param request - request parameters and body (if supported)
     * @param requestOptions - optional transport options
     * @returns promise of response
     */
    getOrgs(request?: GetOrgsRequest, requestOptions?: RequestOptions): Promise<Organizations>;
    /**
     * Create an organization.
     * See {@link https://v2.docs.influxdata.com/v2.0/api/#operation/PostOrgs }
     * @param request - request parameters and body (if supported)
     * @param requestOptions - optional transport options
     * @returns promise of response
     */
    postOrgs(request: PostOrgsRequest, requestOptions?: RequestOptions): Promise<Organization>;
    /**
     * Retrieve an organization.
     * See {@link https://v2.docs.influxdata.com/v2.0/api/#operation/GetOrgsID }
     * @param request - request parameters and body (if supported)
     * @param requestOptions - optional transport options
     * @returns promise of response
     */
    getOrgsID(request: GetOrgsIDRequest, requestOptions?: RequestOptions): Promise<Organization>;
    /**
     * Update an organization.
     * See {@link https://v2.docs.influxdata.com/v2.0/api/#operation/PatchOrgsID }
     * @param request - request parameters and body (if supported)
     * @param requestOptions - optional transport options
     * @returns promise of response
     */
    patchOrgsID(request: PatchOrgsIDRequest, requestOptions?: RequestOptions): Promise<Organization>;
    /**
     * Delete an organization.
     * See {@link https://v2.docs.influxdata.com/v2.0/api/#operation/DeleteOrgsID }
     * @param request - request parameters and body (if supported)
     * @param requestOptions - optional transport options
     * @returns promise of response
     */
    deleteOrgsID(request: DeleteOrgsIDRequest, requestOptions?: RequestOptions): Promise<void>;
    /**
     * List all secret keys for an organization.
     * See {@link https://v2.docs.influxdata.com/v2.0/api/#operation/GetOrgsIDSecrets }
     * @param request - request parameters and body (if supported)
     * @param requestOptions - optional transport options
     * @returns promise of response
     */
    getOrgsIDSecrets(request: GetOrgsIDSecretsRequest, requestOptions?: RequestOptions): Promise<SecretKeysResponse>;
    /**
     * Update secrets in an organization.
     * See {@link https://v2.docs.influxdata.com/v2.0/api/#operation/PatchOrgsIDSecrets }
     * @param request - request parameters and body (if supported)
     * @param requestOptions - optional transport options
     * @returns promise of response
     */
    patchOrgsIDSecrets(request: PatchOrgsIDSecretsRequest, requestOptions?: RequestOptions): Promise<void>;
    /**
     * Delete secrets from an organization.
     * See {@link https://v2.docs.influxdata.com/v2.0/api/#operation/PostOrgsIDSecrets }
     * @param request - request parameters and body (if supported)
     * @param requestOptions - optional transport options
     * @returns promise of response
     */
    postOrgsIDSecrets(request: PostOrgsIDSecretsRequest, requestOptions?: RequestOptions): Promise<void>;
    /**
     * List all members of an organization.
     * See {@link https://v2.docs.influxdata.com/v2.0/api/#operation/GetOrgsIDMembers }
     * @param request - request parameters and body (if supported)
     * @param requestOptions - optional transport options
     * @returns promise of response
     */
    getOrgsIDMembers(request: GetOrgsIDMembersRequest, requestOptions?: RequestOptions): Promise<ResourceMembers>;
    /**
     * Add a member to an organization.
     * See {@link https://v2.docs.influxdata.com/v2.0/api/#operation/PostOrgsIDMembers }
     * @param request - request parameters and body (if supported)
     * @param requestOptions - optional transport options
     * @returns promise of response
     */
    postOrgsIDMembers(request: PostOrgsIDMembersRequest, requestOptions?: RequestOptions): Promise<ResourceMember>;
    /**
     * Remove a member from an organization.
     * See {@link https://v2.docs.influxdata.com/v2.0/api/#operation/DeleteOrgsIDMembersID }
     * @param request - request parameters and body (if supported)
     * @param requestOptions - optional transport options
     * @returns promise of response
     */
    deleteOrgsIDMembersID(request: DeleteOrgsIDMembersIDRequest, requestOptions?: RequestOptions): Promise<void>;
    /**
     * List all owners of an organization.
     * See {@link https://v2.docs.influxdata.com/v2.0/api/#operation/GetOrgsIDOwners }
     * @param request - request parameters and body (if supported)
     * @param requestOptions - optional transport options
     * @returns promise of response
     */
    getOrgsIDOwners(request: GetOrgsIDOwnersRequest, requestOptions?: RequestOptions): Promise<ResourceOwners>;
    /**
     * Add an owner to an organization.
     * See {@link https://v2.docs.influxdata.com/v2.0/api/#operation/PostOrgsIDOwners }
     * @param request - request parameters and body (if supported)
     * @param requestOptions - optional transport options
     * @returns promise of response
     */
    postOrgsIDOwners(request: PostOrgsIDOwnersRequest, requestOptions?: RequestOptions): Promise<ResourceOwner>;
    /**
     * Remove an owner from an organization.
     * See {@link https://v2.docs.influxdata.com/v2.0/api/#operation/DeleteOrgsIDOwnersID }
     * @param request - request parameters and body (if supported)
     * @param requestOptions - optional transport options
     * @returns promise of response
     */
    deleteOrgsIDOwnersID(request: DeleteOrgsIDOwnersIDRequest, requestOptions?: RequestOptions): Promise<void>;
}
//# sourceMappingURL=OrgsAPI.d.ts.map