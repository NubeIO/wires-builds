!function(t){var e={};function i(s){if(e[s])return e[s].exports;var n=e[s]={i:s,l:!1,exports:{}};return t[s].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)i.d(s,n,function(e){return t[e]}.bind(null,n));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="/",i(i.s=94)}([function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(14),a=i(3),r=i(59),o=i(11),u=i(13),d=i(7).create("container",{color:5}),p=()=>{};var l;!function(t){t[t.server=0]="server",t[t.editor=1]="editor",t[t.dashboard=2]="dashboard"}(l=e.Side||(e.Side={}));class h{constructor(t,e,i){if(this._nodes={},"number"!=typeof t)throw"Container side is not defined";this.renderers=null,this.id=e||++h.last_container_id,0===this.id&&(this.name="Main"),this.side=t,h.containers[this.id]=this,this.clear(),this.debug("Container created");let s=h.containers[0];s&&(s.server_dashboard_socket&&(this.server_dashboard_socket=s.server_dashboard_socket),s.server_editor_socket&&(this.server_editor_socket=s.server_editor_socket),s.client_socket&&(this.client_socket=s.client_socket),s.db&&(this.db=s.db),s.dashboard&&(this.dashboard=s.dashboard))}static rootContainer(){return this.containers[0]}static clear(){h.containers={},h.last_container_id=-1}static registerNodeType(t,e,i=null,n=!0,a=!1,r=!1){if(!(e.prototype instanceof s.Node))throw`Can't register node of type [${t}]. Class must inherit Node base class!`;let o=new e(this);e.type=t,e.category=t.substr(0,t.lastIndexOf("/")),e.node_name=t.substr(t.lastIndexOf("/")+1,t.length),e.show_in_menu=n,e.icon=o.iconImageUrl,e.color=o.headerColor,e.title=o.title||o.type,e.parentContainerNodeType=i,e.recursive=a,e.onlyInsideContainer=r,this.nodes_types[t]=e}static createNode(t,e,i){const s=this.nodes_types[t];if(s){const n=new s(this,e,-1e3);return n.type=t,n.pos=i,n.size=n.computeSize(!0),n}throw`Can't create node of type [${t}]. Make sure it is registered through registerNodeType`}static getNodeTypesInCategory(t){return Object.values(this.nodes_types).filter(e=>e.category==(t||null))}static getNodeTypes(){return Object.values(this.nodes_types)}static nodeIsInCategory(t){return e=>e.category==(t||null)}static getNodeTypesCategories(){return u.uniq(Object.values(this.nodes_types).filter(t=>!!t.category&&t.show_in_menu).map(t=>t.category).concat([""]))}clear(){this.stop(),this.isRunning=!1,this.last_node_id=0,this._nodes={},this.iteration=0,this.config={},this.globaltime=0,this.runningtime=0,this.fixedtime=0,this.fixedtime_lapse=.01,this.elapsed_time=.01,this.starttime=0,this.sendActionToRenderer("clear")}stop(){if(this.isRunning){this.isRunning=!1,this.onStopEvent&&this.onStopEvent(),null!=this.execution_timer_id&&clearInterval(this.execution_timer_id),this.execution_timer_id=null;for(let t in this._nodes){let e=this._nodes[t];e.onStopContainer&&e.onStopContainer()}}}attachRenderer(t){t.container&&t.container!=this&&(t.deselectAllNodes(),t.container.detachRenderer(t)),t.container=this,this.renderers||(this.renderers=[]),this.renderers.push(t);for(let e in t.container._nodes){let i=t.container._nodes[e];i.boxcolor=t.theme.NODE_DEFAULT_BOXCOLOR,i.setDirtyCanvas(!0,!0)}}detachRenderer(t){if(!this.renderers)return;let e=this.renderers.indexOf(t);-1!=e&&(t.container=null,this.renderers.splice(e,1),0==this.renderers.length&&delete this.renderers)}run(t=1){if(this.isRunning)return;this.isRunning=!0,this.onPlayEvent&&this.onPlayEvent();for(let t in this._nodes){let e=this._nodes[t];e.onRunContainer&&e.onRunContainer()}this.starttime=a.default.getTime();let e=this;this.execution_timer_id=setInterval((function(){e.runStep(1)}),t)}runStep(t=1){let e=a.default.getTime();this.globaltime=.001*(e-this.starttime);for(let e=0;e<t;e++){this.transferDataBetweenNodes();let t=Date.now();for(let e in this._nodes){let i=this._nodes[e];if((!i.EXECUTE_INTERVAL||i.EXECUTE_INTERVAL&&!i.executeLastTime||i.executeLastTime&&t-i.executeLastTime>=i.EXECUTE_INTERVAL)&&(i.onExecute&&i.onExecute(),i.EXECUTE_INTERVAL&&(i.executeLastTime=t)),i.isUpdated&&(!i.UPDATE_INPUTS_INTERVAL||i.UPDATE_INPUTS_INTERVAL&&!i.updateInputsLastTime||i.updateInputsLastTime&&t-i.updateInputsLastTime>=i.UPDATE_INPUTS_INTERVAL)){i.onInputUpdated&&i.onInputUpdated(),i.isUpdated=!1;for(let t in i.inputs)i.inputs[t].updated&&(i.inputs[t].updated=!1);i.UPDATE_INPUTS_INTERVAL&&(i.updateInputsLastTime=t)}}this.fixedtime+=this.fixedtime_lapse,this.onExecuteStep&&this.onExecuteStep()}this.onAfterExecute&&this.onAfterExecute();let i=a.default.getTime()-e;0==i&&(i=1),this.elapsed_time=.001*i,this.globaltime+=.001*i,this.iteration+=1}transferDataBetweenNodes(){var t;for(let e in this._nodes){let i=this._nodes[e];if(i.outputs)for(let e in i.outputs){let s=i.outputs[e];if(s.updated&&(s.updated=!1,null!=s.links))for(let e of s.links){let n=this._nodes[e.target_node_id];if(!n){this.debugErr("Can't transfer data from node "+i.getReadableId()+". Target node not found");continue}let r=null!=(t=e.target_input_id)?t:e.target_slot,o=n.inputs[r];if(!o)return;o.data=a.default.parseValue(s.data,o.type),n.isUpdated=!0,o.updated=!0}}}}getTime(){return this.globaltime}sendActionToRenderer(t,e){if(this.renderers)for(let i=0;i<this.renderers.length;++i){let s=this.renderers[i];s[t]&&s[t].apply(s,e)}}getNodes(t=!1){let e=[];return function i(s){for(let n in s)e.push(s[n]),t&&s[n].sub_container&&i(s[n].sub_container._nodes)}(this._nodes),e}static setProperties(t,e){if(t)for(let i in t)if(t.hasOwnProperty(i))switch(i){case"inputs":case"outputs":break;case"settings":r.default.addSettingsProperties(e,t[i]);break;default:e[i]=t[i]}}static setSettings(t,e){t&&t.settings&&r.default.addSettingsProperties(e,t.settings)}createNode(t,e,i,s=!1,a=p){if(this.container_node&&this.container_node.shouldRejectNodeType(t))return this.debugErr("Trying to create non-compatible child node in container..."),null;let r=h.nodes_types[t];if(!r)return this.debugErr("Can't create node. Node class of type ["+t+"] not registered."),null;let{id:u,isNew:d}=this.getNodeId(e,i,t),l=new r(this,u,e);l.id=u,l.cid=this.id,l.container=this,l.side=this.side,l.type=t,l.category=r.category;const c=Object.assign({},l.settings);return i&&l.configure(i),(d||s)&&l.setup&&l.setup(),d||Object.keys(l.settings).forEach(t=>{l.settings[t].validation=c[t]?c[t].validation:null}),h.setProperties(e,l),l instanceof n.ContainerNode&&e&&e.sub_container&&(l.sub_container=h.containers[e.sub_container.id],l.settings.name.value=l.settings&&l.settings.name&&l.settings.name.value||"Folder "+e.sub_container.id),l.title||(l.title=l.type),e&&e.properties&&e.properties.size||i&&i.size||s||(l.size=l.computeSize(!0)),l.id=u,d||s?(l.init&&l.init(e),h.setSettings(e,l),this.createNewNode(l).then(()=>{g()})):g(),d&&this.db?0==this.id?this.db.updateLastRootNodeId(this.last_node_id,a):this.db.updateNode(this.container_node.id,this.container_node.container.id,{$set:{"sub_container.last_node_id":this.container_node.sub_container.last_node_id}},a):setTimeout(a,0),this.setDirtyCanvas(!0,!0),this._nodes[u]=l,o.default._nodes[o.default.getId(this.id,u)]=l,l;function g(){l.onAdded&&l.onAdded()}}getNodeId(t,e,i){let s,n=!1;if(t&&null!=t.id?s=t.id:e&&null!=e.id?s=e.id:(s=++this.last_node_id,n=!0),this._nodes[s]){this.debugErr(` Node id [ ${s} ] already exist.`);const t=Math.max(...Object.keys(this._nodes).map(t=>Number(t)));this.last_node_id=t+1,s=this.last_node_id,this.debugErr(`Forcefully creating node of type [ ${i} ] with id [ ${s} ].`),0===this.container_node.cid?this.db.updateLastRootNodeId(this.last_node_id):r.default.updateSubContainerLastNodeId(this,this.last_node_id)}return{id:s,isNew:n}}createNewNode(t){return this.debug("New node created: "+t.getReadableId()),t.onCreated&&t.onCreated(),new Promise(e=>{this.db?this.db.addNode(t,()=>{e()}):e()})}removeBroadcasted(t){this.side===l.server&&(this.remove(t),this.server_editor_socket.emit("nodes-delete",{nodes:[t.id],cid:t.cid}))}remove(t){if("number"==typeof t)return(t=this._nodes[t])||this.debugErr("Can't remove node. Node id ["+t+" not exist."),null;if(t.ignore_remove)return;const e=u.get(t,"onRemoved",()=>{});Promise.resolve(e.call(t)).then(()=>this.afterOnRemoved(t)).catch(t=>d.error(t))}afterOnRemoved(t){if(t.inputs)for(let e in t.inputs){null!=t.inputs[e].link&&t.disconnectInputLink(+e)}if(t.outputs)for(let e in t.outputs){let i=t.outputs[e];null!=i.links&&i.links.length>0&&t.disconnectOutputLinks(+e)}if(this.renderers)for(let e=0;e<this.renderers.length;++e){let i=this.renderers[e];i.selected_nodes[t.id]&&delete i.selected_nodes[t.id],i.node_dragged==t&&(i.node_dragged=null)}delete this._nodes[t.id],delete o.default._nodes[o.default.getId(this.id,t.id)],this.debug("Node deleted: "+t.getReadableId()),t.container=null,this.db&&this.db.removeNode(t.id,this.id),this.setDirtyCanvas(!0,!0)}getNodeById(t){return null==t?null:this._nodes[t]}getNodesByType(t,e=!1){t=t.toLowerCase();let i=[];for(let e in this._nodes){let s=this._nodes[e];s.type.toLowerCase()==t&&i.push(s)}if(e)for(let e in this._nodes){let s=this._nodes[e];if(s instanceof n.ContainerNode){s.sub_container.getNodesByType(t,!0).forEach(t=>i.push(t))}}return i}getNodesByClass(t,e=!1){let i=[];for(let e in this._nodes){let s=this._nodes[e];s instanceof t&&i.push(s)}if(e)for(let e in this._nodes){let s=this._nodes[e];if(s instanceof n.ContainerNode){s.sub_container.getNodesByClass(t,!0).forEach(t=>i.push(t))}}return i}getAllNodes(t=this._nodes,e=0){let i=[];return Object.keys(t).forEach(s=>{const a=t[s];a instanceof n.ContainerNode?i.push({id:a.sub_container.id,name:a.sub_container.name,parentId:e,list:this.getAllNodes(a.sub_container._nodes,a.sub_container.id),isContainer:!0}):i.push({id:a.id,parentId:e,name:a.name?`${a.name}: ${a.title}`:a.title,isContainer:!1})}),i.sort((t,e)=>t.isContainer&&e.isContainer?t.id-e.id:t.isContainer&&!e.isContainer?-1:1)}setDirtyCanvas(t,e){this.sendActionToRenderer("setDirty",[t,e])}runWithEditor(t){const e=u.get(this,"renderers[0].editor");e&&t(e)}serialize(t=!1){let e={id:this.id,last_node_id:this.last_node_id,name:this.name,config:this.config},i=[];for(let e in this._nodes){const s=this._nodes[e];t&&!s.isDashboardNode||i.push(s.serialize())}return e.serializedNodes=i,0==this.id&&(e.last_container_id=h.last_container_id),e}configure(t,e=!1){e||this.clear();for(let e in t)"serializedNodes"!=e&&(this[e]=t[e]);let i=!1;if(t.serializedNodes)for(let e of t.serializedNodes){this.createNode(e.type,null,e)||(i=!0)}return t.last_container_id&&(h.last_container_id=t.last_container_id),this.setDirtyCanvas(!0,!0),i}debug(t){d.debug("["+this.id+"] "+t)}debugWarn(t,e){d.warn("["+this.id+"] "+t)}debugErr(t,e){d.error("["+this.id+"] "+t)}}e.Container=h,h.nodes_types={},h.containers={},h.last_container_id=-1},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2);var n;!function(t){t.STRING="string",t.NUMBER="number",t.BOOLEAN="boolean",t.ANY="any",t.JSON="json",t.DROPDOWN="dropdown"}(n=e.Type||(e.Type={}));e.NodeOutput=class{};e.NodeInput=class{},e.convertStringToType=t=>{switch(t){case n.STRING:return n.STRING;case n.NUMBER:return n.NUMBER;case n.BOOLEAN:return n.BOOLEAN;case n.JSON:return n.JSON}return n.ANY},e.convertType=t=>{switch(t){case n.STRING:return s.SettingType.STRING;case n.NUMBER:return s.SettingType.NUMBER;case n.BOOLEAN:return s.SettingType.BOOLEAN;case n.DROPDOWN:return s.SettingType.DROPDOWN}return s.SettingType.STRING}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(13),n=i(24),a=i(39),r=i(0),o=i(1),u=i(100),d=i(11),p=i(3),l=i(7).create("node",{color:5}),h=()=>{};var c,g;!function(t){t[t.UPDATE_SETTINGS=0]="UPDATE_SETTINGS",t[t.UPDATE_OUTPUTS=1]="UPDATE_OUTPUTS",t[t.UPDATE_TITLE=2]="UPDATE_TITLE",t[t.UPDATE_VALUE=3]="UPDATE_VALUE",t[t.UPDATE_STATE=4]="UPDATE_STATE",t[t.UPDATE_NAME=5]="UPDATE_NAME",t[t.UPDATE_PROPERTIES=6]="UPDATE_PROPERTIES"}(c=e.BROADCAST||(e.BROADCAST={})),function(t){t.NORMAL="normal",t.INFO="info",t.WARNING="warning",t.ERROR="error",t.DISABLED="disabled",t.ONLINE="online",t.OFFLINE="offline"}(e.NodeState||(e.NodeState={})),function(t){t.STRING="string",t.NUMBER="number",t.BOOLEAN="boolean",t.READONLY="readonly",t.DROPDOWN="dropdown",t.TREE_SELECT="treeselect",t.CODE_AREA="codearea",t.PASSWORD="password",t.GROUP="group"}(g=e.SettingType||(e.SettingType={})),e.convertSettingType=t=>{switch(t){case g.STRING:return o.Type.STRING;case g.NUMBER:return o.Type.NUMBER;case g.BOOLEAN:return o.Type.BOOLEAN}return o.Type.ANY};e.Node=class{constructor(t,e,i){this.pos=[100,100],this.MIN_WIDTH=100,this.properties={},this.settings={},this.settingConfigs={},this.linkHandler=u.createLinkHandler(this),this.contextMenu={},this.clonable=!0,this.flags={},this.showIcon=!0,this.convertInput=(t,e,i=3)=>{const s=typeof t;return e===o.Type.NUMBER?t=Number((isNaN(t)?0:Number(t)).toFixed(i)):e===o.Type.BOOLEAN?t="boolean"===s?Number(t):1===t||"true"===t?1:0:e===o.Type.STRING&&"string"!==s&&(t=JSON.stringify(t)),t}}onAfterSettingsChange(t,e){}configure(t){for(let e in t)"console"!=e&&null!=t[e]&&("object"==typeof t[e]?this[e]&&this[e].configure?this[e].configure(t[e]):this[e]=p.default.cloneObject(t[e],this[e]):this[e]=t[e])}serialize(){let t={cid:this.container.id,id:this.id,type:this.type,pos:this.pos,name:this.name,size:this.size};if(this.settings&&(t.settings=p.default.cloneObject(this.settings)),Object.keys(t.settings).forEach(e=>{delete t.settings[e].validation}),this.properties&&(t.properties=p.default.cloneObject(this.properties)),this.flags&&(t.flags=p.default.cloneObject(this.flags)),this.inputs){t.inputs={};for(let e in this.inputs){let i=this.inputs[e];t.inputs[e]={setting:i.setting,name:i.name,type:i.type,link:i.link,label:i.label,locked:i.locked,pos:i.pos,round:i.round,isOptional:i.isOptional,subNodeId:i.subNodeId}}}if(this.outputs){t.outputs={};for(let e in this.outputs){let i=this.outputs[e];t.outputs[e]={name:i.name,type:i.type,links:i.links,label:i.label,locked:i.locked,pos:i.pos,round:i.round,subNodeId:i.subNodeId}}}return this.onSerialize&&this.onSerialize(t),t}toString(){return JSON.stringify(this.serialize())}getTitle(){return this.title}getName(){return this.name}getDefinedInputValues(){return Object.keys(this.inputs).map(t=>this.inputs[t].data).filter(t=>null!=t)}emitTransformedInput(t){let e=this.getInputData(0);null!=e?this.setOutputData(0,t(e)):this.setOutputData(0,null)}updateNodeInput(){this.container.db&&this.container.db.updateNode(this.id,this.container.id,{$set:{inputs:this.inputs}})}updateNodeOutput(){this.container.db&&this.container.db.updateNode(this.id,this.container.id,{$set:{outputs:this.outputs}})}persistProperties(t=!1,e=!1,i=!1,s=!1){if(!this.container.db)return;const n={};t&&(n.settings=this.settings),e&&(n.properties=this.properties),i&&(n.inputs=this.inputs),s&&(n.outputs=this.outputs),this.container.db.updateNode(this.id,this.container.id,{$set:n})}persistConfiguration(t=h){this.container.db&&this.container.db.updateNode(this.id,this.container.id,{$set:{settings:this.settings,properties:this.properties}},t)}updateNodeInputOutput(){this.container.db&&this.container.db.updateNode(this.id,this.container.id,{$set:{inputs:this.inputs,outputs:this.outputs}})}setOutputData(t,e,i=!1){this.outputs[t]&&void 0!==e&&(i&&this.outputs[t].data===e||(this.outputs[t].updated=!0,this.isRecentlyActive||(this.isRecentlyActive=!0),this.outputs[t].data=e))}getInputData(t){try{const e=this.inputs[t];let i=e.data;if(this.inputs[t]&&this.inputs[t].setting&&this.inputs[t].setting.exist&&(!p.default.hasValidInput(i,this.inputs[t].setting.nullable)||e.type===o.Type.DROPDOWN)){const s=this.inputs[t].name.match(/\[(.*?)\]/)[1],n=this.settings[s];e.type===o.Type.DROPDOWN?n.config.items.map(t=>t.value).includes(i)||(i=n.value):i=p.default.parseValue(n.value,e.type)}return i}catch(t){this.debugErr(`Get input data! ${t}`)}}getInputInfo(t){return this.inputs?this.inputs[t]:null}addOutput(t,e,i,s){i=this.getFreeOutputId(i);let n={name:t=t||"out "+(i+1),type:e,links:null};if(s)for(let t in s)n[t]=s[t];return this.outputs||(this.outputs={}),this.outputs[i]=n,this.onOutputAdded&&this.onOutputAdded(n),this.size=this.computeSize(),i}getFreeOutputId(t){if(this.outputs||(this.outputs={}),void 0!==t&&!this.outputs[t])return t;for(let t=0;t<1e3;t++)if(!this.outputs[t])return t}removeOutput(t){this.linkHandler.disconnectOutput(t),delete this.outputs[t],this.size=this.computeSize(),this.onOutputRemoved&&this.onOutputRemoved(t)}addInput(t,e,i={exist:!1,nullable:!1,hidden:!1},s,n){s=this.getFreeInputId(s);let a={name:t=t||"in "+(s+1),type:e,setting:i};return n&&(a=Object.assign(Object.assign({},a),n)),this.inputs||(this.inputs={}),this.inputs[s]=a,this.size=this.computeSize(),this.onInputAdded&&this.onInputAdded(a),s}addInputWithSettings(t,e,i,s=t,n=!0,a,r){const u={exist:!0,nullable:n,hidden:!1};this.addInput(`[${t}]`,e,u,r),this.settings[t]={description:s,value:i,type:o.convertType(e)},a&&(this.settings[t]=Object.assign(Object.assign({},this.settings[t]),{config:a}))}addInputAtPosition(t,e,i,s={exist:!1,nullable:!1,hidden:!1},n={}){this.inputs||(this.inputs={});const a=this.getInputsCount();if(t>=a)return this.addInput(e,i,s,n);const r=this.id;for(let e=a;e>t;e--)if(this.inputs[e]=this.inputs[e-1],this.inputs[e].hasOwnProperty("link")){const t=this.container._nodes[`${this.inputs[e].link.target_node_id}`];let i=t.outputs[`${this.inputs[e].link.target_slot}`].links;const s=i.findIndex(t=>t.target_node_id==r&&t.target_slot==e-1);-1!=s&&i.splice(s,1,{target_node_id:r,target_slot:e}),t.updateNodeOutput()}let o=Object.assign({name:e,type:i,setting:s},n);return this.inputs[t]=o,this.size=this.computeSize(),this.onInputAdded&&this.onInputAdded(o),t}getFreeInputId(t){if(this.inputs||(this.inputs={}),void 0!==t&&!this.inputs[t])return t;for(let t=0;t<1e3;t++)if(!this.inputs[t])return t}hideInput(t=!0,...e){for(let t of e)this.disconnectInputLink(null,t),this.inputs[t].setting.hidden=!0;this.redrawNode(t)}showInput(t=!0,...e){for(let t of e)this.inputs[t].setting.hidden=!1;this.redrawNode(t)}redrawNode(t=!0){t&&(this.size=this.computeSize(),this.setDirtyCanvas(!0,!0))}removeInput(t){this.linkHandler.disconnectInput(t),delete this.inputs[t],this.size=this.computeSize(),this.onInputRemoved&&this.onInputRemoved(t)}removeInputAtPosition(t){this.disconnectInputLink(t);const e=this.getInputsCount(),i=this.id;for(let s=t;s<e-1;s++)if(this.inputs[s]=this.inputs[s+1],this.inputs[s].hasOwnProperty("link")){const t=this.container._nodes[`${this.inputs[s].link.target_node_id}`];let e=t.outputs[`${this.inputs[s].link.target_slot}`].links;const n=e.findIndex(t=>t.target_node_id==i&&t.target_slot==s+1);-1!=n&&e.splice(n,1,{target_node_id:i,target_slot:s}),t.updateNodeOutput()}delete this.inputs[e-1],this.size=this.computeSize(),this.onInputRemoved&&this.onInputRemoved(t)}getInputsCount(){return this.inputs?Object.keys(this.inputs).length:0}getOutputsCount(){return this.outputs?Object.keys(this.outputs).length:0}changeInputsCount(t,e){let i=t-this.getInputsCount();if(i>0)for(let t=0;t<i;t++)this.addInput(null,e);if(i<0){let t=Object.keys(this.inputs);for(let e=0;e>i;e--){let i=t[t.length+e-1];this.removeInput(+i)}}}changeOutputsCount(t,e){let i=t-this.getOutputsCount();if(i>0)for(let t=0;t<i;t++)this.addOutput(null,e);if(i<0){let t=Object.keys(this.outputs);for(let e=0;e>i;e--){let i=t[t.length+e-1];this.removeOutput(+i)}}}getLastInputIndex(){return this.inputs?Object.values(this.inputs).filter(t=>!t.setting.hidden).length:0}getLastOutputIndex(){return this.outputs?Object.values(this.outputs).length:0}computeHeight(){return 15*Math.max(this.getLastInputIndex()+this.getLastOutputIndex(),1)+6}computeSize(t=!1){var e,i,s,n;let a=[0,0];if(a[1]=this.computeHeight(),!t&&null!=this.size)return a[0]=this.size[0],a;let r=d(this.title),o=0,u=0;if(this.inputs)for(let t in this.inputs){let s=this.inputs[t],n=null!=(e=s.label)?e:"",a=null!=(i=s.name)?i:"",r=d(n),p=d(a);o<r&&(o=r),u<p&&(u=p)}if(this.outputs)for(let t in this.outputs){let e=this.outputs[t],i=null!=(s=e.label)?s:"",a=null!=(n=e.name)?n:"",r=d(i),p=d(a);o<r&&(o=r),u<p&&(u=p)}function d(t){return t?14*t.length*.6:0}return 0==o&&(o=u),a[0]=Math.max(o+u+10,r),a[0]=Math.max(a[0],this.MIN_WIDTH),a}calculateMinWidth(...t){return Math.max(this.MIN_WIDTH,...t)}connect(t,e,i,s){return this.linkHandler.make({origin_id:this.id,origin_slot:t,target_id:e,target_slot:i,target_input_id:s})}disconnectOutputLinks(t){return this.linkHandler.disconnectOutput(t)}disconnectInputLink(t,e){return this.linkHandler.disconnectInput(t,e)}setDirtyCanvas(t,e){this.container&&this.container.sendActionToRenderer("setDirty",[t,e])}collapse(){this.flags.collapsed=!this.flags.collapsed,this.setDirtyCanvas(!0,!0)}debug(t){l.debug(this.getReadableId()+" "+t)}debugInfo(t){l.info(this.getReadableId()+" "+t)}debugWarn(t,e){l.warn(this.getReadableId()+" "+t)}debugErr(t,e){l.error(this.getReadableId()+" "+t)}getReadableId(){return this.container?`[${this.type}][${this.container.id}/${this.id}]`:`[${this.type}][-/${this.id}]`}sendMessageToServerSide(t){this.side===r.Side.server?l.warn(`Node ${this.getReadableId()} is trying to send message from server side to server side`):this.container.client_socket.emit("nodeMessageToServerSide",{id:this.id,cid:this.container.id,message:t})}sendMessageToEditorSide(t,e=!0){let i={id:this.id,cid:this.container.id,message:t};if(this.side==r.Side.editor)l.warn(`Node ${this.getReadableId()} is trying to send message from editor side to editor side`);else if(this.side===r.Side.server){let t=this.container.server_editor_socket;e?t.in(""+this.container.id).emit("nodeMessageToEditorSide",i):t.emit("nodeMessageToEditorSide",i)}else this.container.client_socket.emit("nodeMessageToEditorSide",i)}sendAddInputToEditorSide(t,e,i){let s={id:this.id,cid:this.container.id,input:{name:t,type:e,extra_info:i}};if(this.side===r.Side.editor)l.warn("Node "+this.getReadableId()+" is trying to send message from editor side to editor side");else if(this.side===r.Side.server){this.container.server_editor_socket.emit("node-add-input",s)}else this.container.client_socket.emit("node-add-input",s)}sendAddOutputToEditorSide(t,e,i){let s={id:this.id,cid:this.container.id,output:{name:t,type:e,extra_info:i}};if(this.side===r.Side.editor)l.warn("Node "+this.getReadableId()+" is trying to send message from editor side to editor side");else if(this.side===r.Side.server){this.container.server_editor_socket.emit("node-add-output",s)}else this.container.client_socket.emit("node-add-output",s)}sendRemoveInputToEditorSide(t){let e={id:this.id,cid:this.container.id,input:t};if(this.side===r.Side.editor)l.warn("Node "+this.getReadableId()+" is trying to send message from editor side to editor side");else if(this.side===r.Side.server){this.container.server_editor_socket.emit("node-remove-input",e)}else this.container.client_socket.emit("node-remove-input",e)}sendRemoveOutputToEditorSide(t){let e={id:this.id,cid:this.container.id,output:t};if(this.side===r.Side.editor)l.warn("Node "+this.getReadableId()+" is trying to send message from editor side to editor side");else if(this.side===r.Side.server){this.container.server_editor_socket.emit("node-remove-output",e)}else this.container.client_socket.emit("node-remove-output",e)}sendIOValuesToEditor(){let t=[],e=[];if(this.inputs)for(let e in this.inputs){const i=this.inputs[e].data;t.push({nodeId:this.id,inputId:e,data:i})}if(this.outputs)for(let t in this.outputs){const i=this.outputs[t].data;e.push({nodeId:this.id,outputId:t,data:i})}let i={cid:this.container.id,inputs:t,outputs:e};this.container.server_editor_socket.in(""+this.container.id).emit("nodes-io-values",i)}updateInputsLabels(){if(this.inputs){for(let t in this.inputs){this.inputs[t].label=""}this.setDirtyCanvas(!0,!0)}}updateOutputsLabels(){if(this.outputs){for(let t in this.outputs){this.outputs[t].label=""}this.setDirtyCanvas(!0,!0)}}broadcastSettingsToClients(t=!0){this.sendMessageToEditorSide({action:c.UPDATE_SETTINGS,payload:this.settings},t)}broadcastPropertiesToClients(t=!0){this.sendMessageToEditorSide({action:c.UPDATE_PROPERTIES,payload:this.properties},t)}broadcastOutputsToClients(t=!0){this.sendMessageToEditorSide({action:c.UPDATE_OUTPUTS,payload:this.outputs},t)}broadcastNodeStateToClients(t=!0){this.sendMessageToEditorSide({action:c.UPDATE_STATE,payload:this.nodeState},t)}broadcastTitleToClients(t=!0){this.sendMessageToEditorSide({action:c.UPDATE_TITLE,payload:this.title},t)}broadcastNameToClients(t=!0){this.sendMessageToEditorSide({action:c.UPDATE_NAME,payload:this.name},t)}broadcastValToClients(t,e,i=!0){this.sendMessageToEditorSide({action:c.UPDATE_VALUE,key:t,payload:e},i)}onGetMessageToEditorSide({action:t,payload:e,key:i}){switch(t){case c.UPDATE_VALUE:return void(this.settings[i].value=e);case c.UPDATE_SETTINGS:return void(this.settings=e);case c.UPDATE_PROPERTIES:return void(this.properties=e);case c.UPDATE_OUTPUTS:this.outputs=e;break;case c.UPDATE_TITLE:this.title=e,this.size=this.computeSize();break;case c.UPDATE_STATE:this.nodeState=e;break;case c.UPDATE_NAME:this.name=e;break;default:this.debugErr(`Received unknown editor action ${t} with payload ${JSON.stringify(e)}`)}}setSettingsConfig(t){this.settingConfigs=t}formattedExecutionTime(){return n(this.executeLastTime).format("YYYY-MM-DDTHH:MM:ss")}setNodeState(t){this.nodeState=t,this.side==r.Side.server&&this.broadcastNodeStateToClients()}getParentNode(){return d.default._nodes[d.default.getId(this.container.parent_container_id,this.container.parent_id)]}settingsWithValidation(t){const e=t;let i=new(0,r.Container.nodes_types[this.type])(this.container,this.id,this.properties);const s=Object.assign({},i.settings);return Object.keys(e).forEach(t=>{e[t].validation=s[t]?s[t].validation:null}),e}displayError(t,e=""){this.container.server_editor_socket.emit(a.ERROR,`${e} ${this.extractErrorMessage(t)}`)}displayMessage(t){this.container.server_editor_socket.emit(a.NOTIFICATION,t)}extractErrorMessage(t){return s.get(t,"response.data.message",s.get(t,"message",t))}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(4);class n{static getTimeStamp(){const t=new Date;return t.getFullYear()+"-"+(t.getMonth()+1)+"-"+t.getDate()+" "+t.getHours()+":"+(t.getMinutes()<10?"0"+t.getMinutes():t.getMinutes()+":00")}static onlySerializable(t){return JSON.parse(JSON.stringify(t))}static cloneObject(t,e){if(null==t)return null;let i=JSON.parse(JSON.stringify(t));if(!e)return i;for(let t in i)e[t]=i[t];return e}static distance(t,e){return Math.sqrt((e[0]-t[0])*(e[0]-t[0])+(e[1]-t[1])*(e[1]-t[1]))}static isInsideRectangle(t,e,i,s,n,a){return i<t&&i+n>t&&s<e&&s+a>e}static overlapBounding([t,e,i,s],[n,a,r,o]){return!(t>r||e>o||i<n||s<a)}static parseValue(t,e){const i=typeof t;if(null===t&&"string"===e&&"string"!==i)return"";if(null==t)return t;if("number"===e&&"number"!==i)return"boolean"===i?t?1:0:isNaN(parseFloat(t))?null:parseFloat(t);if("string"===e&&"string"!==i)return JSON.stringify(t);if("boolean"===e&&"boolean"!==i)return s.isNull(t)||""===t?null:/true|1/gi.test(t);if("json"===e){const e=t;if(t={},"string"===i)try{t=JSON.parse(e)}catch(t){}else if("object"===i)try{t=JSON.parse(JSON.stringify(e))}catch(t){}}return t}static formatValue(t){return null==t?"":this.formatAsPerValueType(t)}static formatNodeInOut(t){return null===t?"null":""===t?"null":void 0!==t?this.formatAsPerValueType(t):void 0}static formatAsPerValueType(t){if("boolean"==typeof t)t=t?"true":"false";else if("number"==typeof t)t=parseFloat(t.toFixed(3)).toString();else if("object"==typeof t){try{JSON.parse(JSON.stringify(t))}catch(t){return"[object]"}t=JSON.stringify(t)}return t}static hasInput(t){return void 0!==t}static hasValidInput(t,e){return e?void 0!==t:null!=t&&""!==t}static getTime(){return"undefined"!=typeof performance?performance.now():Date.now()}static toFixedNumber(t,e){let i=Math.pow(10,e);return+Math.round(t*i)/i}static formatAndTrimValue(t){const e=typeof t;return null==t||"string"!==e&&"object"!==e?t:("object"===e&&(t=JSON.stringify(t)),t.length>30&&(t=t.substr(0,30)+"..."),t)}static copyToClipboard(t){const e=document.createElement("textarea");e.textContent=t,e.style.position="fixed",document.body.appendChild(e),e.select();try{return document.execCommand("copy")}catch(t){return!1}finally{document.body.removeChild(e)}}static download(t,e){const i=document.createElement("a");i.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(e)),i.setAttribute("download",t),i.style.display="none",document.body.appendChild(i),i.click(),document.body.removeChild(i)}static getISOday(t){return n.WEEKDAYS.indexOf(t.toLowerCase())}}e.default=n,n.operatorsBoolName=["==","!=","<","<=",">",">="],n.operatorsMathName=["+","-","/","*","min","max"],n.operatorsBool={eq:function(t,e){return t==e},neq:function(t,e){return t!=e},lt:function(t,e){return t<e},lte:function(t,e){return t<=e},gt:function(t,e){return t>e},gte:function(t,e){return t>=e},btwn:function(t,e,i){return t>=e&&t<=i||t<=e&&t>=i},contains:function(t,e){return-1!=(t+"").indexOf(e)},regex:function(t,e,i,s){return(t+"").match(new RegExp(e,s?"i":""))},true:function(t){return!0===t},false:function(t){return!1===t},null:function(t){return null==t},notNull:function(t){return null!=t},empty:function(t){return"string"==typeof t||Array.isArray(t)||Buffer.isBuffer(t)?0===t.length:"object"==typeof t&&null!==t&&0===Object.keys(t).length},notEmpty:function(t){return"string"==typeof t||Array.isArray(t)||Buffer.isBuffer(t)?0!==t.length:"object"==typeof t&&null!==t&&0!==Object.keys(t).length}},n.operatorsStatName=["max","min","range","midRange","sum","mean","median","variance","standardDeviation","meanAbsoluteDeviation"],n.stat={max:function(t){return Math.max.apply(null,t)},min:function(t){return Math.min.apply(null,t)},range:function(t){return n.stat.max(t)-n.stat.min(t)},midRange:function(t){return n.stat.range(t)/2},sum:function(t){let e=0;for(let i=0,s=t.length;i<s;i++)e+=t[i];return e},mean:function(t){return n.stat.sum(t)/t.length},median:function(t){t.sort((function(t,e){return t-e}));const e=t.length/2;return e%1?t[e-.5]:(t[e-1]+t[e])/2},modes:function(t){if(!t.length)return[];let e={},i=0,s=[];return t.forEach((function(t){e[t]?e[t]++:e[t]=1,e[t]>i?(s=[t],i=e[t]):e[t]===i&&(s.push(t),i=e[t])})),s},variance:function(t){const e=n.stat.mean(t);return n.stat.mean(t.map((function(t){return Math.pow(t-e,2)})))},standardDeviation:function(t){return Math.sqrt(n.stat.variance(t))},meanAbsoluteDeviation:function(t){const e=n.stat.mean(t);return n.stat.mean(t.map((function(t){return Math.abs(t-e)})))},zScores:function(t){const e=n.stat.mean(t),i=n.stat.standardDeviation(t);return t.map((function(t){return(t-e)/i}))}},n.buildUrl=(t,e,i="http")=>`${i}://${t}${e?`:${e}`:""}`,n.sum=t=>t.reduce((t,e)=>t+e,0),n.clamp=function(t,e,i){return Math.min(Math.max(t,e),i)},n.remap=function(t,e,i,s,n){return t=Number(t),e=Number(e),i=Number(i),s=Number(s),t>i?t=i:t<e&&(t=e),(t-e)/(i-e)*((n=Number(n))-s)+s},n.renameKey=(t,e)=>i=>{if(t===e)return i;const s=Object.assign(Object.assign({},i),{[e]:i[t]});return delete s[t],s},n.pSBC=(t,e,i,s=!1)=>{let n,a,r,o,u,d,p,l,h=parseInt,c=Math.round,g="string"==typeof i;if("number"!=typeof t||t<-1||t>1||"string"!=typeof e||"r"!=e[0]&&"#"!=e[0]||i&&!g)return null;const y=t=>{let e=t.length,i={r:0,g:0,b:0,a:0};if(e>9){if([n,a,r,o]=t=t.split(","),e=t.length,e<3||e>4)return null;i.r=h("a"==n[3]?n.slice(5):n.slice(4)),i.g=h(a),i.b=h(r),i.a=o?parseFloat(o):-1}else{if(8==e||6==e||e<4)return null;e<6&&(t="#"+t[1]+t[1]+t[2]+t[2]+t[3]+t[3]+(e>4?t[4]+t[4]:"")),t=h(t.slice(1),16),9==e||5==e?(i.r=t>>24&255,i.g=t>>16&255,i.b=t>>8&255,i.a=c((255&t)/.255)/1e3):(i.r=t>>16,i.g=t>>8&255,i.b=255&t,i.a=-1)}return i};return l=e.length>9,l=g?i.length>9||"c"==i&&!l:l,d=y(e),u=t<0,p=i&&"c"!=i?y(i):u?{r:0,g:0,b:0,a:-1}:{r:255,g:255,b:255,a:-1},u=1-(t=u?-1*t:t),d&&p?(s?(n=c(u*d.r+t*p.r),a=c(u*d.g+t*p.g),r=c(u*d.b+t*p.b)):(n=c(Math.pow(u*Math.pow(d.r,2)+t*Math.pow(p.r,2),.5)),a=c(Math.pow(u*Math.pow(d.g,2)+t*Math.pow(p.g,2),.5)),r=c(Math.pow(u*Math.pow(d.b,2)+t*Math.pow(p.b,2),.5))),o=d.a,p=p.a,d=o>=0||p>=0,o=d?o<0?p:p<0?o:o*u+p*t:0,l?"rgb"+(d?"a(":"(")+n+","+a+","+r+(d?","+c(1e3*o)/1e3:"")+")":"#"+(4294967296+16777216*n+65536*a+256*r+(d?c(255*o):0)).toString(16).slice(1,d?void 0:-2)):null},n.WEEKDAYS=[null,"monday","tuesday","wednesday","thursday","friday","saturday","sunday"],n.sleep=t=>new Promise(e=>setTimeout(e,t))},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.isNull=t=>null==t,e.isNotNull=t=>!e.isNull(t),e.isJSON=t=>e.isNotNull(t)&&("object"==typeof t||Array.isArray(t)),e.isString=t=>"string"==typeof t||t instanceof String,e.isEmpty=t=>!!e.isNull(t)||(t instanceof Array?0===t.length:t instanceof Object?0===Object.keys(t).length:t instanceof String?""===t.trim():""===t.toString().trim()),e.toLowerSnakeCase=t=>e.isNull(t)?null:t.toString().toLowerCase().replace(/-+\s+/g,"_"),e.isFunction=t=>t&&"[object Function]"==={}.toString.call(t),e.isNumeric=t=>!isNaN(parseFloat(t))&&isFinite(t),e.convertToNumber=(t,i=!1)=>{if(e.isNull(t))return null;let s=t.toString(),n=+s;if(e.isNumeric(n)&&!/^\s*$/.test(s))return n;if(i)throw new Error("Invalid number");return null},e.Generator={map:(t,e)=>function*(...i){for(const s of t(...i))yield e(s)},filter:(t,e)=>function*(...i){for(const s of t(...i))e(s)&&(yield s)}},e.range=function*(t,e,i=1){let s=0,n=1+~~((e-t)/i);for(;s<n;)yield t+s++*i},e.union=(...t)=>t.reduce((t,e)=>new Set([...t,...e]),new Set),e.unionToArray=(...t)=>[...e.union(...t)]},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(12);var n;!function(t){t.DAYS="days",t.HOURS="hours",t.MINUTES="minutes",t.SECONDS="seconds",t.MILLISECONDS="milliseconds"}(n=e.TIME_TYPE||(e.TIME_TYPE={}));class a{static timeConvert(t,e){switch(e){case n.DAYS:return 24*t*60*60*1e3;case n.HOURS:return 60*t*60*1e3;case n.MINUTES:return 60*t*1e3;case n.SECONDS:return 1e3*t;case n.MILLISECONDS:return t;default:return-1}}static nearestFutureMinutes(t,e){const i=Math.ceil(e.minute()/t)*t;return e.clone().minute(i).second(0).millisecond(0)}static timeDisplay(t,e=5,i){let n=t;i&&"milliseconds"!=i&&(n=a.timeConvert(n,i));const r=s.duration(n);switch(e){case 0:return r.days().toString()+":"+r.hours()+":"+r.minutes()+":"+r.seconds()+":"+r.milliseconds();case 1:return"DD:HH:MM:SS:MS "+r.days()+":"+r.hours()+":"+r.minutes()+":"+r.seconds()+":"+r.milliseconds();case 2:return"DD"+r.days()+":HH"+r.hours()+":MM"+r.minutes()+":SS"+r.seconds()+":MS"+r.milliseconds();case 3:return"DD"+r.days().toString().padStart(2,"0")+":HH"+r.hours().toString().padStart(2,"0")+":MM"+r.minutes().toString().padStart(2,"0")+":SS"+r.seconds().toString().padStart(2,"0")+":MS"+r.milliseconds().toString().padStart(3,"0");case 4:return"D"+r.days()+":H"+r.hours()+":M"+r.minutes()+":S"+r.seconds()+":MS"+r.milliseconds();case 5:return"D"+r.days().toString().padStart(2,"0")+":H"+r.hours().toString().padStart(2,"0")+":M"+r.minutes().toString().padStart(2,"0")+":S"+r.seconds().toString().padStart(2,"0")+":MS"+r.milliseconds().toString().padStart(3,"0");default:return r.days().toString()+":"+r.hours()+":"+r.minutes()+":"+r.seconds()+":"+r.milliseconds()}}static timeConvertPlus(t){try{const e=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],i=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];let s=t.toDateString(),n=t.getTime(),a=this.pad(t.getMonth()+1,2),r=e[t.getMonth()],o=i[t.getDay()],u=this.pad(t.getDate(),2),d=t.getFullYear(),p=t.getHours(),l=t.getMinutes(),h=Math.ceil((t-new Date(t.getFullYear(),0,1))/864e5),c=this.pad(p,2),g=this.pad(l,2),y=this.pad(t.getSeconds(),2),m=this.pad(t.getMilliseconds(),3),f=null;f=0===p?12:p>12?p-12:p,f=""+f;let v=60*p+l;return v=v<720?"AM":"PM",{date:s,yearMonthDay:d+"-"+a+"-"+u,year:""+d,month:r,monthAsNumber:a,dayAsNumber:u,dayOfYearNumber:""+h,day:o,pmOrAm:v,hourAsAmPm:f,hour:c,timeHourMin:c+":"+g,time:c+":"+g+":"+y,minute:g,minutesSeconds:g+":"+y,seconds:y,milliseconds:m,epoch:""+n,rawDate:t}}catch(t){console.log(t)}}static pad(t,e){let i=t+"";for(;i.length<e;)i="0"+i;return i}}e.default=a},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(1),a=i(3);class r extends s.Node{constructor(){super(),this.nullableInputs=!0,this.dynamicInputsExist=!0,this.dynamicOutputsExist=!1,this.dynamicSettingsExist=!0,this.dynamicInputsField="inputs",this.dynamicOutputsField="outputs",this.dynamicInputStartPosition=0,this.dynamicInputsStartName="in",this.dynamicOutputsStartName="out",this.dynamicInputsType=n.Type.ANY,this.dynamicOutputsType=n.Type.ANY,this.dynamicMinInputs=2,this.dynamicMaxInputs=100,this.dynamicMinOutputs=2,this.dynamicMaxOutputs=100,this.dynamicDefaultInputs=2,this.dynamicDefaultOutputs=2,this.addDynamicInputsOnRange=(t=!0)=>{const e=this.dynamicInputsCount(),i=a.default.clamp(e,this.dynamicMinInputs,this.dynamicMaxInputs)-(this.getInputsCount()-this.dynamicInputStartPosition);if(i>0)for(let t=0;t<i;t++)this.addInputWithName();else if(i<0){const t=this.getInputsCount();for(let e=t;e>t+i;e--)this.removeInput(e-1)}t&&this.updateNodeInput()},this.addDynamicOutputsOnRange=(t=!0)=>{const e=this.dynamicOutputsCount(),i=a.default.clamp(e,this.dynamicMinOutputs,this.dynamicMaxOutputs)-this.getOutputsCount();if(i>0)for(let t=0;t<i;t++)this.addOutputWithName();else if(i<0){const t=this.getOutputsCount();for(let e=t;e>t+i;e--)this.removeOutput(e-1)}t&&this.updateNodeOutput()},this.settingWiseDynamicInputsAndSettingsUpdate=(t=!0)=>{const e=this.getInputsCount();this.addDynamicInputsOnRange(t);const i=this.getInputsCount();this.addDynamicSettings(e,i)},this.settingWiseDynamicInputsAndSettingsUpdateForBoolean=(t=!0)=>{this.dynamicInputsType=n.Type.BOOLEAN;const e=this.getInputsCount();this.addDynamicInputsOnRange(t);const i=this.getInputsCount(),a=this.dynamicInputsStartName;for(let t=e;t<i;t++)this.settings[`${a} ${this.dynamicIndex(t)}`]||(this.settings[`${a} ${this.dynamicIndex(t)}`]={description:`${a} ${this.dynamicIndex(t)}`,type:s.SettingType.DROPDOWN,config:{items:[{value:!1,text:"false"},{value:!0,text:"true"},{value:null,text:"null"}]},value:null});for(let t=i;t<e;t++)delete this.settings[`${a} ${this.dynamicIndex(t)}`]},this.dynamicInputsCount=()=>this.settings[this.dynamicInputsField].value,this.dynamicOutputsCount=()=>this.settings[this.dynamicOutputsField].value,this.addInputWithName=()=>{let t=this.getFreeInputId(),e=this.getInputSetting(),i=`${this.dynamicInputsStartName} ${t+1-this.dynamicInputStartPosition}`;this.dynamicSettingsExist&&(i=`[${i}]`);let s={name:i,type:this.dynamicInputsType,setting:e};this.inputs||(this.inputs={}),this.inputs[t]=s,this.onInputAdded&&this.onInputAdded(s)},this.addOutputWithName=()=>{let t=this.getFreeOutputId(),e={name:`${this.dynamicOutputsStartName} ${t+1}`,type:this.dynamicOutputsType};this.outputs||(this.outputs={}),this.outputs[t]=e,this.onOutputAdded&&this.onOutputAdded(e)},this.addDynamicSettings=(t,e)=>{const i=s.SettingType.STRING?"":null,a=this.dynamicInputsStartName,r=n.convertType(this.dynamicInputsType);for(let s=t;s<e;s++)this.settings[`${a} ${this.dynamicIndex(s)}`]||(this.settings[`${a} ${this.dynamicIndex(s)}`]={description:`${a} ${this.dynamicIndex(s)}`,value:i,type:r});for(let i=e;i<t;i++)delete this.settings[`${a} ${this.dynamicIndex(i)}`]},this.dynamicIndex=t=>t+1-this.dynamicInputStartPosition}setup(){this.dynamicInputsExist&&(this.settings.inputs={description:"Inputs count",value:this.dynamicDefaultInputs,type:s.SettingType.NUMBER}),this.dynamicOutputsExist&&(this.settings.outputs={description:"Outputs count",value:this.dynamicDefaultOutputs,type:s.SettingType.NUMBER})}init(){this.dynamicInputsExist&&this.changeDynamicInputsAndSettings(!1),this.dynamicOutputsExist&&this.addDynamicOutputsOnRange(!1)}onAfterSettingsChange(){this.dynamicInputsExist&&this.changeDynamicInputsAndSettings(),this.dynamicOutputsExist&&this.addDynamicOutputsOnRange()}changeDynamicInputsAndSettings(t=!0){this.dynamicSettingsExist?this.dynamicInputsType===n.Type.BOOLEAN?this.settingWiseDynamicInputsAndSettingsUpdateForBoolean(t):this.settingWiseDynamicInputsAndSettingsUpdate(t):this.addDynamicInputsOnRange(t)}getInputSetting(){return{exist:this.dynamicSettingsExist,nullable:this.nullableInputs,hidden:!1}}}e.FlexibleNode=r},function(t,e){t.exports=require("logplease")},function(t,e,i){"use strict";var s,n,a,r,o,u,d,p,l,h,c,g,y,m,f,v,T,O,I,S,b,N,E,D,R,A,C,_,P,M,U,w,x,B,k,L,F,j,G,V,W,H,q,$,Y,J,z,K,Q,Z,X,tt,et,it,st,nt,at,rt,ot,ut,dt,pt,lt,ht,ct,gt,yt,mt,ft,vt,Tt;Object.defineProperty(e,"__esModule",{value:!0});const Ot=null===(s=process)||void 0===s?void 0:s.env,It={rubix:{version:"1.5.2-c5466ec",buildNb:""},secretKey:(null===(n=Ot)||void 0===n?void 0:n.SECRET_KEY)||"",port:parseInt((r=null===(a=Ot)||void 0===a?void 0:a.PORT,null!=r?r:"1313")),dataDir:null===(o=Ot)||void 0===o?void 0:o.DATA_DIR,loopInterval:parseInt((d=null===(u=Ot)||void 0===u?void 0:u.LOOP_INTERVAL,null!=d?d:"100")),backendSync:{enabled:/true|1/i.test((l=null===(p=Ot)||void 0===p?void 0:p.BACKEND_ENABLED,null!=l?l:"false")),baseUrl:(c=null===(h=Ot)||void 0===h?void 0:h.BACKEND_API,null!=c?c:""),nodeRefreshIntervalSeconds:parseInt((y=null===(g=Ot)||void 0===g?void 0:g.NODE_DISTANCE,null!=y?y:"60")),pointRefreshIntervalSeconds:parseInt((f=null===(m=Ot)||void 0===m?void 0:m.NODE_REFRESH_INTERVAL_SEC,null!=f?f:"60")),nodeDistance:parseInt((T=null===(v=Ot)||void 0===v?void 0:v.POINT_REFRESH_INTERVAL_SEC,null!=T?T:"60"))},bsa:{baseURL:(I=null===(O=Ot)||void 0===O?void 0:O.BSA_BASEURL,null!=I?I:""),username:(b=null===(S=Ot)||void 0===S?void 0:S.BSA_USERNAME,null!=b?b:""),password:(E=null===(N=Ot)||void 0===N?void 0:N.BSA_PASSWORD,null!=E?E:""),paths:{measurement:{path:(R=null===(D=Ot)||void 0===D?void 0:D.BSA_PATHS_MEASUREMENT_PATH,null!=R?R:""),accept:(C=null===(A=Ot)||void 0===A?void 0:A.BSA_PATHS_MEASUREMENT_ACCEPT,null!=C?C:"")},alarm:{path:(P=null===(_=Ot)||void 0===_?void 0:_.BSA_PATHS_ALARM_PATH,null!=P?P:""),accept:(U=null===(M=Ot)||void 0===M?void 0:M.BSA_PATHS_ALARM_ACCEPT,null!=U?U:""),contentType:(x=null===(w=Ot)||void 0===w?void 0:w.BSA_PATHS_ALARM_CONTENTTYPE,null!=x?x:"")},device:{path:(k=null===(B=Ot)||void 0===B?void 0:B.BSA_PATHS_DEVICE_PATH,null!=k?k:"")}}},ditto:{baseURL:(F=null===(L=Ot)||void 0===L?void 0:L.DITTO_BASEURL,null!=F?F:""),username:(G=null===(j=Ot)||void 0===j?void 0:j.DITTO_USERNAME,null!=G?G:""),password:(W=null===(V=Ot)||void 0===V?void 0:V.DITTO_PASSWORD,null!=W?W:"")},pg:{baseURL:(q=null===(H=Ot)||void 0===H?void 0:H.PG_BASEURL,null!=q?q:"")},influxDb:{protocol:(Y=null===($=Ot)||void 0===$?void 0:$.INFLUX_DB_PROTOCOL,null!=Y?Y:"http"),host:(z=null===(J=Ot)||void 0===J?void 0:J.INFLUX_DB_HOST,null!=z?z:""),port:(Q=null===(K=Ot)||void 0===K?void 0:K.INFLUX_DB_PORT,null!=Q?Q:""),databaseName:(X=null===(Z=Ot)||void 0===Z?void 0:Z.INFLUX_DB_DB_NAME,null!=X?X:""),username:(et=null===(tt=Ot)||void 0===tt?void 0:tt.INFLUX_DB_USERNAME,null!=et?et:""),password:(st=null===(it=Ot)||void 0===it?void 0:it.INFLUX_DB_PASSWORD,null!=st?st:"")},edge28:{baseURL:(at=null===(nt=Ot)||void 0===nt?void 0:nt.EDGE_28_BASEURL,null!=at?at:""),port:parseInt((ot=null===(rt=Ot)||void 0===rt?void 0:rt.EDGE_28_PORT,null!=ot?ot:"5000")),apiVer:(dt=null===(ut=Ot)||void 0===ut?void 0:ut.EDGE_28_API_VER,null!=dt?dt:"")},mqtt:{protocol:(lt=null===(pt=Ot)||void 0===pt?void 0:pt.MQTT_PROTOCOL,null!=lt?lt:"mqtt"),host:(ct=null===(ht=Ot)||void 0===ht?void 0:ht.MQTT_HOST,null!=ct?ct:""),port:parseInt((yt=null===(gt=Ot)||void 0===gt?void 0:gt.MQTT_PORT,null!=yt?yt:"1883")),username:(ft=null===(mt=Ot)||void 0===mt?void 0:mt.MQTT_USERNAME,null!=ft?ft:""),password:(Tt=null===(vt=Ot)||void 0===vt?void 0:vt.MQTT_PASSWORD,null!=Tt?Tt:"")}};e.RUBIX_VERSION=`v${It.rubix.version}${It.rubix.buildNb&&`-${It.rubix.buildNb}`}`,e.default=It},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.EDGES_PARENT_CONTAINER_TYPE="IoT/edges-container",e.MODULES_PARENT_CONTAINER_TYPE="IoT/modules-container",e.SERVICES_PARENT_CONTAINER_TYPE="IoT/services-container",e.EDGE_CONTAINER_TYPE="IoT/edge",e.NETWORK_CONTAINER_TYPE="IoT/network",e.DEVICE_CONTAINER_TYPE="IoT/device",e.GROUP_CONTAINER_TYPE="IoT/group",e.POINT_NODE_TYPE="IoT/point",e.SERVICE_NODE_TYPE="IoT/service",e.MODULE_NODE_TYPE="IoT/module",e.IOT_TYPES=[e.EDGES_PARENT_CONTAINER_TYPE,e.MODULES_PARENT_CONTAINER_TYPE,e.SERVICES_PARENT_CONTAINER_TYPE,e.EDGE_CONTAINER_TYPE,e.NETWORK_CONTAINER_TYPE,e.DEVICE_CONTAINER_TYPE,e.GROUP_CONTAINER_TYPE,e.POINT_NODE_TYPE,e.SERVICE_NODE_TYPE,e.MODULE_NODE_TYPE],e.MODBUS_RTU_NETWORK="protocols/modbus/modbus-rtu-network",e.MODBUS_RTU_DEVICE="protocols/modbus/modbus-rtu-device",e.MODBUS_RTU_POINT="protocols/modbus/modbus-rtu-point",e.BACNET_NETWORK="protocols/bacnet/bacnet-network",e.BACNET_DEVICE="protocols/bacnet/bacnet-device",e.BACNET_POINT="protocols/bacnet/bacnet-point",e.EDGE_28_NETWORK="protocols/nube/edge-28-network",e.EDGE_28_INPUT="protocols/nube/edge-28-input",e.EDGE_28_OUTPUT="protocols/nube/edge-28-output",e.MQTT_NETWORK="protocols/mqtt/mqtt-network",e.MQTT_POINT_WRITE="protocols/mqtt/mqtt-point-write",e.MQTT_POINT_READ="protocols/mqtt/mqtt-point-read",e.UNKNOWN_NODE="unknown/unknown"},function(t,e){t.exports=require("axios")},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class s{static getId(t,e){return`c${t}n${e}`}}e.default=s,s._nodes={}},function(t,e){t.exports=require("moment-timezone")},function(t,e){t.exports=require("lodash")},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(9),a=i(0);class r extends s.Node{constructor(t){super(t),this.description="Contains other nodes",this.title="Folder",this.settings.name={description:"Folder name",value:"Folder",type:s.SettingType.STRING}}shouldRejectNodeType(t){return n.IOT_TYPES.includes(t)}onCreated(){this.setupSubContainer(),this.initializeNameValue()}onAdded(){this.applyTitle()}onAfterSettingsChange(t,e){this.applyTitle()}onRemoved(){for(let t in this.sub_container._nodes){let e=this.sub_container._nodes[t];e.container.remove(e)}delete a.Container.containers[this.sub_container.id]}configure(t,e=!1,i=!0){super.configure(t);try{this.sub_container=a.Container.containers[t.sub_container.id],this.sub_container||(this.sub_container=new a.Container(this.side,t.sub_container.id)),this.sub_container.container_node=this,this.sub_container.parent_container_id=this.container.id,this.sub_container.parent_id=this.id,i&&this.sub_container.configure(t.sub_container,!0)}catch(t){this.debugErr(`ERROR: configure() container node: ${t}`)}}serialize(){try{let t=super.serialize();return t.sub_container=this.sub_container.serialize(),t}catch(t){this.debugErr(`ERROR: serialize() container node: ${t}`)}}getExtraMenuOptions(t,e){let i=this;return[{content:"Open",callback:function(){e.openContainer(i.sub_container.id)}},null]}onExecute(){this.isUpdated&&(this.isRecentlyActive=!0),this.sub_container.runStep()}applyTitle(){this.title=this.settings.name.value,this.sub_container.name=this.title,this.size=this.computeSize()}getInitialTitle(){return`${this.title} ${this.sub_container.id}`}setupSubContainer(){this.sub_container?this.sub_container=a.Container.containers[this.sub_container.id]:this.sub_container=new a.Container(this.side),this.sub_container.container_node=this,this.sub_container.parent_container_id=this.container.id,this.sub_container.parent_id=this.id,this.container.db&&this.container.db.updateLastContainerId(this.sub_container.id)}initializeNameValue(){this.settings.name.value=this.getInitialTitle()}}e.ContainerNode=r},function(t,e){t.exports=require("express")},function(t,e,i){"use strict";var s=this&&this.__decorate||function(t,e,i,s){var n,a=arguments.length,r=a<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,i,s);else for(var o=t.length-1;o>=0;o--)(n=t[o])&&(r=(a<3?n(r):a>3?n(e,i,r):n(e,i))||r);return a>3&&r&&Object.defineProperty(e,i,r),r};Object.defineProperty(e,"__esModule",{value:!0});const n=i(2),a=i(0);class r extends n.Node{constructor(t,e,i){super(),this.name=i&&i.name,this.titlePrefix=t,this.defaultTitle=t,this.uiElementType=e,this.isDashboardNode=!0,this.settings.title={description:"Title",value:this.titlePrefix,type:n.SettingType.STRING},this.settings["ui-panel"]={description:"Ui Panel Name",type:n.SettingType.STRING}}init(){this.settings["ui-panel"]&&(this.uiPanelValue=this.settings["ui-panel"]&&this.settings["ui-panel"].value)}onCreated(){this.settings["ui-panel"].value=this.uiPanelValue||this.container.name,this.side==a.Side.server&&this.container.dashboard.onNodeChangePanelOrTitle(this,this.settings["ui-panel"].value,this.settings.title.value)}onAdded(){this.changeTitle(this.settings.title.value)}onBeforeSettingsChange(t,e){this.side==a.Side.server&&(this.name=e,this.container.dashboard.onNodeChangePanelOrTitle(this,t["ui-panel"].value,t.title.value)),this.changeTitle(t.title.value)}changeTitle(t){this.defaultTitle===t?this.title=t:this.title=this.defaultTitle+": "+t}onRemoved(){this.side==a.Side.server&&this.container.dashboard.onNodeRemoved(this)}setState(t,e=!0){if(this.properties.state=t,null!=this.container){if(e){let e={id:this.id,cid:this.container.id,state:t};if(this.side==a.Side.server){let t=this.container.server_dashboard_socket,i=this.settings["ui-panel"].value;t.in(""+i).emit("dashboardElementGetNodeState",e)}}this.storeInDatabase()}}storeInDatabase(){this.container&&this.container.db&&this.container.db.updateNode(this.id,this.container.id,{$set:{properties:this.properties}})}sendMessageToDashboardSide(t){let e={id:this.id,cid:this.container.id,message:t};if(this.side==a.Side.server){let t=this.container.server_dashboard_socket,i=this.settings["ui-panel"].value;t.in(""+i).emit("nodeMessageToDashboardSide",e)}else this.container.client_socket.emit("nodeMessageToDashboardSide",e)}getState(){return this.properties.state}}s([i(63).default(1e3)],r.prototype,"storeInDatabase",null),e.UiNode=r},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(8),n=i(257);class a{}e.default=a,a.encrypt=t=>n.AES.encrypt(t,s.default.secretKey).toString(),a.decrypt=t=>n.AES.decrypt(t,s.default.secretKey).toString(n.enc.Utf8)},function(t,e){t.exports=require("node-bacnet")},function(t,e){t.exports=require("child_process")},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(6),n=i(1);class a extends s.FlexibleNode{constructor(){super(),this.dynamicInputsType=n.Type.NUMBER}onAdded(){this.size=this.computeSize(),this.onInputUpdated()}onInputUpdated(){}getDefinedInputsOrSettingsValues(){const t=[];for(let e=0;e<this.getInputsCount();e++){const i=this.getInputData(e);null!=i&&t.push(i)}return t}}e.default=a},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),i(95).install();const s=i(7).create("app",{color:2}),n=i(38),a=i(96),r=i(97)(a.argv.slice(2)),o=a.env.DATA_DIR||r.datadir,u=r.envFile||".env",d=n.isAbsolute(u)?u:n.resolve(a.cwd(),u);a.env.DATA_DIR=n.isAbsolute(o)?o:n.resolve(a.cwd(),o),i(98).config({path:d}),global.__rootdirname=n.resolve(__dirname),s.info("----------------------------- Rubix Wires -----------------------------"),s.info(`Process Dir       : '${a.cwd()}'`),s.info(`Working Dir       : '${global.__rootdirname}'`),s.info(`Data Dir          : '${a.env.DATA_DIR}'`),s.info(`Environment file  : '${d}'`);const p=i(99),l=i(8),h=i(41),c=i(0),g=i(106),y=i(107);class m{constructor(){this.createServer(),this.start()}start(){this.rootContainer||(this.registerNodes(),this.createRootContainer()),this.dashboard=new g.Dashboard(this.server.dashboardSocket),h.dataBase.enable&&(this.db||this.connectDatabase(),this.db&&this.loadDatabase(!0)),this.rootContainer&&(this.db&&(this.rootContainer.db=this.db),this.dashboard&&(this.rootContainer.dashboard=this.dashboard)),this.rootContainer.run(l.default.loopInterval)}createServer(){this.server=new y.Server(global.__rootdirname)}registerNodes(){i(130);const t=c.Container.nodes_types?Object.keys(c.Container.nodes_types).length:0;s.debug("Registered "+t+" nodes types")}createRootContainer(){this.rootContainer=new c.Container(c.Side.server),this.server.editorSocket&&(this.rootContainer.server_editor_socket=this.server.editorSocket.io),this.server.dashboardSocket&&(this.rootContainer.server_dashboard_socket=this.server.dashboardSocket.io)}connectDatabase(){let t;if(!h.dataBase.useInternalDb)throw"External db not implementer yet";t=i(402).db,this.db=t}loadDatabase(t){this.db.asyncLoadDatabase().then(e=>{this.onDbLoadSuccess(e,t)})}startBackend(){new p.Backend(this.db).start()}onDbLoadSuccess(t,e){e&&(this.db.getLastContainerId((t,e)=>{e&&(c.Container.last_container_id=e)}),this.db.getLastRootNodeId((t,e)=>{e&&(f.rootContainer.last_node_id=e)}),this.db.getNodes((t,e)=>{if(!e)return;let i=c.Container.containers,n=0;for(let t of e){let e=i[t.cid];e||(e=new c.Container(c.Side.server,t.cid)),n++,e.createNode(t.type,null,t)}for(let t in c.Container.containers){let e=c.Container.containers[t];for(let t in e._nodes){let i=e._nodes[t];i.onDbReaded&&i.onDbReaded()}}this.dashboard.loadFromDatabase(this.db);let a=Object.keys(i).length;i[0]&&a--,s.info("Imported "+a+" containers, "+n+" nodes from database"),setTimeout(()=>this.startBackend(),1)}))}}e.App=m;let f=new m;e.default=f},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class s{}e.default=s,s.frog="/images/logos/iot-lora-alliance-logo.png",s.aiIcon="/images/node-editor/icons/points/ai.svg",s.aiColour="#262B2F",s.uiMainIcon="/images/node-editor/icons/logic-bool/and2.svg",s.uiMainColour="#262B2F",s.logicMainColour="#262B2F",s.logicAndIcon="/images/node-editor/icons/logic-bool/and2.svg",s.logicOrIcon="/images/node-editor/icons/logic-bool/or.svg",s.logicNotIcon="/images/node-editor/icons/logic-bool/not.svg",s.compareGreaterIcon="/images/node-editor/icons/logic-compare/greater-than-equal-solid.svg",s.mathMainColour="#262B2F",s.mathMainIcon="/images/node-editor/icons/math-arithmetic/plus-solid.svg",s.mathAddIcon="/images/node-editor/icons/math-arithmetic/plus-solid.svg",s.mathSubIcon="/images/node-editor/icons/math-arithmetic/minus-solid.svg",s.mathDivideIcon="/images/node-editor/icons/math-arithmetic/divide-solid.svg",s.mathTimesIcon="/images/node-editor/icons/math-arithmetic/times-solid.svg",s.edgeNetwork="/images/node-editor/icons/logic-bool/not.svg"},function(t,e){t.exports=require("nedb")},function(t,e){t.exports=require("moment")},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class s{constructor(){this.stack=Promise.resolve(null)}process(t){const e=()=>t();return this.stack=this.stack.then(e,t=>(console.log(t),e())),Promise.resolve(this.stack)}}e.PromiseActor=s,e.singleton=new s},function(t,e){t.exports=require("fs")},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(26),a=i(38);class r{static getDir(){return a.dirname(__filename)}static getAllFiles(t){if(null!==t)return new Promise((e,i)=>{n.readdir(t,(t,s)=>{t&&i(t);let n=[];return s.forEach(t=>{n.push(t)}),e(n),n})})}static checkFileExists(t){return n.existsSync(t)}static createFile(t){return new Promise((e,i)=>{n.open(t,"r",(s,a)=>{if(s)n.writeFile(t,"",t=>{t&&i(t);e("The file was created!")});else{e("The file exists!")}})})}static createDirectory(t){const e=a.normalize(t);return new Promise((t,i)=>{n.stat(e,s=>{s?"ENOENT"===s.code?n.mkdir(e,s=>{s?i(s):t(e)}):i(s):t(e)})})}static ensureDirSync(t){try{return n.mkdirSync(t)}catch(t){if("EEXIST"!==t.code)throw t}}static readFile(t){return new Promise((e,i)=>{n.readFile(t,(t,s)=>{t&&i(t),e(s)})})}static checkForOldDirectory(t){return s(this,void 0,void 0,(function*(){try{const e=yield r.readFile(t);if(!e)return!1;Boolean(e.toString())}catch(t){return!1}}))}static readFileReturnJson(t){return s(this,void 0,void 0,(function*(){return new Promise((e,i)=>{n.readFile(t,(t,s)=>{let n=[];t&&i(t),s.toString().split("\n").forEach((function(t,e,i){0!==t.length&&n.push(t)}));let a=JSON.stringify(n),r=JSON.parse(a);e(r)})})}))}static appendFile(t,e){return s(this,void 0,void 0,(function*(){return new Promise((i,s)=>{let a="The file "+t+" was saved!";n.appendFile(t,e,t=>{t&&s(t),i(a)})})}))}static writeFile(t,e){return s(this,void 0,void 0,(function*(){return new Promise((i,s)=>{let a="The file "+t+" was saved!";n.writeFile(t,e,t=>{t&&s(t),i(a)})})}))}}e.default=r},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(8).default.edge28;e.SEND_PAYLOAD_TO_CHILD="SEND_PAYLOAD_TO_CHILD",e.ADD_POINT="ADD_POINT",e.REMOVE_POINT="REMOVE_POINT",e.edgeIp=s.baseURL,e.edgePort=s.port,e.edgeApiVer=s.apiVer},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(4);class n{constructor(){}}e.PointValueCreator=n,n.init=(t,e,i)=>{if(e&&(e<1||e>16))throw new Error("Priority must be in range [1, 16]");let s=new a;return s.presentValue=null!=t?t:null,s.priority=void 0===e?16:e,s.priorityArray=n.normalizePriorityArray(i),s},n.by=t=>{var e;let i=n.normalizePriorityArray(t),a=null!=(e=Object.entries(i).find(t=>t[1]))?e:[16,null];return n.init(s.convertToNumber(a[1]),s.convertToNumber(a[0]),i)},n.create=(t,e,i)=>{var a;let r=n.init(t,e,i);if(r.isResetState())return r;let o=null!=(a=Object.entries(r.priorityArray).find(t=>t[1]))?a:[16,null];return r.priorityArray[r.priority]=r.presentValue,o&&s.convertToNumber(o[0])===r.priority&&null===r.presentValue&&(o=Object.entries(r.priorityArray).find(([t,e])=>s.isNotNull(e))),o&&(r.priority>s.convertToNumber(o[0])||null===r.presentValue)&&(r.priority=s.convertToNumber(o[0]),r.presentValue=o[1]),r},n.createPriorityArray=()=>Array.from(s.range(1,16)).reduce((t,e)=>(t[e]=null,t),{}),n.normalizePriorityArray=t=>{if(!t)return n.createPriorityArray();if(t instanceof Array){let e=t.length;if(0===e)return n.createPriorityArray();if(16!==e)throw new Error("Invalid priority array");return t.reduce((t,e,i)=>(t[i+1]=s.convertToNumber(e),t),{})}if("object"!=typeof t)throw new Error("Invalid priority array");let e=n.createPriorityArray();for(let i in e)t.hasOwnProperty(i)&&(e[i]=s.convertToNumber(t[i]));return e};class a{isResetState(){return s.isNull(this.presentValue)&&s.isNull(this.priority)}changedOfValue(t){if(!t)return this;if(this.presentValue!==t.presentValue||this.priority!==t.priority)return this;let e=new a;for(const i in this.priorityArray)if(this.priorityArray[i]!==t.priorityArray[i])return e.priority=s.convertToNumber(i),e.presentValue=this.priorityArray[i],e.priorityArray=this.priorityArray,e;return null}merge(t){if(!t||!t.priorityArray)return n.create(this.presentValue,this.priority,this.priorityArray);if(this.isResetState())return n.create(null,16);let e={};for(const i in this.priorityArray)e[i]=s.isNull(this.priorityArray[i])&&s.isNotNull(t.priorityArray[i])?t.priorityArray[i]:this.priorityArray[i];return n.create(this.presentValue,this.priority,e)}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(13),n=i(25),a=i(0),r=i(2);class o extends r.Node{entry(){return this.properties.entry}entryId(){return this.entry()&&this.entry().entryId()}applyEntry(t){this.properties.entry=Object.assign(this.entryFactory(),t),this.title=this.namePrefix()+" "+this.properties.entry.label(),this.size=this.computeSize(),this.settings.name&&(this.settings.name.value=this.entryId()),s.merge(this.settings,this.createSettingForm(t)),this.broadcastSettingsToClients(),this.broadcastTitleToClients()}createSettingForm(t){return Object.keys(this.settingFields).map(e=>({[e]:{description:e,value:t?t[e]:null,type:this.settingFields[e]}})).reduce(s.merge)}deactivate(){this.properties.entry=null}onCreated(){if(this.entry())this.applyEntry(this.entry());else{if(this.side!==a.Side.server)return;n.singleton.process(()=>this.createEntry().then(t=>this.applyEntry(t)).catch(t=>{this.displayError(t,"Entry not created."),console.log(t),this.deactivate(),this.container.removeBroadcasted(this)}))}}onAdded(){this.entry()&&this.applyEntry(this.entry())}onAfterSettingsChange(){if(this.side!==a.Side.server)return;const t={},e={};Object.keys(this.settingFields).filter(t=>this.settingFields[t]!==r.SettingType.READONLY).forEach(i=>{t[i]=this.settings[i].value,e[i]=this.entry()&&this.entry()[i]}),s.isEqual(e,t)||n.singleton.process(()=>this.updateEntry(t).catch(t=>this.displayError(t,"Unable to update entry remotely.")))}onRemoved(){return this.side===a.Side.server&&this.entry()?n.singleton.process(()=>this.deleteEntry().catch(t=>{this.displayError(t,"Failed to remove entry from backend."),console.log(t)})):Promise.resolve()}findFreeIdentifier(){return this.getTakenIdentifiers().then(t=>{for(let e=1;;e+=1){const i=this.makeIdentifier(e);if(!t.includes(i))return i}})}getTakenIdentifiers(){const t=a.Container.rootContainer().getNodesByClass(this.constructor,!0);return Promise.resolve(t.filter(t=>t.entry()).map(t=>t.entry().identifier()))}makeIdentifier(t){return`WIRES_${this.namePrefix().toUpperCase()}_${t}`}}e.default=o},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(12),a=i(2),r=i(1),o=i(3),u=i(5),d=i(68),p=i(10),l=i(0),h=i(43),c=i(8),g=i(45);var y,m;!function(t){t[t.COV=0]="COV",t[t.PERIODIC=1]="PERIODIC",t[t.TRIGGER_ONLY=2]="TRIGGER_ONLY"}(y||(y={})),function(t){t[t.POSTGRES=0]="POSTGRES",t[t.InfluxDB=1]="InfluxDB"}(m||(m={}));class f extends a.Node{constructor(){super(...arguments),this.interval=-1,this.dynamicInputStartPosition=2,this.alarmCount=0,this.tagCount=0,this.lastTrigger=!1}addHistoryConfiguration(){this.addInput("histTrigger",r.Type.BOOLEAN),this.addInput("clearStoredHis",r.Type.BOOLEAN),this.addOutput("histError",r.Type.ANY),this.addOutput("storedHistCount",r.Type.NUMBER),this.addOutput("lastHistExport",r.Type.STRING),this.settings.history_group={description:"History Settings",value:"",type:a.SettingType.GROUP},this.settings.databaseType={description:"Database Type",type:a.SettingType.DROPDOWN,config:{items:[{value:m.POSTGRES,text:"Postgres"},{value:m.InfluxDB,text:"InfluxDB"}]},value:m.POSTGRES},this.settings.enable={description:"History Enable",value:!1,type:a.SettingType.BOOLEAN},this.settings.tableName={description:"Measurement Name",value:"",type:a.SettingType.STRING},this.addInputWithSettings("pointName",r.Type.STRING,"","Point Name"),this.settings.historyMode={description:"History Logging Mode",type:a.SettingType.DROPDOWN,config:{items:[{value:y.COV,text:"Change Of Value (COV)"},{value:y.PERIODIC,text:"Periodic"},{value:y.TRIGGER_ONLY,text:"Trigger Only"}]},value:y.COV},this.settings.dataType={description:"Data type for storing",type:a.SettingType.DROPDOWN,config:{items:[{value:r.Type.NUMBER,text:"Number"},{value:r.Type.BOOLEAN,text:"Boolean"},{value:r.Type.STRING,text:"String"}]},value:r.Type.NUMBER},this.settings.threshold={description:"COV Threshold",value:0,type:a.SettingType.NUMBER},this.settings.period={description:"Logging Interval",value:15,type:a.SettingType.NUMBER},this.settings.periodUnits={description:"Units",type:a.SettingType.DROPDOWN,config:{items:[{value:u.TIME_TYPE.MILLISECONDS,text:"Milliseconds"},{value:u.TIME_TYPE.SECONDS,text:"Seconds"},{value:u.TIME_TYPE.MINUTES,text:"Minutes"},{value:u.TIME_TYPE.HOURS,text:"Hours"}]},value:u.TIME_TYPE.MINUTES},this.settings["storage-limit"]={description:"Local Storage Limit (Max 50)",value:25,type:a.SettingType.NUMBER},this.settings.minuteRoundValue={description:"Round minutes up in increments of",value:0,type:a.SettingType.NUMBER},this.settings.decimals={description:"Decimal Places (Limit 5)",value:3,type:a.SettingType.NUMBER},this.settings.timeAsString={description:"Display Timestamp as",type:a.SettingType.DROPDOWN,config:{items:[{value:!1,text:"Numeric"},{value:!0,text:"String"}]},value:!0},this.settings.alarm_group={description:"Alarm Settings",value:"",type:a.SettingType.GROUP},this.settings.alarms_count={description:"Alarms Count (Max 10)",value:0,type:a.SettingType.NUMBER},this.settings.tags_group={description:"Tag Settings",value:"",type:a.SettingType.GROUP},this.settings.tags_count={description:"Tag Count (Max 10)",value:0,type:a.SettingType.NUMBER},this.properties.obj=[]}setup(){this.addHistoryConfiguration()}init(t){this.historyFunctionsForAfterSettingsChange(t.settings,!1),this.lastTrigger=!1}changeInputDynamically(t){this.assignInputsOutputs(),-1===this.tableNameInput&&t.databaseType.value===m.InfluxDB?(this.pointNameInput&&this.removeInput(this.pointNameInput),this.addInput("[tableName]",r.Type.STRING,{exist:!0,nullable:!1,hidden:!1}),this.addInput("[pointName]",r.Type.STRING,{exist:!0,nullable:!1,hidden:!1})):-1!==this.tableNameInput&&t.databaseType.value===m.POSTGRES&&(this.pointNameInput&&this.removeInput(this.pointNameInput),this.removeInput(this.tableNameInput),this.addInput("[pointName]",r.Type.STRING,{exist:!0,nullable:!1,hidden:!1}))}onAdded(){this.assignInputsOutputs(),this.resetOutputs(),this.doPeriodicHistoryFunctions()}onInputUpdated(){return s(this,void 0,void 0,(function*(){this.getInputData(this.clearStoredHisInput)&&(this.properties.obj=[],this.updateHistoryCountOutput()),yield this.doNonPeriodicHistoryFunctions()}))}onAfterSettingsChange(){return s(this,void 0,void 0,(function*(){this.historyFunctionsForAfterSettingsChange(),yield this.doNonPeriodicHistoryFunctions(),this.doPeriodicHistoryFunctions()}))}onRemoved(){clearInterval(this.timeoutFunc)}assignInputsOutputs(){this.tableNameInput=-1,this.pointNameInput=-1;for(let t in this.inputs)this.inputs.hasOwnProperty(t)&&("histTrigger"==this.inputs[t].name&&(this.histTriggerInput=Number(t)),"clearStoredHis"==this.inputs[t].name&&(this.clearStoredHisInput=Number(t)),"[tableName]"==this.inputs[t].name&&(this.tableNameInput=Number(t)),"[pointName]"==this.inputs[t].name&&(this.pointNameInput=Number(t)));for(let t in this.outputs)this.outputs.hasOwnProperty(t)&&("histError"==this.outputs[t].name?this.histErrorOutput=Number(t):"storedHistCount"==this.outputs[t].name?this.storedHistCountOutput=Number(t):"lastHistExport"==this.outputs[t].name&&(this.lastHistExportOutput=Number(t)))}addHistorySettingsConfig(t=0,e=!0){this.settingConfigs.hasOwnProperty("groups")&&this.settingConfigs.hasOwnProperty("conditions")||this.setSettingsConfig({groups:this.settingConfigs.groups||[],conditions:this.settingConfigs.conditions||{}}),this.settingConfigs.groups.push({period:{weight:2},periodUnits:{}}),this.settingConfigs.conditions.tableName=t=>t.databaseType.value===m.InfluxDB,this.settingConfigs.conditions.threshold=t=>t.historyMode.value===y.COV,this.settingConfigs.conditions.period=t=>t.historyMode.value===y.PERIODIC,this.settingConfigs.conditions.periodUnits=t=>t.historyMode.value===y.PERIODIC,this.settingConfigs.conditions.alarms_count=t=>t.databaseType.value===m.InfluxDB,this.settingConfigs.conditions.tags_count=t=>t.databaseType.value===m.InfluxDB,this.valueInput=t,this.takeValueFromInput=e}resetOutputs(){this.updateHistoryCountOutput()}doNonPeriodicHistoryFunctions(){return s(this,void 0,void 0,(function*(){if(this.side!==l.Side.server)return;if(!this.settings.enable.value)return;let t=null;t=this.takeValueFromInput?this.getInputData(this.valueInput):this.outputs[this.valueInput].data,this.checkTriggered()?yield this.storeLogEntry(t):this.checkCOV(t)&&(yield this.storeLogEntry(t)),this.properties.obj.length>0&&(yield this.trySendStoredData())}))}trySendStoredData(){return s(this,void 0,void 0,(function*(){let t=this.settings.decimals.value;t=o.default.clamp(t,0,5);const e=[];this.properties.obj.forEach(i=>{const s=this.settings.dataType.value;i.payload=this.convertInput(i.payload,s,t);const a={};a.point=this.getInputData(this.pointNameInput)||"undefined",Object.keys(i).map(t=>{"payload"!==t&&"timestamp"!==t&&"tags"!==t&&(a[t]=i[t])});for(let t=0;t<10;t++)a["tag"+(t+1)]=i.tags[t]||null;e.push({measurement:this.getInputData(this.tableNameInput),fields:{val:i.payload},timestamp:1e6*n(i.timestamp).valueOf(),tags:a})});let i=!1;if(this.settings.databaseType.value===m.POSTGRES){let t,s;try{t=yield h.default.getClientID(this)}catch(e){t="unknownClientID"}try{s=yield h.default.getDeviceID(this)}catch(t){s="unknownDeviceID"}const a=e.map(e=>({deviceid:s,clientid:t,val:e.fields.val,point:e.tags.point,ts:n(Number(e.timestamp)/1e6).toISOString()})),r=this,o=c.default.pg.baseURL;try{yield p.default({method:"post",url:o,data:a})}catch(t){this.setOutputData(r.histErrorOutput,String(t)),i=!0}}else if(m.InfluxDB==m.InfluxDB){const t={},{protocol:s,host:n,port:a,databaseName:r,username:o,password:u}=c.default.influxDb,d=new g.InfluxDB({host:n,port:a,protocol:"https"===s?"https":"http",database:r,username:o,password:u});try{yield d.writePoints(e,t)}catch(t){this.setOutputData(this.histErrorOutput,String(t)),this.debugErr(t),i=!0}}i||(this.properties.obj=[],this.setOutputData(this.histErrorOutput,""),this.settings.timeAsString.value?this.setOutputData(this.lastHistExportOutput,n().format(),!0):this.setOutputData(this.lastHistExportOutput,n().valueOf(),!0),this.updateHistoryCountOutput())}))}historyFunctionsForAfterSettingsChange(t=null,e=!0){this.changeInputDynamically(t||this.settings),this.assignInputsOutputs(),this.settings.databaseType.value===m.POSTGRES&&(this.settings.alarms_count.value=0,this.settings.tags_count.value=0),this.dynamicInputStartPosition=this.pointNameInput+1,this.changeAlarmsCount(this.settings.alarms_count.value),this.renameAlarmInputs(t),this.changeTagsCount(this.settings.tags_count.value),e&&this.persistProperties(!0,!1,!0,!1)}storeLogEntry(t){return s(this,void 0,void 0,(function*(){if(null==t)return;const e=o.default.clamp(this.settings["storage-limit"].value,0,50),i=o.default.clamp(this.settings.minuteRoundValue.value,0,60),s=i?u.default.nearestFutureMinutes(i,n()):n(),a={payload:t,timestamp:s.toISOString()};for(let t=this.dynamicInputStartPosition;t<this.dynamicInputStartPosition+this.alarmCount;t++){let e=t-this.dynamicInputStartPosition+1;a[this.settings["alarm"+e].value||"alarm"+e]=this.getInputData(t)||"null"}const r=[];let d=1;for(;d<=this.tagCount;)this.settings["tag"+d].value&&r.push(this.settings["tag"+d].value),d++;for(a.tags=r,this.properties.obj.push(a);this.properties.obj.length>e;)this.properties.obj.shift();this.properties.lastHistoryValue=t,this.persistProperties(!1,!0,!1,!1),this.updateHistoryCountOutput()}))}checkTriggered(){const t=this.getInputData(this.histTriggerInput)||!1,e=this.inputs[this.histTriggerInput].updated&&t&&!this.lastTrigger;return this.lastTrigger=t,e}checkCOV(t){if(this.settings.historyMode.value===y.COV){const e=this.settings.threshold.value;return isNaN(t)||isNaN(this.properties.lastHistoryValue)?t!==this.properties.lastHistoryValue:Math.abs(Number(t)-Number(this.properties.lastHistoryValue))>=e}return!1}doPeriodicHistoryFunctions(){if(this.side!==l.Side.server)return;const t=this.settings.enable.value,e=this.settings.historyMode.value===y.PERIODIC;if(t&&e||this.timeoutFunc&&(this.interval=-1,clearInterval(this.timeoutFunc),this.debugInfo("Clearing Periodic interval data insertion...")),t&&e){const t=u.default.timeConvert(this.settings.period.value,this.settings.periodUnits.value);this.interval!==t&&(clearInterval(this.timeoutFunc),this.timeoutFunc=setInterval(()=>s(this,void 0,void 0,(function*(){let t=null;t=this.takeValueFromInput?this.getInputData(this.valueInput):this.outputs[this.valueInput].data,yield this.storeLogEntry(t),this.properties.obj.length>0&&(yield this.trySendStoredData())})),t),this.interval=t,this.debugInfo(`Setting Periodic Period of: ${t} ms`))}}changeAlarmsCount(t){t=o.default.clamp(t,0,10),this.settings.alarms_count.value=t;let e=t-this.alarmCount;if(0==e)return;this.changeInputsCount(t+this.dynamicInputStartPosition,r.Type.STRING);const i={};if(e>0){for(let e=this.alarmCount+1;e<=t;e++)i["alarm"+e]={description:"Alarm "+e,value:"",type:a.SettingType.STRING};this.settings=d.default.insertIntoObjectAtPosition(this.settings,i,0==this.alarmCount?"alarms_count":"alarm"+this.alarmCount)}else if(e<0)for(let e=this.alarmCount;e>t;e--)delete this.settings["alarm"+e];this.alarmCount=t}renameAlarmInputs(t){for(let e=1;e<=this.alarmCount;e++){let i=this.settings["alarm"+e].value;!i&&t&&(i=t["alarm"+e]&&t["alarm"+e].value||""),i.length>20&&(i="..."+i.substr(i.length-20,20)),this.inputs[this.dynamicInputStartPosition+e-1].name="alarm"+e+" | "+i}}changeTagsCount(t){t=o.default.clamp(t,0,10),this.settings.tags_count.value=t;let e=t-this.tagCount;if(0==e)return;const i={};if(e>0){for(let e=this.tagCount+1;e<=t;e++)i["tag"+e]={description:"Tag "+e,value:"",type:a.SettingType.STRING};this.settings=d.default.insertIntoObjectAtPosition(this.settings,i,0===this.tagCount?"tags_count":"tag"+this.tagCount)}else if(e<0)for(let e=this.tagCount;e>t;e--)delete this.settings["tag"+e];this.tagCount=t}updateHistoryCountOutput(){this.setOutputData(this.storedHistCountOutput,this.properties.obj&&this.properties.obj.length||0)}}e.default=f},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(28),a=i(3),r=i(10),o=i(7),u=o.create("edge-utils",{color:o.Colors.Grey});e.default=class{static sendPayloadToChild(t,e){t&&t.subscribe?t.subscribe(this.createMessage(n.SEND_PAYLOAD_TO_CHILD,e)):u.error("Child Node is not available on sendPayloadToChild")}static addPoint(t,e){t&&t.subscribe?t.subscribe(this.createMessage(n.ADD_POINT,e)):u.error("Parent Node is not available on addPoint")}static removePoint(t,e){t&&t.subscribe?t.subscribe(this.createMessage(n.REMOVE_POINT,e)):u.error("Parent Node is not available on removePoint")}static createMessage(t,e=null){return{action:t,payload:e}}static writePointValue(t,e,i,n,o,u,d){return s(this,void 0,void 0,(function*(){const s=`${a.default.buildUrl(t,e)}/api/${i}/write/${n}/${o}/${u}/${d}`;return(yield r.default.get(s)).data}))}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.GET_BACNET_CLIENT="GET_BACNET_CLIENT",e.GET_NETWORK_SETTINGS="GET_NETWORK_SETTINGS",e.GET_POINTS="GET_POINTS",e.GET_PRESENT_VALUE="GET_PRESENT_VALUE",e.SEND_PAYLOAD_TO_CHILD="SEND_PAYLOAD_TO_CHILD",e.SEND_POINT_VALUE="SEND_POINT_VALUE",e.ADD_POINT="ADD_POINT",e.REMOVE_POINT="REMOVE_POINT",e.ADD_DEVICE="ADD_DEVICE",e.REMOVE_DEVICE="REMOVE_DEVICE",e.WRITE_PRESENT_VALUE="WRITE_PRESENT_VALUE"},function(t,e,i){"use strict";var s=this&&this.__decorate||function(t,e,i,s){var n,a=arguments.length,r=a<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,i,s);else for(var o=t.length-1;o>=0;o--)(n=t[o])&&(r=(a<3?n(r):a>3?n(e,i,r):n(e,i))||r);return a>3&&r&&Object.defineProperty(e,i,r),r};Object.defineProperty(e,"__esModule",{value:!0});const n=i(7),a=i(29),r=i(51),o=i(4),u=i(0),d=i(2),p=i(1),l=i(292),h=n.create("observer",{color:n.Colors.Yellow});class c{static cast(t){return o.isEmpty(t)?c.MOCK:o.isFunction(t.pointObservers)?t:c.MOCK}pointObservers(){return[]}MockHasPointOutputObservers(){}}e.MockHasPointOutputObservers=c,c.MOCK=new c;class g{constructor(t,e){this.node=t,this.outputSlots=e}update(t){var e,i,s,n,a,r;h.debug(`Node ${this.node.getReadableId()} receives point: ${t.point.identifier()} - ${t.connStatus.status.label}`),this.node.setOutputData(this.outputSlots.output,null===(i=null===(e=t.point)||void 0===e?void 0:e.pointValue)||void 0===i?void 0:i.presentValue),this.node.setOutputData(this.outputSlots.priority,null===(n=null===(s=t.point)||void 0===s?void 0:s.pointValue)||void 0===n?void 0:n.priority),this.node.setOutputData(this.outputSlots.priorityArray,null===(r=null===(a=t.point)||void 0===a?void 0:a.pointValue)||void 0===r?void 0:r.priorityArray)}}e.PointOutputObserver=g;e.CentralizedPointOutputObserver=class{constructor(t,e){this.node=t,this.outputSlot=e}update(t){var e,i;h.debug(`Node ${this.node.getReadableId()} receives point: ${t.point.identifier()} - ${t.connStatus.status.label}`),this.node.setOutputData(this.outputSlot,Object.assign(Object.assign({},null!=(i=null===(e=this.node.outputs[this.outputSlot])||void 0===e?void 0:e.data)?i:{}),this.convert(t)))}},e.PointNodeMixin=function(t){class e extends t{constructor(){super(...arguments),this._iPresentValue="present-value",this._iPriority="point-priority",this._iPriorityArrayLot="inputPriorityArray",this._iPriorityArrayJson="priority-array",this._sInputGroup="inputGroup",this._sInputMethod="inputMethod",this._sDecimal="decimals",this._oOut="out",this._oPriority="priority",this._oPriorityArray="priority-array"}onAdded(){if(this.side!==u.Side.server)return;let t=this.flowHandler().initializePointBySettingObject();this.flowHandler().notifyOutput(this.flowHandler().handleOnUpdate(t),this.pointObservers()),this.updateTitle()}onAfterSettingsChange(t,e){if(this.handleDynamicInput(t),this.side!==u.Side.server)return;let i=this.flowHandler().initializePointBySettingObject(t),s=this.flowHandler().initializePointBySettingInput();this.flowHandler().notifyOutput(this.flowHandler().handleOnUpdate(s,i),this.pointObservers()),this.updateTitle()}onInputUpdated(){if(this.side!==u.Side.server)return;let t=this.flowHandler().initializePointBySettingObject();this.reEvaluateSettingByInput(this.inputs,this.settings);let e=this.flowHandler().initializePointBySettingInput();this.flowHandler().notifyOutput(this.flowHandler().handleOnUpdate(e,t),this.pointObservers()),this.updateTitle()}reEvaluateSettingByInput(t,e){o.isFunction(super.reEvaluateSettingByInput)&&super.reEvaluateSettingByInput(t,e);let i,s=l.InputMethod.enumValueOf(this.settings[this._sInputMethod].value);if(s===l.InputMethod.VALUE_PRIORITY){let t=this.inputs[this.valueInputIdx()].updated?this.inputs[this.valueInputIdx()].data:this.settings[this._iPresentValue].value,e=this.inputs[this.priorityInputIdx()].updated?this.inputs[this.priorityInputIdx()].data:this.settings[this._iPriority].value;i=a.PointValueCreator.init(t,e),this.settings[this._iPresentValue].value=i.presentValue,this.settings[this._iPriority].value=i.priority}if(s===l.InputMethod.PRIORITY_ARRAY_LOT){let t=this.priorityArrayInputIdx();i=a.PointValueCreator.by(Array.from(o.range(t+1,t+16)).map(t=>this.inputs[t].data)),this.settings[this._iPriorityArrayLot].value=i.priorityArray}s===l.InputMethod.PRIORITY_ARRAY_JSON&&(i=a.PointValueCreator.by(this.inputs[this.priorityArrayInputIdx()].data),this.settings[this._iPriorityArrayJson].value=i.priorityArray)}pointObservers(){return[new g(this,{output:this.valueOutputIdx(),priority:this.priorityOutputIdx(),priorityArray:this.priorityArrayOutputIdx()})]}priorityInputIdx(){return this.valueInputIdx()+1}priorityArrayInputIdx(){return this.priorityInputIdx()+1}priorityOutputIdx(){return this.valueOutputIdx()+1}priorityArrayOutputIdx(){return this.priorityOutputIdx()+1}presentValueType(){return p.Type.NUMBER}mixinPointValueInputOutput(){this.addOutput(this._oOut,p.Type.NUMBER),this.addOutput(this._oPriority,p.Type.NUMBER),this.addOutput(this._oPriorityArray,p.Type.JSON),this.settings[this.modelSettingKey()]={description:"",value:null},this.settings[this._iPriorityArrayLot]={description:"",value:null},this.settings[this._sInputGroup]={description:"Input Settings",value:"",type:d.SettingType.GROUP},this.settings[this._sDecimal]={description:"Decimal Places (Limit 5)",value:3,type:d.SettingType.NUMBER},this.settings[this._sInputMethod]={description:"Input Method",type:d.SettingType.DROPDOWN,config:{items:l.InputMethod.items()},value:l.InputMethod.VALUE_PRIORITY.enumKey},this.addInputWithSettings(this._iPresentValue,this.presentValueType(),null,"Present Value"),this.addInputWithSettings(this._iPriority,p.Type.NUMBER,16,"Point Priority"),this.addInputWithSettings(this._iPriorityArrayJson,p.Type.JSON,null,"Priority Array in JSON or Array"),this.inputs[this.priorityArrayInputIdx()].setting.hidden=!0;let t={};for(let e of o.range(1,16))this.settings[`in${e}`]={description:`in${e}`,type:d.SettingType.BOOLEAN,value:!1},this.addInput(`[in${e}]`,p.Type.NUMBER,{exist:!1,nullable:!0,hidden:!0}),t[`in${e}`]=()=>l.InputMethod.PRIORITY_ARRAY_LOT.enumKey===this.settings[this._sInputMethod].value;return t[this.modelSettingKey()]=()=>!1,t[this._iPresentValue]=()=>l.InputMethod.VALUE_PRIORITY.enumKey===this.settings[this._sInputMethod].value,t[this._iPriority]=()=>l.InputMethod.VALUE_PRIORITY.enumKey===this.settings[this._sInputMethod].value,t[this._iPriorityArrayLot]=()=>!1,t[this._iPriorityArrayJson]=()=>!1,{conditions:t}}updateTitle(){this.title=this.computeTitle(),this.broadcastSettingsToClients()}createPointValue(t){var e,i,s;let n,r=l.InputMethod.enumValueOf(t.inputMethod.value),o=null===(i=null===(e=this.settings[this.modelSettingKey()])||void 0===e?void 0:e.value)||void 0===i?void 0:i.pointValue;return r===l.InputMethod.VALUE_PRIORITY&&(n=a.PointValueCreator.create(t[this._iPresentValue].value,t[this._iPriority].value,null===(s=o)||void 0===s?void 0:s.priorityArray)),r===l.InputMethod.PRIORITY_ARRAY_LOT&&(n=a.PointValueCreator.by(t[this._iPriorityArrayLot].value)),r===l.InputMethod.PRIORITY_ARRAY_JSON&&(n=a.PointValueCreator.by(t[this._iPriorityArrayJson].value)),n.merge(o)}handleDynamicInput(t){var e;let i=l.InputMethod.enumValueOf(t?null===(e=t[this._sInputMethod])||void 0===e?void 0:e.value:null),s=l.InputMethod.enumValueOf(this.settings[this._sInputMethod].value);if(!i||i!==s||s===l.InputMethod.PRIORITY_ARRAY_LOT){if(s===l.InputMethod.VALUE_PRIORITY&&(this.hideInput(!1,...o.range(this.priorityArrayInputIdx(),this.priorityArrayInputIdx()+16)),this.showInput(!1,this.valueInputIdx(),this.priorityInputIdx())),s===l.InputMethod.PRIORITY_ARRAY_LOT){let t=[this.valueInputIdx(),this.priorityInputIdx(),this.priorityArrayInputIdx()],e=[];for(let i of o.range(this.priorityArrayInputIdx()+1,this.priorityArrayInputIdx()+16))this.settings[`in${i-this.priorityArrayInputIdx()}`].value?e.push(i):t.push(i);this.hideInput(!1,...t),this.showInput(!1,...e)}s===l.InputMethod.PRIORITY_ARRAY_JSON&&(this.hideInput(!1,this.valueInputIdx(),this.priorityInputIdx(),...o.range(this.priorityArrayInputIdx()+1,this.priorityArrayInputIdx()+16)),this.showInput(!1,this.priorityArrayInputIdx())),this.linkHandler.recomputeInputLinks()}}}return s([r.ErrorHandler],e.prototype,"reEvaluateSettingByInput",null),e}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(4);class n{static cast(t){return s.isEmpty(t)?n.LISTENER:s.isFunction(t.listen)?t:n.LISTENER}listen({action:t,payload:e}){throw new Error(`Not found handler or parent to process action ${t}`)}MockCentralizedListener(){}}e.MockCentralizedListener=n,n.LISTENER=new n;e.DefaultObservable=class{constructor(t){this.list=t}observers(){return this.list}notify(t,e){var i;null===(i=this.observers())||void 0===i||i.forEach(i=>i.update(t,e))}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(7),n=i(77),a=i(4),r=i(1),o=i(11),u=i(78),d=s.create("observer",{color:s.Colors.Yellow});class p{constructor(t,e){this.status=t,this.error=e}}e.ConnectionOutput=p;class l{constructor(t,e){this.node=t,this.outputSlots=e}update(t,e){var i,s;let r=n.ConnectionStatus.lookupByLabel(this.node.outputs[this.outputSlots.status].data),u=o.default.getId(this.node.cid,this.node.id),p=!a.isFunction(this.node.isConnConnected)||this.node.isConnConnected();e&&u!==e&&(null!==(i=r)&&void 0!==i&&i.isError()||!p)||(d.debug(`Node ${this.node.getReadableId()} receives connection status '${t.status.label}' `+`from source id '${null!=e?e:u}'`),this.node.setOutputData(this.outputSlots.status,t.status.label),this.node.setOutputData(this.outputSlots.error,null!=(s=t.error)?s:""))}}function h(t){class e extends(u.AbleEnableNode(t)){constructor(){super(...arguments),this.connectionStatus=n.ConnectionStatus.UNCONNECTED}statusObserver(){return new l(this,{status:this.statusOutputIdx(),error:this.errorOutputIdx()})}getConnectionStatus(){var t;return this.isEnabled()?(null===(t=this.connectionStatus)||void 0===t?void 0:t.isError())?this.connectionStatus:(this.connectionStatus=this.isConnConnected()?n.ConnectionStatus.CONNECTED:n.ConnectionStatus.DISCONNECTED,this.connectionStatus):this.connectionStatus=n.ConnectionStatus.UNCONNECTED}errorOutputIdx(){return this.statusOutputIdx()+1}mixinConnectionStatusOutput(){return this.addOutput("status",r.Type.STRING),this.addOutput("error",r.Type.STRING),this.setOutputData(this.statusOutputIdx(),this.getConnectionStatus().label),{}}}return e}e.ConnectionOutputObserver=l,e.ExternalConnectionNodeMixin=h,e.DependantConnectionNodeMixin=function(t){class e extends(h(t)){onAdded(){this.executeFunction("onAdded")}onAfterSettingsChange(t,e){this.executeFunction("onAfterSettingsChange",t,e)}onInputUpdated(){this.executeFunction("onInputUpdated")}parentConnectionNode(){let t=this.getParentNode();return t&&a.isFunction(t.getConnectionStatus)?t:null}isConnConnected(){var t,e;let i=null!=(e=null===(t=this.parentConnectionNode())||void 0===t?void 0:t.getConnectionStatus().isConnected())&&e;return this.isEnabled()&&i}handleError(t,e){this.debug(`Error when executing function ${e} in node ${this.getReadableId()} - ${t.stack}`),this.statusObserver().update(new p(this.getConnectionStatus(),t.message))}executeFunction(t,...e){try{super[t]&&a.isFunction(super[t])&&super[t](...e),this.connectionStatus=null,this.statusObserver().update(new p(this.getConnectionStatus()))}catch(e){this.connectionStatus=n.ConnectionStatus.ERROR,this.handleError(e,t)}}}return e}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(19),n=i(89),a=i(369),r=i(90);e.default=class{static execute(t,e){return new Promise((i,n)=>{s.exec(t,e,(t,e,s)=>{t?n(t):i({stdout:e,stderr:s})})})}static hostName(){return new Promise((t,e)=>{try{t(n.hostname())}catch(t){e("Unknown")}})}static getCurrentWiresVersion(){return new Promise((t,e)=>{try{t(r.version)}catch(t){e("Unknown")}})}static cpuTemperature(){return new Promise((t,e)=>{try{t(a.cpuTemperature())}catch(t){e("Unknown")}})}static fsSize(){return new Promise((t,e)=>{try{t(a.fsSize())}catch(t){e("Unknown")}})}static systemInfo(){return new Promise((t,e)=>{try{const e={cpu:"*",osInfo:"platform, release",system:"model, manufacturer"};t(a.get(e))}catch(t){e("Unknown")}})}static systemTime(){return new Promise((t,e)=>{try{t(a.time())}catch(t){e("Unknown")}})}static systemMem(){return new Promise((t,e)=>{try{t(a.mem())}catch(t){e("Unknown")}})}}},function(t,e){t.exports=require("path")},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.CLONE="clone",e.ERROR="error",e.NOTIFICATION="notification",e.IMPORT="import",e.MOVE_TO_CONTAINER="move-to-container"},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(9);class n{entryId(){return this.id}identifier(){return this.code}nodeType(){return this._nodeType}label(){return this.identifier()||this.entryId()}}e.Edge=class extends n{constructor(){super(...arguments),this._nodeType=s.EDGE_CONTAINER_TYPE}};e.Network=class extends n{constructor(){super(...arguments),this._nodeType=s.NETWORK_CONTAINER_TYPE}};e.Device=class extends n{constructor(){super(...arguments),this._nodeType=s.DEVICE_CONTAINER_TYPE}};e.Folder=class extends n{constructor(){super(...arguments),this._nodeType=s.GROUP_CONTAINER_TYPE}label(){return this.name||super.label()}};e.Point=class extends n{constructor(){super(...arguments),this._nodeType=s.POINT_NODE_TYPE}};e.Service=class{constructor(){this._nodeType=s.MODULE_NODE_TYPE}entryId(){return this.service_id}identifier(){return this.service_name}nodeType(){return this._nodeType}label(){return`${this.identifier()} ${this.version}`||this.entryId()}};e.PointData=class{}},function(t){t.exports=JSON.parse('{"dataBase":{"enable":true,"useInternalDb":true,"externalDbConnectionString":"","writeInterval":5000},"nodesEngine":{"enable":true,"updateInterval":10,"debugEngine":true,"debugNodes":true},"nodeEditor":{"theme":0},"console":{"showAllErrors":true,"showGatewayState":true,"showGatewayMessages":false,"showGatewayDecodedMessages":false,"showDataBaseState":false,"showNodesEngineState":true,"showNodesEngineNodes":false,"showSystemState":true},"logs":{"storeGatewayState":true,"storeGatewayMessages":true,"storeGatewayDecodedMessages":true,"storeDataBaseState":true,"storeNodesEngineState":true,"storeNodesEngineNodes":true,"storeSystemState":true,"maxGatewayState":1000,"maxGatewayMessages":1000,"maxGatewayDecodedMessages":1000,"maxDataBaseState":1000,"maxNodesEngineState":1000,"maxNodesEngineNodes":1000,"maxSystemState":1000},"webServer":{"enable":true,"port":"1313","rules":{"allowFullAccessWithoutAuthorization":false,"allowRegistrationOfNewUsers":false},"debug":true}}')},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(8);e.bsaClientConfig=t=>{var e,i;let n=s.default.bsa.paths[t];return n?{baseURL:s.default.bsa.baseURL,auth:{username:s.default.bsa.username,password:s.default.bsa.password},url:n.path,headers:{"Content-Type":(e=n.contentType,null!=e?e:"application/json"),Accept:(i=n.accept,null!=i?i:"application/json")}}:null}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{static getDeviceID(t){return new Promise((e,i)=>{var s,n;(null===(n=null===(s=t)||void 0===s?void 0:s.container)||void 0===n?void 0:n.db)?t.container.db.getNodeType("system/platform",(t,s)=>{var n,a,r;t?(console.log(t),i(t)):(null===(n=s)||void 0===n?void 0:n.length)&&(null===(r=null===(a=s[0])||void 0===a?void 0:a.properties)||void 0===r?void 0:r.deviceID)?e(s[0].properties.deviceID.trim()):i("No deviceID")}):i("No DB")})}static getClientID(t){return new Promise((e,i)=>{var s,n;(null===(n=null===(s=t)||void 0===s?void 0:s.container)||void 0===n?void 0:n.db)?t.container.db.getNodeType("system/platform",(t,s)=>{var n,a,r,o;t?(console.log(t),i(t)):(null===(n=s)||void 0===n?void 0:n.length)&&(null===(o=null===(r=null===(a=s[0])||void 0===a?void 0:a.settings)||void 0===r?void 0:r["client-id"])||void 0===o?void 0:o.value)?e(s[0].settings["client-id"].value.trim()):i("No clientID")}):i("No DB")})}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class s{}e.default=s,s.TYPES={INT16:1,UINT16:2,INT32:3,UINT32:4,FLOAT32:5,INT64:6,UINT64:7,DOUBLE64:8},s.ENDIAN={LEB_BEW:0,LEB_LEW:1,BEB_LEW:2,BEB_BEW:3},s.readByteOrder=(t,e,i,n)=>{let a,r,o=s.TYPES,u=s.ENDIAN;try{a=i<=o.UINT16?t.slice(e,e+2):i<=o.FLOAT32?t.slice(e,e+4):t.slice(e,e+8),n===u.BEB_LEW||i<=o.UINT16&&n===u.BEB_BEW?a.swap16():i>o.UINT16&&i<=o.FLOAT32&&n===u.BEB_BEW?a.swap32():i>=o.INT64&&n===u.BEB_BEW&&a.swap64()}catch(t){console.log(`buffer readValue issue in modbus-point-methods. Buffer.alloc ${t}`)}try{switch(i){case o.INT16:r=a.readInt16LE(r);break;case o.UINT16:r=a.readUInt16LE(r);break;case o.INT32:r=a.readInt32LE(r);break;case o.UINT32:r=a.readUInt32LE(r);break;case o.FLOAT32:r=a.readFloatLE(r);break;case o.INT64:case o.UINT64:break;case o.DOUBLE64:r=a.readDoubleLE(r)}}catch(t){console.log(`buffer readValue issue in modbus-point-methods. switch case ${t}`)}return r},s.writeValue=(t,e,i)=>{let n,a=s.TYPES,r=s.ENDIAN;try{n=e<=a.UINT16?Buffer.alloc(2):e<=a.FLOAT32?Buffer.alloc(4):Buffer.alloc(8)}catch(t){console.log(`buffer writeValue issue in modbus-point-methods. Buffer.alloc  ${t}`)}try{switch(e){case a.INT16:n.writeInt16LE(t);break;case a.UINT16:n.writeUInt16LE(t);break;case a.INT32:n.writeInt32LE(t);break;case a.UINT32:n.writeUInt32LE(t);break;case a.FLOAT32:n.writeFloatLE(t);break;case a.INT64:case a.UINT64:break;case a.DOUBLE64:n.writeDoubleLE(t)}}catch(t){console.log(`buffer writeValue issue in modbus-point-methods :switch case ${t}`)}try{return i===r.BEB_LEW||e<=a.UINT16&&i===r.BEB_BEW?n.swap16():e>a.UINT16&&e<=a.FLOAT32&&i===r.BEB_BEW?n.swap32():e>=a.INT64&&i===r.BEB_BEW&&n.swap64(),n}catch(t){console.log(`buffer writeValue issue in modbus-point-methods :buf.swap() ${t}`)}}},function(t,e){t.exports=require("influx")},function(t,e){t.exports=function(){var t=Math.log,e=Math.exp,i=Math.pow,s=Math.min,n=Math.max,a=Math.abs,r=void 0,o=void 0;this.IP=1,this.SI=2,this.SetUnitSystem=function(t){if(t!=this.IP&&t!=this.SI)throw new Error("UnitSystem must be IP or SI");o=(r=t)==this.IP?.001*9/5:.001},this.GetUnitSystem=function(){return r},this.isIP=function(){if(r==this.IP)return!0;if(r==this.SI)return!1;throw new Error("Unit system is not defined")},this.GetTRankineFromTFahrenheit=function(t){return t+459.67},this.GetTFahrenheitFromTRankine=function(t){return t-459.67},this.GetTKelvinFromTCelsius=function(t){return t+273.15},this.GetTCelsiusFromTKelvin=function(t){return t-273.15},this.GetTCelsiusFromTFahrenheit=function(t){return(t-32)/1.8},this.GetTFahrenheitFromTCelsius=function(t){return 1.8*t+32},this.GetTRankineFromTCelsius=function(t){return 1.8*t+32+459.67},this.GetTKelvinFromTFahrenheit=function(t){return(t-32)/1.8+273.15},this.GetTFahrenheitFromTKelvin=function(t){return 1.8*(t-273.15)+32},this.GetTRankineFromTKelvin=function(t){return 1.8*(t-273.15)+32+459.67},this.GetTCelsiusFromTRankine=function(t){return(t-459.67-32)/1.8},this.GetTKelvinFromTRankine=function(t){return(t-459.67-32)/1.8+273.15},this.GetTWetBulbFromTDewPoint=function(t,e,i){var s;if(!(e<=t))throw new Error("Dew point temperature is above dry bulb temperature");return s=this.GetHumRatioFromTDewPoint(e,i),this.GetTWetBulbFromHumRatio(t,s,i)},this.GetTWetBulbFromRelHum=function(t,e,i){var s;if(!(e>=0&&e<=1))throw new Error("Relative humidity is outside range [0,1]");return s=this.GetHumRatioFromRelHum(t,e,i),this.GetTWetBulbFromHumRatio(t,s,i)},this.GetRelHumFromTDewPoint=function(t,e){if(!(e<=t))throw new Error("Dew point temperature is above dry bulb temperature");return this.GetSatVapPres(e)/this.GetSatVapPres(t)},this.GetRelHumFromTWetBulb=function(t,e,i){var s;if(!(e<=t))throw new Error("Wet bulb temperature is above dry bulb temperature");return s=this.GetHumRatioFromTWetBulb(t,e,i),this.GetRelHumFromHumRatio(t,s,i)},this.GetTDewPointFromRelHum=function(t,e){var i;if(!(e>=0&&e<=1))throw new Error("Relative humidity is outside range [0,1]");return i=this.GetVapPresFromRelHum(t,e),this.GetTDewPointFromVapPres(t,i)},this.GetTDewPointFromTWetBulb=function(t,e,i){var s;if(!(e<=t))throw new Error("Wet bulb temperature is above dry bulb temperature");return s=this.GetHumRatioFromTWetBulb(t,e,i),this.GetTDewPointFromHumRatio(t,s,i)},this.GetVapPresFromRelHum=function(t,e){if(!(e>=0&&e<=1))throw new Error("Relative humidity is outside range [0,1]");return e*this.GetSatVapPres(t)},this.GetRelHumFromVapPres=function(t,e){if(!(e>=0))throw new Error("Partial pressure of water vapor in moist air is negative");return e/this.GetSatVapPres(t)},this.dLnPws_=function(t){var e,s;return this.isIP()?(s=this.GetTRankineFromTFahrenheit(t),e=t<=32.018?10214.165/i(s,2)-.0053765794+3.8404754e-7*s+1.06727496e-9*i(s,2)-361378752e-21*i(s,3)+4.1635019/s:10440.397/i(s,2)-.027022355+2578072e-11*s-7.4342043e-9*i(s,2)+6.5459673/s):(s=this.GetTKelvinFromTCelsius(t),e=t<=.01?5674.5359/i(s,2)-.009677843+124431402e-14*s+6.2243475e-9*i(s,2)-37936096e-19*i(s,3)+4.1635019/s:5800.2206/i(s,2)-.048640239+83529536e-12*s-4.3356279e-8*i(s,2)+6.5459673/s),e},this.GetTDewPointFromVapPres=function(e,i){var r;if(r=this.isIP()?[-148,392]:[-100,200],i<this.GetSatVapPres(r[0])||i>this.GetSatVapPres(r[1]))throw new Error("Partial pressure of water vapor is outside range of validity of equations");var u,d,p=e,l=t(i),h=1;do{u=p,d=t(this.GetSatVapPres(u));var c=this.dLnPws_(u);if(p=n(p=u-(d-l)/c,r[0]),p=s(p,r[1]),h>100)throw new Error("Convergence not reached in GetTDewPointFromVapPres. Stopping.");h++}while(a(p-u)>o);return s(p,e)},this.GetVapPresFromTDewPoint=function(t){return this.GetSatVapPres(t)},this.GetTWetBulbFromHumRatio=function(t,e,i){var s,a,r,u,d=1;if(!(e>=0))throw new Error("Humidity ratio is negative");for(u=n(e,1e-7),s=((r=this.GetTDewPointFromHumRatio(t,u,i))+(a=t))/2;a-r>o;){if(this.GetHumRatioFromTWetBulb(t,s,i)>u?a=s:r=s,s=(a+r)/2,d>100)throw new Error("Convergence not reached in GetTWetBulbFromHumRatio. Stopping.");d++}return s},this.GetHumRatioFromTWetBulb=function(t,e,i){var s,a=-99999;if(!(e<=t))throw new Error("Wet bulb temperature is above dry bulb temperature");return s=this.GetSatHumRatio(e,i),a=this.isIP()?e>=32?((1093-.556*e)*s-.24*(t-e))/(1093+.444*t-e):((1220-.04*e)*s-.24*(t-e))/(1220+.444*t-.48*e):e>=0?((2501-2.326*e)*s-1.006*(t-e))/(2501+1.86*t-4.186*e):((2830-.24*e)*s-1.006*(t-e))/(2830+1.86*t-2.1*e),n(a,1e-7)},this.GetHumRatioFromRelHum=function(t,e,i){var s;if(!(e>=0&&e<=1))throw new Error("Relative humidity is outside range [0,1]");return s=this.GetVapPresFromRelHum(t,e),this.GetHumRatioFromVapPres(s,i)},this.GetRelHumFromHumRatio=function(t,e,i){var s;if(!(e>=0))throw new Error("Humidity ratio is negative");return s=this.GetVapPresFromHumRatio(e,i),this.GetRelHumFromVapPres(t,s)},this.GetHumRatioFromTDewPoint=function(t,e){var i;return i=this.GetSatVapPres(t),this.GetHumRatioFromVapPres(i,e)},this.GetTDewPointFromHumRatio=function(t,e,i){var s;if(!(e>=0))throw new Error("Humidity ratio is negative");return s=this.GetVapPresFromHumRatio(e,i),this.GetTDewPointFromVapPres(t,s)},this.GetHumRatioFromVapPres=function(t,e){if(!(t>=0))throw new Error("Partial pressure of water vapor in moist air is negative");return n(.621945*t/(e-t),1e-7)},this.GetVapPresFromHumRatio=function(t,e){var i;if(!(t>=0))throw new Error("Humidity ratio is negative");return e*(i=n(t,1e-7))/(.621945+i)},this.GetSpecificHumFromHumRatio=function(t){var e;if(!(t>=0))throw new Error("Humidity ratio is negative");return(e=n(t,1e-7))/(1+e)},this.GetHumRatioFromSpecificHum=function(t){if(!(t>=0&&t<1))throw new Error("Specific humidity is outside range [0, 1[");return n(t/(1-t),1e-7)},this.GetDryAirEnthalpy=function(t){return this.isIP()?.24*t:1006*t},this.GetDryAirDensity=function(t,e){return this.isIP()?144*e/53.35/this.GetTRankineFromTFahrenheit(t):e/287.042/this.GetTKelvinFromTCelsius(t)},this.GetDryAirVolume=function(t,e){return this.isIP()?53.35*this.GetTRankineFromTFahrenheit(t)/(144*e):287.042*this.GetTKelvinFromTCelsius(t)/e},this.GetTDryBulbFromEnthalpyAndHumRatio=function(t,e){var i;if(!(e>=0))throw new Error("Humidity ratio is negative");return i=n(e,1e-7),this.isIP()?(t-1061*i)/(.24+.444*i):(t/1e3-2501*i)/(1.006+1.86*i)},this.GetHumRatioFromEnthalpyAndTDryBulb=function(t,e){var i;return i=this.isIP()?(t-.24*e)/(1061+.444*e):(t/1e3-1.006*e)/(2501+1.86*e),n(i,1e-7)},this.GetSatVapPres=function(s){var n,a;if(this.isIP()){if(!(s>=-148&&s<=392))throw new Error("Dry bulb temperature is outside range [-148, 392]");a=this.GetTRankineFromTFahrenheit(s),n=s<=32.018?-10214.165/a-4.8932428-.0053765794*a+1.9202377e-7*a*a+3.5575832e-10*i(a,3)-90344688e-21*i(a,4)+4.1635019*t(a):-10440.397/a-11.29465-.027022355*a+1289036e-11*a*a-2.4780681e-9*i(a,3)+6.5459673*t(a)}else{if(!(s>=-100&&s<=200))throw new Error("Dry bulb temperature is outside range [-100, 200]");a=this.GetTKelvinFromTCelsius(s),n=s<=.01?-5674.5359/a+6.3925247-.009677843*a+6.2215701e-7*a*a+2.0747825e-9*i(a,3)-9484024e-19*i(a,4)+4.1635019*t(a):-5800.2206/a+1.3914993-.048640239*a+41764768e-12*a*a-1.4452093e-8*i(a,3)+6.5459673*t(a)}return e(n)},this.GetSatHumRatio=function(t,e){var i;return i=this.GetSatVapPres(t),n(.621945*i/(e-i),1e-7)},this.GetSatAirEnthalpy=function(t,e){return this.GetMoistAirEnthalpy(t,this.GetSatHumRatio(t,e))},this.GetVaporPressureDeficit=function(t,e,i){var s;if(!(e>=0))throw new Error("Humidity ratio is negative");return s=this.GetRelHumFromHumRatio(t,e,i),this.GetSatVapPres(t)*(1-s)},this.GetDegreeOfSaturation=function(t,e,i){if(!(e>=0))throw new Error("Humidity ratio is negative");return n(e,1e-7)/this.GetSatHumRatio(t,i)},this.GetMoistAirEnthalpy=function(t,e){var i;if(!(e>=0))throw new Error("Humidity ratio is negative");return i=n(e,1e-7),this.isIP()?.24*t+i*(1061+.444*t):1e3*(1.006*t+i*(2501+1.86*t))},this.GetMoistAirVolume=function(t,e,i){var s;if(!(e>=0))throw new Error("Humidity ratio is negative");return s=n(e,1e-7),this.isIP()?53.35*this.GetTRankineFromTFahrenheit(t)*(1+1.607858*s)/(144*i):287.042*this.GetTKelvinFromTCelsius(t)*(1+1.607858*s)/i},this.GetTDryBulbFromMoistAirVolumeAndHumRatio=function(t,e,i){var s;if(!(e>=0))throw new Error("Humidity ratio is negative");return s=n(e,1e-7),this.isIP()?this.GetTFahrenheitFromTRankine(t*(144*i)/(53.35*(1+1.607858*s))):this.GetTCelsiusFromTKelvin(t*i/(287.042*(1+1.607858*s)))},this.GetMoistAirDensity=function(t,e,i){var s;if(!(e>=0))throw new Error("Humidity ratio is negative");return(1+(s=n(e,1e-7)))/this.GetMoistAirVolume(t,s,i)},this.GetStandardAtmPressure=function(t){return this.isIP()?14.696*i(1-68754e-10*t,5.2559):101325*i(1-225577e-10*t,5.2559)},this.GetStandardAtmTemperature=function(t){return this.isIP()?59-.0035662*t:15-.0065*t},this.GetSeaLevelPressure=function(t,i,s){var n,a;return this.isIP()?(n=s+.0036*i/2,a=53.351*this.GetTRankineFromTFahrenheit(n)):(n=s+.0065*i/2,a=287.055*this.GetTKelvinFromTCelsius(n)/9.807),t*e(i/a)},this.GetStationPressure=function(t,e,i){return t/this.GetSeaLevelPressure(1,e,i)},this.CalcPsychrometricsFromTWetBulb=function(t,e,i){var s=this.GetHumRatioFromTWetBulb(t,e,i);return[s,this.GetTDewPointFromHumRatio(t,s,i),this.GetRelHumFromHumRatio(t,s,i),this.GetVapPresFromHumRatio(s,i),this.GetMoistAirEnthalpy(t,s),this.GetMoistAirVolume(t,s,i),this.GetDegreeOfSaturation(t,s,i)]},this.CalcPsychrometricsFromTDewPoint=function(t,e,i){var s=this.GetHumRatioFromTDewPoint(e,i);return[s,this.GetTWetBulbFromHumRatio(t,s,i),this.GetRelHumFromHumRatio(t,s,i),this.GetVapPresFromHumRatio(s,i),this.GetMoistAirEnthalpy(t,s),this.GetMoistAirVolume(t,s,i),this.GetDegreeOfSaturation(t,s,i)]},this.CalcPsychrometricsFromRelHum=function(t,e,i){var s=this.GetHumRatioFromRelHum(t,e,i);return[s,this.GetTWetBulbFromHumRatio(t,s,i),this.GetTDewPointFromHumRatio(t,s,i),this.GetVapPresFromHumRatio(s,i),this.GetMoistAirEnthalpy(t,s),this.GetMoistAirVolume(t,s,i),this.GetDegreeOfSaturation(t,s,i)]}}},function(t,e,i){"use strict";var s;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t.Equals="Equals",t.NotEquals="Not Equal",t.GreaterThanEqual="Greater Than Equal",t.GreaterThan="Greater Than",t.LessThanEqual="Less Than Equal",t.LessThan="Less Than",t.Includes="Includes",t.startsWith="Starts With",t.endsWith="Ends With"}(s||(s={}));e.default=class{static compare(t,e,i){const n=t.settings.function.value;switch(t.settings.isNumber.value&&(e=Number(e),i=Number(i)),n){case s.Equals:return e===i;case s.NotEquals:return e!==i;case s.GreaterThanEqual:return e>=i;case s.GreaterThan:return e>i;case s.LessThanEqual:return e<=i;case s.LessThan:case s.LessThan:return e<i;case s.Includes:return e.includes(i);case s.startsWith:return e.startsWith(i);case s.endsWith:return e.endsWith(i);default:return e===i}}static findVal(t,e){let i;return Object.keys(t).some((function(s){if(s===e&&(i={valueWithKey:{[e]:t[s]},value:t[s]}),t[s]&&"object"==typeof t[s])return i=this.findVal(t[s],e),void 0!==i})),i}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class s{}e.default=s,s.NetworkDesc="## Description\n  The is node is used for reading and writing values to the edge-io-28. This node uses an internal rest-api to talk to the edge-io-28. No details need to be set\n    \n ### Enable\n    \n  The point enable will disable any new value being sent to the node **output**  \n    \n ### Polling Interval\n    \n  This will change the poll rate of the edge-io-28 inputs. A normal setting is 1 second\n  The faster the polling rate is the higher the memory usage is\n    \n ### Polling Interval Time Setting\n    \n Used in conjugation with the **Polling Interval**. Make the selection for the time units for **Seconds**, **Minutes**, **Hours** \n    \n ",s.inputsDesc="## Description\n  The is node is used in conjunction with the edge-io-28. This node uses an internal rest-api to talk to the edge-io-28\n    \n ## Digital Input\n    \n A total of 14 DIs can be used on the edge-io-28. There are 7 DIs and 7 UIs\n    \n ### DIs (From the UIs)  \n    \n  The UIs can be setup and used to read a status change from a *Digital Input* (7 off dry input)\n    \n ### DIs (From the UIs)  \n    \n  The UIs can be setup and used to read a status change from a *Digital Input* (7 off dry input)\n    \n ## Universal Input\n    \n  The Universal Input or Analogue Input (7 off) can be used in a number of combinations for reading different sensor types\n    \n ### UI as 0/10dc  \n    \n  When configured as a UI 0/10dc the node output value will return a value that is set in the **Low scale** & **High scale**\n    \n ### UI as 0/20ma and or 4/20ma \n    \n  When configured as a UI 0/20ma and or 4/20ma the node output value will return a value that is set in the **Low scale** & **High scale**\n    \n ### UI as 10K thermistor \n    \n  When configured as a UI 10K thermistor type 2 the node output value will return a value based on the resistance and corresponding temperature\n    \n ## Point Configuration\n ### Point Enable\n    \n  The point enable will disable any new value being sent to the node **output**  \n    \n ### Point Debug\n    \n  The point debug will allow the node **output** to always send the value even if there is node change\n  This is just a guide to see if the polling is working\n    \n ### Point Selection\n    \n  1. Select the **Point Type** for example UO  \n  2. Select the **Point Number** for example UO-1   \n  **Note:** You cant set a type **Digital** and point number **UI1** the correct types must be matched with the correct point numbers  \n    \n ### Point Units\n    \n  The units can be set as required see steps below.  \n  1. Select the **Units Category**.  \n  2. Lock (**lock icon**) the node setting's and hit the **save** button to return the units types.  \n  3. Select the units type.  \n  4. Save and close the node as required  \n    \n ### Point Low Scale\n    \n  This is used in when the UI type is set as a 0-10dc or 4-20ma. The **High Scale**  must be set as well \n  For example if the point type is 0-10dc and the *Low Scale* is set to 0 and *High Scale* is set to 100    \n  the node output value when at 0vdc will return 0 and at 10vdc the node output value will return 100    \n    \n ### Point High Scale\n    \n  This is used in when the UI type is set as a 0-10dc or 4-20ma (See **Low Scale** setting for more info).  \n    \n ### Point Decimal Places\n    \n  The units can be set as required see steps below.  \n    \n ### Point Offset\n    \n  Enter a float value to offset. This will apply an math add function to the original value  \n  Example original value is 20 and offset is -1 the **node output** value result will be 19 \n    \n ### Point Decimal Places\n    \n  Enter a int value to Decimal. This will apply an math round function to the original value \n  Example original value is 99.9999 and the device places is set to 0  the **node output** value result will be 99 \n    \n ### Math Function\n    \n  The units can be set as required see steps below.  \n  1. **na** Will apply not math.  \n  2. **add** Will add a **value** node output.  \n  3. **subtract** Will subtract a **value** node output.  \n  4. **multiply** Will multiply a **value** node output.  \n  5. **divide** Will divide a **value** node output. \n  6. **invert** Will invert the node output. Example in original value = 0 the node output value will = 1.   \n    \n ###  History Settings Database Type\n    \n  The are two options for the database type. The data can either be pushed to influxDB or PostgreSQL.  \n  1. Select required database type (if type is *Nube DB PostgreSQL* *no more steps are required*).  \n  2. Enter DB details like IP, port, username and password(if type is *InfluxDB*)\n    \n #### History Settings History Type\n    \n  1. **Change Of Value (COV)**.  \n  2. **Periodic**.  \n  3. **Trigger Only**.  \n    \n ####  History Settings Local Storage Limit\n    \n  1. **Change Of Value (COV)**.  \n  2. **Periodic**.  \n  3. **Trigger Only**.  \n    \n ####  History Settings Round minutes\n    \n  1. **Change Of Value (COV)**.  \n  2. **Periodic**.  \n  3. **Trigger Only**.  \n    \n ### Alarm Settings\n    \n  to be added  \n    \n ### Tag Settings\n    \n  to be added  \n ",s.outputsDesc="## Description\n  The is node is used in conjunction with the edge-io-28. This node uses an internal rest-api to talk to the edge-io-28\n    \n ## Digital Output\n    \n  The DOs can be used to drive a 0-12vdc relay (5 off) or an onboard Normally Open Relay (2 off)\n ### DOs  \n    \n  The input of the node can will drive the output on/true  with any value > 1 or a true value \n  Any value < 0 or a false will drive the output off/false \n ### Relay Output  \n    \n  The input of the node can will drive the output on/true  with any value > 1 or a true value \n  Any value < 0 or a false will drive the output off/false \n ## Universal Output\n    \n  The Universal Output or Analogue Output (7 off) has a voltage range of 0 to 12vdc\n  The UOs can be used as an AO floating point 0/10dc or a binary on/off 0-12dc \n ### UOs as 0/10dc  \n    \n  When configured as a UOs a the node input value is a float value between 0/100 to drive a voltage of 0/10dc \n ### UOs as On/Off  \n    \n  The input of the node can will drive the output on/true  with any value > 1 or a true value \n  Any value < 0 or a false will drive the output off/false \n ## Point Configuration\n ### Point Enable\n    \n  The point enable will disable any new value being sent to the node **output**  \n ### Point Selection\n    \n  1. Select the **Point Type** for example UO  \n  2. Select the **Point Number** for example UO-1   \n ### Point Settings\n    \n  The DOs can be used to drive a 0-12vdc relay (5 off) or an onboard Normally Open Relay (2 off)\n ### Point Units\n    \n  The units can be set as required see steps below.  \n  1. Select the **Units Category**.  \n  2. Lock (**lock icon**) the node setting's and hit the **save** button to return the units types.  \n  3. Select the units type.  \n  4. Save and close the node as required  \n ###  History Settings Database Type\n    \n  The are two options for the database type. The data can either be pushed to influxDB or PostgreSQL.  \n  1. Select required database type (if type is *Nube DB PostgreSQL* *no more steps are required*).  \n  2. Enter DB details like IP, port, username and password(if type is *InfluxDB*)\n #### History Settings History Type\n    \n  1. **Change Of Value (COV)**.  \n  2. **Periodic**.  \n  3. **Trigger Only**.  \n ####  History Settings Local Storage Limit\n    \n  1. **Change Of Value (COV)**.  \n  2. **Periodic**.  \n  3. **Trigger Only**.  \n ####  History Settings Round minutes\n    \n  1. **Change Of Value (COV)**.  \n  2. **Periodic**.  \n  3. **Trigger Only**.  \n ### Alarm Settings\n    \n  to be added  \n ### Tag Settings\n    \n  to be added  \n "},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class s{static unitType(t){switch(t){case"Common Metric":return Object.keys(s.COMMON_METRIC);case"Common Imperial":return Object.keys(s.COMMON_IMPERIAL);case"Electrical":return Object.keys(s.Electrical);case"Energy":return Object.keys(s.Energy);case"Enthalpy":return Object.keys(s.Enthalpy);case"Entropy":return Object.keys(s.Entropy);case"Force":return Object.keys(s.Force);case"Frequency":return Object.keys(s.Frequency);case"Humidity":return Object.keys(s.Humidity);case"Length":return Object.keys(s.Length);case"Light":return Object.keys(s.Light);case"Mass":return Object.keys(s.Mass);case"Flow":return Object.keys(s.Flow);case"Power":return Object.keys(s.Entropy);case"Pressure":return Object.keys(s.Pressure);case"Temperature":return Object.keys(s.Temperature);case"Time":return Object.keys(s.Time);case"Torque":return Object.keys(s.Torque);case"Velocity":return Object.keys(s.Velocity);case"Volume":return Object.keys(s.Volume);case"Volumetric Flow":return Object.keys(s.VolumetricFlow);case"Other":return Object.keys(s.Other)}}}e.default=s,s.unitCategory=["Common Metric","Common Imperial","Electrical","Energy","Enthalpy","Entropy","Force","Frequency","Humidity","Length","Light","Mass","Flow","Power","Pressure","Temperature","Time","Torque","Velocity","Volume","Volumetric Flow","Other"].map(t=>({value:t,text:t})),s.COMMON_METRIC={NO_UNITS:95,PERCENT:98,PERCENT_RELATIVE_HUMIDITY:29,DEGREES_CELSIUS:62,KILOPASCALS:54},s.COMMON_IMPERIAL={NO_UNITS:95,PERCENT:98,PERCENT_RELATIVE_HUMIDITY:29,DEGREES_FAHRENHEIT:64,POUNDS_FORCE_PER_SQUARE_INCH:56},s.Electrical={MILLIAMPERES:2,AMPERES:3,AMPERES_PER_METER:167,AMPERES_PER_SQUARE_METER:168,AMPERE_SQUARE_METERS:169,DECIBELS:199,DECIBELS_MILLIVOLT:200,DECIBELS_VOLT:201,FARADS:170,HENRYS:171,OHMS:4,OHM_METERS:172,MILLIOHMS:145,KILOHMS:122,MEGOHMS:123,MICROSIEMENS:190,MILLISIEMENS:202,SIEMENS:173,SIEMENS_PER_METER:174,TESLAS:175,VOLTS:5,MILLIVOLTS:124,KILOVOLTS:6,MEGAVOLTS:7,VOLT_AMPERES:8,KILOVOLT_AMPERES:9,MEGAVOLT_AMPERES:10,VOLT_AMPERES_REACTIVE:11,KILOVOLT_AMPERES_REACTIVE:12,MEGAVOLT_AMPERES_REACTIVE:13,VOLTS_PER_DEGREE_KELVIN:176,VOLTS_PER_METER:177,DEGREES_PHASE:14,POWER_FACTOR:15,WEBERS:178},s.Energy={JOULES:16,KILOJOULES:17,KILOJOULES_PER_KILOGRAM:125,MEGAJOULES:126,WATT_HOURS:18,KILOWATT_HOURS:19,MEGAWATT_HOURS:146,WATT_HOURS_REACTIVE:203,KILOWATT_HOURS_REACTIVE:204,MEGAWATT_HOURS_REACTIVE:205,BTUS:20,KILO_BTUS:147,MEGA_BTUS:148,THERMS:21,TON_HOURS:22},s.Enthalpy={JOULES_PER_KILOGRAM_DRY_AIR:23,KILOJOULES_PER_KILOGRAM_DRY_AIR:149,MEGAJOULES_PER_KILOGRAM_DRY_AIR:150,BTUS_PER_POUND_DRY_AIR:24,BTUS_PER_POUND:117},s.Entropy={JOULES_PER_DEGREE_KELVIN:127,KILOJOULES_PER_DEGREE_KELVIN:151,MEGAJOULES_PER_DEGREE_KELVIN:152,JOULES_PER_KILOGRAM_DEGREE_KELVIN:128},s.Force={NEWTON:153},s.Frequency={CYCLES_PER_HOUR:25,CYCLES_PER_MINUTE:26,HERTZ:27,KILOHERTZ:129,MEGAHERTZ:130,PER_HOUR:131},s.Humidity={GRAMS_OF_WATER_PER_KILOGRAM_DRY_AIR:28,PERCENT_RELATIVE_HUMIDITY:29},s.Length={MICROMETERS:194,MILLIMETERS:30,CENTIMETERS:118,KILOMETERS:193,METERS:31,INCHES:32,FEET:33},s.Light={CANDELAS:179,CANDELAS_PER_SQUARE_METER:180,WATTS_PER_SQUARE_FOOT:34,WATTS_PER_SQUARE_METER:35,LUMENS:36,LUXES:37,FOOT_CANDLES:38},s.Mass={MILLIGRAMS:196,GRAMS:195,KILOGRAMS:39,POUNDS_MASS:40,TONS:41},s.Flow={GRAMS_PER_SECOND:154,GRAMS_PER_MINUTE:155,KILOGRAMS_PER_SECOND:42,KILOGRAMS_PER_MINUTE:43,KILOGRAMS_PER_HOUR:44,POUNDS_MASS_PER_SECOND:119,POUNDS_MASS_PER_MINUTE:45,POUNDS_MASS_PER_HOUR:46,TONS_PER_HOUR:156},s.Power={MILLIWATTS:132,WATTS:47,KILOWATTS:48,MEGAWATTS:49,BTUS_PER_HOUR:50,KILO_BTUS_PER_HOUR:157,HORSEPOWER:51,TONS_REFRIGERATION:52},s.Pressure={PASCALS:53,HECTOPASCALS:133,KILOPASCALS:54,MILLIBARS:134,BARS:55,POUNDS_FORCE_PER_SQUARE_INCH:56,MILLIMETERS_OF_WATER:206,CENTIMETERS_OF_WATER:57,INCHES_OF_WATER:58,MILLIMETERS_OF_MERCURY:59,CENTIMETERS_OF_MERCURY:60,INCHES_OF_MERCURY:61},s.Temperature={DEGREES_CELSIUS:62,DEGREES_KELVIN:63,DEGREES_KELVIN_PER_HOUR:181,DEGREES_KELVIN_PER_MINUTE:182,DEGREES_FAHRENHEIT:64,DEGREE_DAYS_CELSIUS:65,DEGREE_DAYS_FAHRENHEIT:66,DELTA_DEGREES_FAHRENHEIT:120,DELTA_DEGREES_KELVIN:121},s.Time={YEARS:67,MONTHS:68,WEEKS:69,DAYS:70,HOURS:71,MINUTES:72,SECONDS:73,HUNDREDTHS_SECONDS:158,MILLISECONDS:159},s.Torque={NEWTON_METERS:160},s.Velocity={MILLIMETERS_PER_SECOND:161,MILLIMETERS_PER_MINUTE:162,METERS_PER_SECOND:74,METERS_PER_MINUTE:163,METERS_PER_HOUR:164,KILOMETERS_PER_HOUR:75,FEET_PER_SECOND:76,FEET_PER_MINUTE:77,MILES_PER_HOUR:78},s.Volume={CUBIC_FEET:79,CUBIC_METERS:80,IMPERIAL_GALLONS:81,MILLILITERS:197,LITERS:82,US_GALLONS:83},s.VolumetricFlow={CUBIC_FEET_PER_SECOND:142,CUBIC_FEET_PER_MINUTE:84,CUBIC_FEET_PER_HOUR:191,CUBIC_METERS_PER_SECOND:85,CUBIC_METERS_PER_MINUTE:165,CUBIC_METERS_PER_HOUR:135,IMPERIAL_GALLONS_PER_MINUTE:86,MILLILITERS_PER_SECOND:198,LITERS_PER_SECOND:87,LITERS_PER_MINUTE:88,LITERS_PER_HOUR:136,US_GALLONS_PER_MINUTE:89,US_GALLONS_PER_HOUR:192},s.Other={DEGREES_ANGULAR:90,DEGREES_CELSIUS_PER_HOUR:91,DEGREES_CELSIUS_PER_MINUTE:92,DEGREES_FAHRENHEIT_PER_HOUR:93,DEGREES_FAHRENHEIT_PER_MINUTE:94,JOULE_SECONDS:183,KILOGRAMS_PER_CUBIC_METER:186,KW_HOURS_PER_SQUARE_METER:137,KW_HOURS_PER_SQUARE_FOOT:138,MEGAJOULES_PER_SQUARE_METER:139,MEGAJOULES_PER_SQUARE_FOOT:140,NO_UNITS:95,NEWTON_SECONDS:187,NEWTONS_PER_METER:188,PARTS_PER_MILLION:96,PARTS_PER_BILLION:97,PERCENT:98,PERCENT_OBSCURATION_PER_FOOT:143,PERCENT_OBSCURATION_PER_METER:144,PERCENT_PER_SECOND:99,PER_MINUTE:100,PER_SECOND:101,PSI_PER_DEGREE_FAHRENHEIT:102,RADIANS:103,RADIANS_PER_SECOND:184,REVOLUTIONS_PER_MINUTE:104,SQUARE_METERS_PER_NEWTON:185,WATTS_PER_METER_PER_DEGREE_KELVIN:189,WATTS_PER_SQUARE_METER_DEGREE_KELVIN:141,PER_MILLE:207,GRAMS_PER_GRAM:208,KILOGRAMS_PER_KILOGRAM:209,GRAMS_PER_KILOGRAM:210,MILLIGRAMS_PER_GRAM:211,MILLIGRAMS_PER_KILOGRAM:212,GRAMS_PER_MILLILITER:213,GRAMS_PER_LITER:214,MILLIGRAMS_PER_LITER:215,MICROGRAMS_PER_LITER:216,GRAMS_PER_CUBIC_METER:217,MILLIGRAMS_PER_CUBIC_METER:218,MICROGRAMS_PER_CUBIC_METER:219,NANOGRAMS_PER_CUBIC_METER:220,GRAMS_PER_CUBIC_CENTIMETER:221,BECQUERELS:222,MEGABECQUERELS:224,GRAY:225,MILLIGRAY:226,MICROGRAY:227,SIEVERTS:228,MILLISIEVERTS:229,MICROSIEVERTS:230,MICROSIEVERTS_PER_HOUR:231,DECIBELS_A:232,NEPHELOMETRIC_TURBIDITY_UNIT:233,PH:234,GRAMS_PER_SQUARE_METER:235,MINUTES_PER_DEGREE_KELVIN:236}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(33),n=i(25),a=i(7),r=a.create("bacnet-utils",{color:a.Colors.Grey});e.singleton=new n.PromiseActor;e.default=class{static getBacnetClient(t){return t&&t.subscribe?t.subscribe(this.createMessage(s.GET_BACNET_CLIENT)):(r.error("Network Node is not available on getBacnetClient"),null)}static getPoints(t){return t&&t.subscribe?t.subscribe(this.createMessage(s.GET_POINTS)):(r.error("Device Node is not available on getPoints"),[])}static getPresentValue(t,e){return t&&t.subscribe?t.subscribe(this.createMessage(s.GET_PRESENT_VALUE,e)):(r.error("Device Node is not available on getPresentValue"),null)}static writePresentValue(t,e){t&&t.subscribe?t.subscribe(this.createMessage(s.WRITE_PRESENT_VALUE,e)):r.error("Device Node is not available on writePresentValue")}static getNetworkSettings(t){return t&&t.subscribe?t.subscribe(this.createMessage(s.GET_NETWORK_SETTINGS)):(r.error("Parent Node is not available on getNetworkSettings"),null)}static sendPayloadToChild(t,e){t&&t.subscribe?t.subscribe(this.createMessage(s.SEND_PAYLOAD_TO_CHILD,e)):r.error("Child Node is not available on sendPayloadToChild")}static sendPointValue(t,e){t&&t.subscribe?t.subscribe(this.createMessage(s.SEND_POINT_VALUE,e)):r.error("Point Node is not available on sendPointValue")}static addDevice(t,e){t&&t.subscribe?t.subscribe(this.createMessage(s.ADD_DEVICE,e)):r.error("Network Node is not available on addDevice")}static removeDevice(t,e){t&&t.subscribe?t.subscribe(this.createMessage(s.REMOVE_DEVICE,e)):r.error("Network Node is not available on removeDevice")}static addPoint(t,e){t&&t.subscribe?t.subscribe(this.createMessage(s.ADD_POINT,e)):r.error("Device Node is not available on addPoint")}static removePoint(t,e){t&&t.subscribe?t.subscribe(this.createMessage(s.REMOVE_POINT,e)):r.error("Device Node is not available on removePoint")}static createMessage(t,e=null){return{action:t,payload:e}}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(4),n=i(7).create("reliability",{color:1});function a(t,...e){n.error(t),"undefined"!=typeof alert&&alert(t.toString())}e.ErrorHandler=(t,e,i)=>{const s=i.value;return i.value=function(...t){try{return s.apply(this,t)}catch(t){a(t)}},i},e.ErrorCallbackHandler=t=>(e,i,n)=>{const r=n.value;return n.value=function(...e){try{return r.apply(this,e)}catch(i){s.isFunction(t)?t(i,e):a(i)}},n},e.AsyncErrorHandler={}},function(t,e){t.exports=require("enumify")},function(t,e,i){const s=i(18);class n{static getEnumName(t,e){return Object.keys(t).find(i=>t[i]===e)+"("+e+")"}static getPropName(t){return n.getEnumName(s.enum.PropertyIdentifier,t)}}t.exports=n},function(t,e){t.exports=require("mqtt")},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(2),a=i(1),r=i(11),o=i(17),u=i(34),d=i(76),p=i(314),l=i(86);e.MQTT_CLIENT_NODE="protocols/mqtt/mqtt-network",e.REGISTER_MQTT_PUBLISHER="REGISTER_MQTT_PUBLISHER",e.UNREGISTER_MQTT_PUBLISHER="UNREGISTER_MQTT_PUBLISHER",e.UPDATE_MQTT_PUBLISHER="UPDATE_MQTT_PUBLISHER",e.PUBLISH_MQTT_DATA="PUBLISH_MQTT_DATA",e.REGISTER_MQTT_SUBSCRIBER="REGISTER_MQTT_SUBSCRIBER",e.UPDATE_MQTT_SUBSCRIBER="UPDATE_MQTT_SUBSCRIBER",e.UNREGISTER_MQTT_SUBSCRIBER="UNREGISTER_MQTT_SUBSCRIBER",e.REGISTER_MQTT_POINT="REGISTER_MQTT_POINT",e.UPDATE_MQTT_POINT="UPDATE_MQTT_POINT",e.UNREGISTER_MQTT_POINT="UNREGISTER_MQTT_POINT";class h extends u.CentralizedPointOutputObserver{convert(t){let e={};return e[t.point.identifier()]={publisherTopic:t.point.publishedTopic(),subscriberTopic:t.point.subscribedTopic(),pointValue:t.point.pointValue,status:t.connStatus.status.label,error:t.connStatus.error},e}}class c extends d.ProtocolDeviceNode{constructor(t){super(t,"MQTT Network","This node acts as a container for MQTT nodes. All MQTT nodes should be added within the MQTT-Network container. The MQTT broker details can be configured in settings."),this._oTopicsSlot=2,this.publishers=new l.MqttPublisherStore,this.subscribers=new l.MqttSubscriberStore,this.mqttClient=null,this.retriedItems=[],this.mixinEnableInputSetting(),this.settings.server={description:"Broker URL",value:"localhost",type:n.SettingType.STRING},this.settings.port={description:"Broker port",value:1883,type:n.SettingType.NUMBER},this.settings.authentication={description:"Use Authentication",value:!1,type:n.SettingType.BOOLEAN},this.settings.username={description:"User name",value:"",type:n.SettingType.STRING},this.settings.password={description:"Password",value:"",type:n.SettingType.PASSWORD},this.setSettingsConfig({groups:[{server:{weight:3},port:{weight:1}},{enable:{},authentication:{}},{username:{},password:{}}],conditions:{username:t=>!!t.authentication.value,password:t=>!!t.authentication.value}}),this.addOutput("topics",a.Type.JSON)}static createMqttConnectionOptions(t){const e={host:t.server.value},i=t.port.value,s=t.username.value,n=t.password.value;return null!=i&&(e.port=i),null!=s&&""!=s&&(e.username=s),null!=n&&""!=n&&(e.password=o.default.decrypt(n)),e}pointObservers(){return[new h(this,this._oTopicsSlot)]}listen({action:t,payload:i}){switch(this.debugInfo(`Handling ${t}:${i.identifier}...`),t){case e.REGISTER_MQTT_POINT:return this.registerMqttPoint(i);case e.UPDATE_MQTT_POINT:return this.updateMqttPoint(i);case e.UNREGISTER_MQTT_POINT:return this.unregisterMqttPoint(i);case e.REGISTER_MQTT_PUBLISHER:return this.publishers.register(i);case e.UPDATE_MQTT_PUBLISHER:return this.publishers.update(i,null,(t,e)=>this.afterUnregister(t,e));case e.UNREGISTER_MQTT_PUBLISHER:return this.publishers.unregister(i,!0,t=>this.afterUnregister(t,!0));case e.REGISTER_MQTT_SUBSCRIBER:return this.registerMqttSubscriber(i);case e.UPDATE_MQTT_SUBSCRIBER:return this.updateMqttSubscriber(i);case e.UNREGISTER_MQTT_SUBSCRIBER:return this.unregisterMqttSubscriber(i);case e.PUBLISH_MQTT_DATA:return this.publishMqttData(i);default:this.debugWarn("Request action doesn't match")}}connObserverNodes(){return[...new Set(this.publishers.listNodeIds().concat(this.subscribers.listNodeIds()))].map(t=>r.default._nodes[t]).filter(t=>t).map(t=>t.statusObserver())}isConnConnected(){var t;return null===(t=this.mqttClient)||void 0===t?void 0:t.isConnected()}onReceiveMessage(t){if(this.side!==s.Side.server)return;let e=this.subscribers.lookup(t.topic);e?Object.entries(e).forEach(([e,i])=>{var s;if(!(null===(s=i)||void 0===s?void 0:s.enabled))return;if(r.default._nodes[e])try{this.debugInfo(`Dispatch message on MQTT topic '${t.topic}' to Node Id '${e}'`),i.func(t.message)}catch(e){this.debugWarn(`Message on MQTT topic '${t.topic}' cannot be dispatched due to ${e}`)}else this.debugWarn(`MQTT topic '${t.topic}' is subscribed by Node ${e} that not found`)}):this.debug(`Not found any subscriber on MQTT topic '${t.topic}'`)}createThenStart(){const t=c.createMqttConnectionOptions(this.settings);t.clientId=`mqttjs_wires_cid_${this.container.id}_id${this.id}`,this.mqttClient=p.DefaultMqttClient.init(t,t=>this.retryConnection(t),(t,e)=>this.updateClientStatus(t,e),t=>this.onReceiveMessage(t))}stop(){this.mqttClient&&(this.mqttClient.stop(),this.mqttClient=null)}updateClientStatus(t,e){this.notifyConnStatusOutput(this.getConnectionStatus(),e)}retryConnection(t){this.debugInfo("Retry connection after MQTT client connected...");let e=0;for(;this.retriedItems.length>0&&e<500;)this.listen(this.retriedItems.shift()),e++;this.updateClientStatus(t)}publishMqttData(t){var i,n,a,r,o,u,d,p;if(this.side!==s.Side.server||!(null===(i=t)||void 0===i?void 0:i.enabled))return null;if(!this.isConnConnected())return t.lenient=!0,this.retriedItems.push({action:e.PUBLISH_MQTT_DATA,payload:t}),null;let l=null===(a=this.publishers.lookup(null===(n=t)||void 0===n?void 0:n.identifier))||void 0===a?void 0:a.func;return this.mqttClient.publish(null===(r=t)||void 0===r?void 0:r.identifier,l?l(null===(o=t)||void 0===o?void 0:o.data):null===(d=null===(u=t)||void 0===u?void 0:u.data)||void 0===d?void 0:d.toString()),null===(p=t)||void 0===p?void 0:p.data}registerMqttSubscriber(t){if(!this.isConnConnected())return t.lenient=!0,void this.retriedItems.push({action:e.REGISTER_MQTT_SUBSCRIBER,payload:t});this.subscribers.register(t,t=>{var e;return this.mqttClient.subscribe(null===(e=t)||void 0===e?void 0:e.identifier)})}unregisterMqttSubscriber(t){if(!this.isConnConnected())return t.lenient=!0,void this.retriedItems.push({action:e.UNREGISTER_MQTT_SUBSCRIBER,payload:t});this.subscribers.unregister(t,!0,t=>{this.mqttClientDoUnsubscribe(t),this.afterUnregister(t,!0)})}updateMqttSubscriber(t){if(!this.isConnConnected())return t.lenient=!0,void this.retriedItems.push({action:e.UPDATE_MQTT_SUBSCRIBER,payload:t});this.subscribers.update(t,t=>{var e;return this.mqttClient.subscribe(null===(e=t)||void 0===e?void 0:e.identifier)},(t,e)=>{this.mqttClientDoUnsubscribe(t),this.afterUnregister(t,e)})}mqttClientDoUnsubscribe(t){var e;this.subscribers.has(t.identifier,(t,e)=>{var i;return null===(i=e)||void 0===i?void 0:i.enabled})||this.mqttClient.unsubscribe(null===(e=t)||void 0===e?void 0:e.identifier)}registerMqttPoint(t){let i=t,s=this.listen({action:e.REGISTER_MQTT_PUBLISHER,payload:i.toPublisher()});return this.listen({action:e.REGISTER_MQTT_SUBSCRIBER,payload:i.toSubscriber()}),s}unregisterMqttPoint(t){let i=t,s=this.listen({action:e.UNREGISTER_MQTT_PUBLISHER,payload:i.toPublisher()});return this.listen({action:e.UNREGISTER_MQTT_SUBSCRIBER,payload:i.toSubscriber()}),this.afterUnregister(t,!0),s}updateMqttPoint(t){let i=t;try{return this.listen({action:e.UPDATE_MQTT_PUBLISHER,payload:i.toPublisher()})}finally{this.listen({action:e.UPDATE_MQTT_SUBSCRIBER,payload:i.toSubscriber()})}}afterUnregister(t,e){if(e){let e=this.outputs[this._oTopicsSlot].data;e&&delete e[t.identifier],this.setOutputData(this._oTopicsSlot,e)}}}s.Container.registerNodeType(e.MQTT_CLIENT_NODE,c)},function(t,e){t.exports=require("cron")},function(t,e){t.exports=require("jsonata")},function(t,e){t.exports=require("cronstrue")},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(9);class a{static getSortedAvailableContainers(t){let e=t.map(t=>+t.cid),i=t.filter(t=>void 0!==t.sub_container).map(t=>+t.sub_container.id);return e=[...new Set([...e,...i])],e.sort((t,e)=>t-e),e}static fallbackNodeIfDoesNotExist(t){return t.map(t=>(s.Container.nodes_types[t.type]||(t.type=n.UNKNOWN_NODE),t))}static addInputsLinkNodes(t,e,i){t.forEach(s=>{s.inputs&&Object.keys(s.inputs).forEach(n=>{var a;let r=!1,o=e.find(t=>t.id===s.id&&t.cid===s.cid);if(o&&o.inputs&&o.inputs[n]&&o.inputs[n].link){const e=o.inputs[n].link,i=t.find(t=>t.id===e.target_node_id&&t.cid===o.cid);i&&i.outputs&&i.outputs[(a=e.target_input_id,null!=a?a:e.target_slot)]&&(s.inputs[n].link=o.inputs[n].link,r=!0)}r&&i&&i(s)})})}static addOutputsLinkNodes(t,e,i){t.forEach(s=>{s.outputs&&Object.keys(s.outputs).forEach(n=>{let a=!1,r=e.find(t=>t.id===s.id&&t.cid===s.cid);if(r&&r.outputs&&r.outputs[n]&&r.outputs[n].links){r.outputs[n].links.forEach(e=>{var i;const o=t.find(t=>t.id===e.target_node_id&&t.cid===r.cid);o&&o.inputs&&o.inputs[(i=e.target_input_id,null!=i?i:e.target_slot)]&&(s.outputs[n].links||(s.outputs[n].links=[]),s.outputs[n].links.push(e),a=!0)})}a&&i&&i(s)})})}static addSettingsProperties(t,e){Object.keys(e).forEach(i=>{t.settings&&t.settings[i]&&(t.settings[i].value=e[i].value)})}static addSettingsValues(t,e,i){let s=[];return t.forEach(t=>{let n=e.find(e=>e.id==t.id);Object.keys(t.settings).forEach(e=>{let s=!1;n&&n.settings&&n.settings[e]&&null!=n.settings[e].value&&(t.settings[e].value=n.settings[e].value,s=!0),s&&i&&i(t)}),s.push(t.serialize())}),s}static removeBrokenLinks(t){const e=t._nodes;for(let i in e){const s=e[i];s.outputs&&Object.keys(s.outputs).map(e=>{let i=s.outputs[e];i&&i.links&&(s.outputs[e].links=i.links.filter(e=>t.getNodeById(e.target_node_id)))}),s.inputs?(s.inputs=Object.keys(s.inputs).map(e=>{let i=s.inputs[e];return i&&i.link&&(t.getNodeById(i.link.target_node_id)||delete s.inputs[e].link),i}),t.db&&t.db.updateNode(s.id,s.cid,{$set:{inputs:s.inputs,outputs:s.outputs}})):t.db&&t.db.updateNode(s.id,s.cid,{$set:{outputs:s.outputs}})}}static remapNodesId(t,e,i,s){const n={};return e.forEach(t=>{n[t.id]=++s}),0===i?t.db.updateLastRootNodeId(s):t.db.updateNode(t.container_node.id,t.container_node.container.id,{$set:{"sub_container.last_node_id":s}}),t.last_node_id=s,e.map(t=>(t.id=n[t.id],t.outputs&&Object.keys(t.outputs).map(e=>{let i=t.outputs[e];i&&i.links&&(i.links=i.links.filter(t=>void 0!==n[t.target_node_id]).map(t=>(t.target_node_id=n[t.target_node_id],t))),t.outputs[e]=i}),t.inputs&&Object.keys(t.inputs).map(e=>{let i=t.inputs[e];i&&i.link&&(n[i.link.target_node_id]?(i.link.target_node_id=n[i.link.target_node_id],t.inputs[e]=i):delete t.inputs[e].link)}),t))}static updateSubContainerLastNodeId(t,e){t.db.updateNode(t.container_node.id,t.container_node.container.id,{$set:{"sub_container.last_node_id":e}})}static remapContainersId(t,e,i,n,a=!1){const r={};let o=s.Container.last_container_id;return a?r[i]=++o:r[n]=i,e.forEach(t=>{t.sub_container&&(r[t.sub_container.id]||(r[t.sub_container.id]=++o))}),s.Container.last_container_id=o,t.db.updateLastContainerId(o),{nodes:e=e.map(t=>(t.cid=r[t.cid],t.sub_container&&(t.sub_container.id=r[t.sub_container.id]),t)),convertedParamsCid:r[i]}}static adjustPosition(t,e,i,s){const n=Math.min(...e.map(t=>t.pos[0])),a=Math.min(...e.map(t=>t.pos[1]));let r,o;return s?(r=0,o=i[1]-a+100):(r=i[0]-n,o=i[1]-a),e.forEach(t=>{t.pos[0]+=r,t.pos[1]+=o}),e}static sortNodes(t){t.sort((t,e)=>t.id-e.id)}static createContainersIfDoesNotExist(t,e){t.forEach(t=>{s.Container.containers[t]||(s.Container.containers[t]=new s.Container(e,t))})}static reRenderNodes(t,e){const i=a.getSortedAvailableContainers(e);s.Container.last_container_id=i[i.length-1];const n=[],r=[];a.createContainersIfDoesNotExist(i,s.Side.editor);let o=!0;return i.forEach(i=>{let a=e.filter(t=>t.cid===i);a.sort((t,e)=>t.id-e.id),a.forEach(e=>{const a=s.Container.containers[e.cid],o=a.createNode(e.type,e,null,!0);t==i&&n.push(o),r.push(o),a.last_node_id=o.id}),o=!1}),a.addInputsLinkNodes(r,e),a.addOutputsLinkNodes(r,e),a.addSettingsValues(r,e),n}}e.default=a},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(10),n=i(13),a=i(8);e.Api=class{constructor(){this.client=s.default.create({baseURL:a.default.backendSync.baseUrl})}fetchMany(t,e){return this.client.get(t).then(this.extractData(e)).then(this.assignAllTo(()=>this.factoryEntry()))}fetchOne(t,e){return this.client.get(t).then(this.extractData(e)).then(t=>Object.assign(this.factoryEntry(),t))}newEntry(t){return new t}extractData(t=null){return e=>t?n.get(e.data,t):e.data}assignAllTo(t){return e=>e.map(e=>Object.assign(t(),e))}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(13),n=i(8),a=i(25),r=i(9),o=i(0),u=i(14),d=i(2),p=i(30);class l extends u.ContainerNode{constructor(t){super(t),this.extra_node_types=this.childNodeType().filter(t=>r.IOT_TYPES.includes(t)),this.clonable=!1,this.movable=!1,this.entry=p.default.prototype.entry.bind(this),this.entryId=p.default.prototype.entryId.bind(this),this.deactivate=p.default.prototype.deactivate.bind(this),this.createSettingForm=p.default.prototype.createSettingForm.bind(this),this.getTakenIdentifiers=p.default.prototype.getTakenIdentifiers.bind(this),this.makeIdentifier=p.default.prototype.makeIdentifier.bind(this),this.findFreeIdentifier=p.default.prototype.findFreeIdentifier.bind(this),this.description="placeholder",this.api=this.initAPI(),this.settings.name={description:"Entry",value:this.title,type:d.SettingType.READONLY}}entryFactory(){return this.api.factoryEntry()}updateEntry(t){return this.api.update(t,this.entryId())}deleteEntry(){return this.api.delete(this.entryId())}onAdded(){p.default.prototype.onAdded.call(this),super.onAdded()}applyEntry(t){p.default.prototype.applyEntry.call(this,t),this.applyTitle(),this.broadcastTitleToClients()}applyTitle(){this.sub_container.name=this.title,this.size=this.computeSize(),this.container.runWithEditor(t=>{s.get(t,"renderer.container.id")===this.container.id&&t.emit("rerender-siderbar-containers")})}onAfterSettingsChange(t){p.default.prototype.onAfterSettingsChange.call(this),super.onAfterSettingsChange(t)}onCreated(){super.onCreated();const t=this.namePrefix(),e=this.entry()?" "+this.entryId():"";this.settings.name.value=t+e,p.default.prototype.onCreated.call(this)}onRemoved(){p.default.prototype.onRemoved.call(this)}shouldRejectNodeType(t){return!this.childNodeType().includes(t)}syncWithBackend(){this.side===o.Side.server&&a.singleton.process(()=>this.fetchChildren().then(t=>{const e=t.map(t=>t.entryId()),i=this.collectChildNodes(this.sub_container.getNodes()).map(t=>t),s=i.filter(t=>e.includes(t.entryId()));i.filter(t=>!t.properties.is_protected&&!e.includes(t.entryId())).forEach(t=>{t.deactivate(),t.container.removeBroadcasted(t)}),this.processNextChildEntry(t,s)}))}onGetMessageToEditorSide({action:t,payload:e}){super.onGetMessageToEditorSide({action:t,payload:e,key:null}),t===d.BROADCAST.UPDATE_TITLE&&this.applyTitle()}processNextChildEntry(t,e){if(!t||0===t.length)return;const i=t.pop();let a=e.find(t=>t.entryId()===i.entryId());const r=()=>{a instanceof l&&a.syncWithBackend(),this.processNextChildEntry(t,e)};if(a)s.isEqual(a.entry(),i)?r():(a.applyEntry(i),a.persistConfiguration(r));else{const t=[250,Math.max(100,...this.sub_container.getNodes(!1).map(t=>t.pos[1]))+n.default.backendSync.nodeDistance];a=this.sub_container.createNode(i.nodeType(),{properties:{entry:i},pos:t},null,!1,r)}}}e.default=l},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(61);class n extends s.default{constructor(){super(...arguments),this.settingFields={},this.entryFactory=()=>null,this.applyEntry=()=>{this.title=this.namePrefix(),this.sub_container.name=this.title},this.onAdded=()=>{this.ignore_remove=!0,this.removable=!1,this.movable=!1,this.applyEntry(),this.syncWithBackend()},this.createEntry=()=>Promise.resolve(null),this.updateEntry=t=>Promise.resolve(null),this.deleteEntry=()=>Promise.resolve(null),this.namePrefix=()=>this.title,this.getTakenIdentifiers=()=>Promise.resolve([]),this.makeIdentifier=t=>null,this.findFreeIdentifier=()=>Promise.resolve(null)}}e.default=n},function(t,e){t.exports=require("lodash-decorators/debounce")},function(t,e){t.exports=require("socket.io")},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(21);e.schemaMiddleware=(t,e)=>(i,s,n)=>{const{error:a}=t.validate(i[e]);if(null==a)n();else{const{details:t}=a,e=t.map(t=>t.message).join(",");s.status(422).json({error:e})}};e.authMiddleware=()=>(t,e,i)=>s(void 0,void 0,void 0,(function*(){const a=t.headers.token;a?(yield(t=>s(void 0,void 0,void 0,(function*(){try{return yield n.default.db.isAuthenticated(t),!0}catch(t){return!1}})))(a))?i():e.status(403).json({error:"Please provide valid token"}):e.status(403).json({error:"Please provide token"})}))},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(14);e.CONTAINER_NODE_TYPE="container/folder",s.Container.registerNodeType(e.CONTAINER_NODE_TYPE,n.ContainerNode,null,!0,!0)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(4),n=i(0),a=i(2),r=i(22);class o extends a.Node{constructor(t,e,i){super(t),this.title=e,this.description=i,this.iconImageUrl=r.default.aiIcon}onAdd(){if(!this.isUnderContainer()||s.isNull(this.properties.slot)||-1===this.properties.slot)return;let t=this.properties.slot;delete this.properties.slot,this.emitChange(this,"properties"),this.correctParentIO(this.container.container_node,t)}isUnderContainer(){return s.isNotNull(this.container.container_node)}emitChange(t,...e){if(t.side===n.Side.server){let i=t.serialize(),s=e.reduce((t,e)=>(t[e]=i[e],t),{});t.container.db.updateNode(t.id,t.container.id,{$set:s})}}findParentOutputById(t,e){var i;return null!=(i=Object.entries(t[e]).find(([t,e])=>this.id===e.subNodeId))?i:[null,null]}}e.AbstractFolderIONode=o},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{static insertIntoObjectAtPosition(t,e,i="",s=""){if(""===s&&""===i)return Object.assign(t,e),t;const n={};let a=!1;const r=""!==s&&""!==i;let o=!1;for(let u in t)t.hasOwnProperty(u)&&(!o&&r&&a&&s===u?(Object.assign(n,e),o=!0,a=!1):o||r||!a&&s!==u?o||u!==i||(a=!0):(Object.assign(n,e),o=!0,a=!1),n[u]=t[u]);return o||Object.assign(n,e),n}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});let s={CHILLER:"Chiller",CHWP:"CHWP",PlantChilledWater:"Plant-Chilled Water",BuildingInfo:"Building Info",HeatExchanger:"Heat Exchanger",CoolingTower:"Cooling Tower",CWP:"CWP",PlantCoolingTower:"Plant-Cooling Tower",Boiler:"Boiler",HWP:"HWP",BoilerPlant:"Boiler Plant",FloorControl:"Floor Control",AHU_VAV:"AHU-VAV",AHU_CAV:"AHU_CAV",FCU:"FCU",FTU:"FTU",PAC_HotWaterReheat:"PAC - Hot Water Reheat",PAC_ReverseCycle:"PAC - Reverse Cycle",PAC_ElectricReheat:"PAC - Electric Reheat",PAC_Electric_Reheat_WaterCooled:"PAC - Electric Reheat - Water Cooled",OutsideAirFan:"Outside Air Fan",SupplyAirFan:"Supply Air Fan",ReturnAirFan:"ReturnAirFan",AHUReturnAirFan:"AHU Return Air Fan",CarParkSupplyAirFan:"CarPark Supply Air Fan",CarParkExhaustAirFan:"CarPark Exhaust Air Fan",ToiletExhaustAirFan:"Toilet Exhaust Air Fan",KitchenExhaustAirFan:"Kitchen Exhaust Air Fan",ExhaustAirFan:"Exhaust Air Fan",GeneralExhaustAirFan:"General Exhaust Air Fan",VAV:"VAV",Power_SubMeter:"Power_SubMeter",PowerSiteMeter:"Power Site Meter",Gas_SubMeter:"Gas sub-Meter",Gas_SiteMeter:"Gas Site Meter",Water_subMeter:"Water sub-Meter",Water_SiteMeter:"Water Site Meter"};class n{static tagType(t){switch(t){case s.CHILLER:return n.CHILLER;case s.CHWP:return n.CHWP;case s.PlantChilledWater:return n.PlantChilledWater;case s.BuildingInfo:return n.BuildingInfo;case s.HeatExchanger:return n.HeatExchanger;case s.CoolingTower:return n.CoolingTower;case s.CWP:return n.CWP;case s.PlantCoolingTower:return n.PlantCoolingTower;case s.Boiler:return n.Boiler;case s.HWP:return n.HWP;case s.BoilerPlant:return n.BoilerPlant;case s.FloorControl:return n.FloorControl;case s.AHU_VAV:return n.AHU_VAV;case s.AHU_CAV:return n.AHU_CAV;case s.FCU:return n.FCU;case s.FTU:return n.FTU;case s.PAC_HotWaterReheat:return n.PAC_HotWaterReheat;case s.PAC_ReverseCycle:return n.PAC_ReverseCycle;case s.PAC_ElectricReheat:return n.PAC_ElectricReheat;case s.PAC_Electric_Reheat_WaterCooled:return n.PAC_Electric_Reheat_WaterCooled;case s.OutsideAirFan:return n.OutsideAirFan;case s.SupplyAirFan:return n.SupplyAirFan;case s.ReturnAirFan:return n.ReturnAirFan;case s.AHUReturnAirFan:return n.AHUReturnAirFan;case s.CarParkSupplyAirFan:return n.CarParkSupplyAirFan;case s.ToiletExhaustAirFan:return n.ToiletExhaustAirFan;case s.KitchenExhaustAirFan:return n.KitchenExhaustAirFan;case s.ExhaustAirFan:return n.ExhaustAirFan;case s.GeneralExhaustAirFan:return n.GeneralExhaustAirFan;case s.VAV:return n.VAV;case s.Power_SubMeter:return n.Power_SubMeter;case s.PowerSiteMeter:return n.PowerSiteMeter;case s.Gas_SubMeter:return n.Gas_SubMeter;case s.Gas_SiteMeter:return n.Gas_SiteMeter;case s.Water_subMeter:return n.Water_subMeter}}}e.default=n,n.acronyms={BMS:"BMS",RTD:"RTD",AHU:"AHU",CW:"CW",RTU:"RTU",RH:"RH",CHWP:"CHWP",CWP:"CWP",HWP:"HWP",EVP:"EVP",FCU:"FCU",FTU:"FTU",VAV:"VAV",CT:"CT",CTF:"CTF",RT:"RT",RAT:"RAT",SAT:"SAT",ZT:"ZT",CHL:"CHL",BLR:"BLR",AC:"AC",RAC:"RAC",EVAP:"EVAP",HVAC:"HVAC",HLI:"HLI",BTU:"BTU",CMD:"CMD",REM:"REM",SYS:"SYS",RV:"RV",SOL:"SOL",DX:"DX",BACnet:"BACnet",LoRa:"LoRa",KNX:"KNX",LoRaWAN:"LoRaWAN",Modbus:"Modbus",LON:"LON",N2:"N2",SP:"SP",SETP:"SETP",LIQ:"LIQ",PMP:"PMP",TEMP:"TEMP",TMP:"TMP",PRESS:"PRESS",EEV:"EEV",DISCH:"DISCH"},n.tagCategory=Object.values(s).map(t=>({value:t,text:t})),n.CHILLER={"Chiller S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["run","cmd","chilled","chiller"]},"Chiller Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["run","sensor","chilled","chiller"]},"Chiller Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fault","sensor","chilled","chiller"]},Load:{kind:"",unit:"",equipType:"",tags:["load","sensor","chilled","chiller"]},"Chilled Water Supply Temperature":{kind:"number",unit:"Temperature",equipType:"",tags:["water","temp","sensor","supply","chilled","chiller"]},"Chilled Water Supply Temperature Setpoint":{kind:"number",unit:"Temperature",equipType:"",tags:["water","temp","sp","supply","chilled","chiller"]},"Chilled Water Return Temperature":{kind:"number",unit:"Temperature",equipType:"",tags:["water","temp","sensor","return","chilled","chiller"]},"Condenser Water Supply Temperature":{kind:"",unit:"",equipType:"",tags:["water","temp","sensor","supply","condenser","chiller"]},"Condenser Water Return Temperature":{kind:"number",unit:"",equipType:"",tags:["water","temp","sensor","return","condenser","chiller"]}},n.CHWP={"Chilled Water Pump S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["run","cmd","chilled","pump"]},"Chilled Water Pump Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["run","sensor","chilled","pump"]},"Chilled Water Pump Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fault","sensor","chilled","pump"]},"Chilled Water Pump Differential Pressure":{kind:"number",unit:"",equipType:"",tags:["water","pressure","sensor","differential","chilled","pump"]},"Chilled Water Pump Differential Pressure Setpoint":{kind:"number",unit:"",equipType:"",tags:["water","pressure","sp","differential","chilled","pump"]},"Chilled Water Flow":{kind:"",unit:"",equipType:"",tags:["water","flow","sensor","chilled","pump"]},"Chilled Water Flow Setpoint":{kind:"",unit:"",equipType:"",tags:["water","flow","sp","chilled","pump"]},"Chilled Water Pump Speed":{kind:"number",unit:"",equipType:"",tags:["speed","cmd","chilled","pump"]}},n.PlantChilledWater={"Common Chilled Water Supply Temperature":{kind:"number",unit:"",equipType:"",tags:["water","temp","sensor","supply","chilled","common"]},"Common Chilled Water Return Temperature":{kind:"number",unit:"",equipType:"",tags:["water","temp","sensor","return","chilled","common"]},"Common Chilled Water Differential Pressure":{kind:"number",unit:"",equipType:"",tags:["water","pressure","sensor","differential","chilled","common"]},"Common Chilled Water Bypass Valve":{kind:"number",unit:"",equipType:"",tags:["water","valve","bypass","cmd","chilled","common"]},"Common Chilled Water Differential Pressure Setpoint":{kind:"number",unit:"",equipType:"",tags:["water","pressure","sp","differential","chilled","common"]}},n.BuildingInfo={"Outside Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","outside","dryBulb/wetBulb","buildingInfo"]},"Outside Air Enthalpy":{kind:"number",unit:"",equipType:"",tags:["air","enthalpy","sensor","outside","buildingInfo"]},"Outside Air Humidity":{kind:"number",unit:"",equipType:"",tags:["air","humidity","sensor","outside","buildingInfo"]}},n.HeatExchanger={"Primary Supply Temperature":{kind:"number",unit:"",equipType:"",tags:["water","temp","sensor","supply","hot","primaryLoop","heatExchanger"]},"Primary Return Temperature":{kind:"number",unit:"",equipType:"",tags:["water","temp","sensor","return","hot","primaryLoop","heatExchanger"]},"Primary Loop Valve":{kind:"number",unit:"",equipType:"",tags:["water","cmd","hot","primaryLoop","heatExchanger"]},"Secondary Supply Temperature":{kind:"number",unit:"",equipType:"",tags:["water","temp","sensor","supply","hot","secondaryLoop","heatExchanger"]},"Secondary Return Temperature":{kind:"number",unit:"",equipType:"",tags:["water","temp","sensor","return","hot","secondaryLoop","heatExchanger"]},"Secondary Loop Valve":{kind:"number",unit:"",equipType:"",tags:["water","cmd","hot","secondaryLoop","heatExchanger"]}},n.CoolingTower={"Cooling Tower S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","cmd","condenser","coolingTower"]},"Cooling Tower Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","sensor","condenser","coolingTower"]},"Cooling Tower Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","fault","sensor","condenser","coolingTower"]},"Cooling Tower Fan Speed":{kind:"",unit:"",equipType:"",tags:["fan","speed","cmd","condenser","coolingTower"]},"Condenser Water Supply Temperature":{kind:"number",unit:"",equipType:"",tags:["water","temp","sensor","supply","condenser","coolingTower"]},"Condenser Water Supply Temperature Setpoint":{kind:"number",unit:"",equipType:"",tags:["water","temp","sp","supply","condenser","coolingTower"]},"Condenser Water Return Temperature":{kind:"number",unit:"",equipType:"",tags:["water","temp","sensor","return","condenser","coolingTower"]}},n.CWP={"Condenser Water Pump S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["run","cmd","condenser","pump"]},"Condenser Water Pump Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["run","sensor","condenser","pump"]},"Condenser Water Pump Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fault","sensor","condenser","pump"]},"Condenser Water Pump Differential Pressure":{kind:"number",unit:"",equipType:"",tags:["water","pressure","sensor","differential","condenser","pump"]},"Condenser Water Pump Differential Pressure Setpoint":{kind:"number",unit:"",equipType:"",tags:["water","pressure","sp","differential","condenser","pump"]},"Condenser Water Flow":{kind:"",unit:"",equipType:"",tags:[""]},"Condenser Water Pump Speed":{kind:"number",unit:"",equipType:"",tags:["speed","cmd","condenser","pump"]}},n.PlantCoolingTower={"Common Condenser Water Supply Temperature":{kind:"number",unit:"",equipType:"",tags:["water","temp","sensor","supply","condenser","common"]},"Common Condenser Pressure Diff":{kind:"number",unit:"",equipType:"",tags:["water","pressure","sensor","differential","condenser","common"]},"Common Bypass Valve":{kind:"number",unit:"",equipType:"",tags:["water","valve","bypass","cmd","condenser","common"]},"Common Condenser Water Return Temperature":{kind:"number",unit:"",equipType:"",tags:["water","temp","sensor","return","condenser","common"]}},n.Boiler={"Boiler S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["run","cmd","hot","boiler"]},"Boiler Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["run","sensor","hot","boiler"]},"Boiler Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fault","sensor","hot","boiler"]},"Hot Water Supply Temperature":{kind:"number",unit:"",equipType:"",tags:["water","temp","sensor","supply","hot","boiler"]},"Hot Water Supply Temperature Setpoint":{kind:"number",unit:"",equipType:"",tags:["water","temp","sp","supply","hot","boiler"]},"Hot Water Return Temperature":{kind:"number",unit:"",equipType:"",tags:["water","temp","sensor","return","hot","boiler"]}},n.HWP={"Hot Water Pump S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["run","cmd","hot","pump"]},"Hot Water Pump Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["run","sensor","hot","pump"]},"Hot Water Pump Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fault","sensor","hot","pump"]},"Hot Water Pump Differential Pressure":{kind:"number",unit:"",equipType:"",tags:["water","pressure","sensor","differential","hot","pump"]},"Hot Water Pump Differential Pressure Setpoint":{kind:"number",unit:"",equipType:"",tags:["water","pressure","sp","differential","hot","pump"]},"Hot Water Pump Speed":{kind:"number",unit:"",equipType:"",tags:["speed","cmd","hot","pump"]}},n.BoilerPlant={"Common Hot Water Supply Temperature":{kind:"number",unit:"",equipType:"",tags:["water","temp","sensor","supply","hot","common"]},"Common Hot Water Return Temperature":{kind:"number",unit:"",equipType:"",tags:["water","temp","sensor","return","hot","common"]}},n.FloorControl={"Floor Occupancy":{kind:"boolean",unit:"",equipType:"",tags:["run","cmd","occupied","floor"]},"After Hours Active Time":{kind:"number",unit:"",equipType:"",tags:["run","cmd","afterHour","activeTime","floor"]},"Zone Occupancy":{kind:"",unit:"",equipType:"",tags:["run","cmd","occupied","zone","floor"]},"Zone After Hours Active Time":{kind:"",unit:"",equipType:"",tags:["run","cmd","afterHour","activeTime","zone","floor"]},"After Hours ElapsedTime":{kind:"number",unit:"",equipType:"",tags:["afterHour","floor"]},"AH Enable":{kind:"boolean",unit:"",equipType:"",tags:["cmd","afterHour","ahuRef","floor"]},"VAV Enable":{kind:"",unit:"",equipType:"",tags:["enable","cmd","vav","floor"]},"Return Air Damper":{kind:"",unit:"",equipType:"",tags:["air","cmd","return","common","damper","floor"]},"Supply Air Damper":{kind:"",unit:"",equipType:"",tags:["air","cmd","supply","common","damper","floor"]},"Isolation Air Damper":{kind:"",unit:"",equipType:"",tags:["air","cmd","isolation","damper","floor"]},"Zone Temperature Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","temp","sp","zone","floor"]}},n.AHU_VAV={"AHU Fan S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","cmd","supply","ahu"]},"AHU Fan Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","sensor","supply","ahu"]},"AHU Fan Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","fault","sensor","supply","ahu"]},"AHU Fan Speed":{kind:"number",unit:"",equipType:"",tags:["fan","speed","cmd","supply","ahu"]},"Supply Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","supply","ahu"]},"Supply Air Temperature Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","temp","sp","supply","ahu"]},"Supply Air Static Pressure":{kind:"number",unit:"",equipType:"",tags:["air","pressure","sensor","supply","ahu"]},"Supply Air Static Pressure Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","pressure","sp","supply","ahu"]},"Supply Air Flow":{kind:"",unit:"",equipType:"",tags:["air","flow","sensor","supply","ahu"]},"Outside/Return/Room Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","outside/return","ahu"]},"Return/Room Air Temperature Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","temp","sp","return","ahu"]},"Supply/Return/Room Air Humidity":{kind:"number",unit:"",equipType:"",tags:["air","humidity","sensor","supply/return","ahu"]},"Outside Air Relative Humidity":{kind:"",unit:"",equipType:"",tags:["air","humidity","sensor","outside","ahu"]},"Cooling Coil Valve Control":{kind:"number",unit:"",equipType:"",tags:["water","valve","cmd","chilled","ahu"]},"Heating Coil Valve Control":{kind:"number",unit:"",equipType:"",tags:["water","valve","cmd","hot","ahu"]},"Air Off Coil Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","offCoil","hot/cold","ahu"]},"Outside Air Damper Control":{kind:"number/boolean",unit:"",equipType:"",tags:["air","damper","cmd","outside","ahu"]},"Mix Air Temperature":{kind:"",unit:"",equipType:"",tags:["air","temp","sensor","mix","ahu"]},"Minimum Outside Air Damper Control":{kind:"number/boolean",unit:"",equipType:"",tags:["air","damper","cmd","outside","minimum","ahu"]},"Minimum Outside Air Damper Feedback":{kind:"number/boolean",unit:"",equipType:"",tags:["air","damper","sensor","outside","minimum","ahu"]},"Return Air Damper Control":{kind:"number/boolean",unit:"",equipType:"",tags:["air","damper","cmd","return","ahu"]},"Exhaust Air Damper":{kind:"",unit:"",equipType:"",tags:["air","damper","cmd","exhaust","ahu"]},RACO2:{kind:"",unit:"",equipType:"",tags:["air","co2","sensor","return","ahu"]},"Electric Duct Heater S/S":{kind:"boolean",unit:"",equipType:"",tags:["edh","run","cmd","ahu"]},"Electric Duct Heater Status":{kind:"boolean",unit:"",equipType:"",tags:["edh","run","sensor","ahu"]},"Dew Point":{kind:"",unit:"",equipType:"",tags:["dewPoint","sensor","ahu"]},"Dew Point Setpoint":{kind:"",unit:"",equipType:"",tags:["dewPoint","sp","ahu"]},"Filter Differential Pressure":{kind:"",unit:"",equipType:"",tags:["pressure","sensor","filter","delta","ahu"]},"Filter Differential Pressure Setpoint":{kind:"",unit:"",equipType:"",tags:["pressure","sp","filter","delta","ahu"]},"Filter Status":{kind:"number/boolean",unit:"",equipType:"",tags:["fault","sensor","filter","ahu"]}},n.AHU_CAV={"AHU Fan S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","cmd","supply","ahu"]},"AHU Fan Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","sensor","supply","ahu"]},"AHU Fan Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","fault","sensor","supply","ahu"]},Speed:{kind:"",unit:"",equipType:"",tags:["fan","speed","sensor","supply","ahu"]},"Supply Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","supply","ahu"]},"Supply Air Temperature Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","temp","sp","supply","ahu"]},"Return Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","return","ahu"]},"Room Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","zone","ahu"]},"Outside Air Temperature":{kind:"",unit:"",equipType:"",tags:["air","temp","sensor","outside","ahu"]},"Mix Air Temperature":{kind:"",unit:"",equipType:"",tags:["air","temp","sensor","mix","ahu"]},"Return Air Temperature Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","temp","sp","return","ahu"]},"Room Air Temperature Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","temp","sp","zone","ahu"]},"Return Air Humidity":{kind:"number",unit:"",equipType:"",tags:["air","humidity","sensor","return","ahu"]},"Room Air Humidity":{kind:"number",unit:"",equipType:"",tags:["air","humidity","sensor","zone","ahu"]},"Outside Air Relative Humidity":{kind:"",unit:"",equipType:"",tags:["air","humidity","sensor","outside","ahu"]},"Cooling Coil Valve Control":{kind:"number",unit:"",equipType:"",tags:["water","valve","cmd","chilled","ahu"]},"Heating Coil Valve Control":{kind:"number",unit:"",equipType:"",tags:["water","valve","cmd","hot","ahu"]},"Air Off Coil Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","offCoil","hot/cold","ahu"]},"Outside Air Damper Control":{kind:"number/boolean",unit:"",equipType:"",tags:["air","damper","cmd","outside","ahu"]},"Minimum Outside Air Damper Control":{kind:"number/boolean",unit:"",equipType:"",tags:["air","damper","cmd","outside","minimum","ahu"]},"Minimum Outside Air Damper Feedback":{kind:"number/boolean",unit:"",equipType:"",tags:["air","damper","sensor","outside","minimum","ahu"]},"Exhaust Air Damper":{kind:"number/boolean",unit:"",equipType:"",tags:["air","damper","cmd","exhaust","ahu"]},RACO2:{kind:"",unit:"",equipType:"",tags:["air","co2","sensor","return","ahu"]},"Electric Duct Heater S/S":{kind:"boolean",unit:"",equipType:"",tags:["edh","run","cmd","ahu"]},"Electric Duct Heater Status":{kind:"boolean",unit:"",equipType:"",tags:["edh","run","sensor","ahu"]},"Dew Point":{kind:"",unit:"",equipType:"",tags:["dewPoint","sensor","ahu"]},"Dew Point Setpoint":{kind:"",unit:"",equipType:"",tags:["dewPoint","sp","ahu"]},"Filter Differential Pressure/Status":{kind:"number/boolean",unit:"",equipType:"",tags:["air","pressure","sensor","filter","ahu"]}},n.FCU={"FCU Fan S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","cmd","fcu"]},"FCU Fan Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","sensor","fcu"]},"FCU Fan Speed":{kind:"",unit:"",equipType:"",tags:["fan","speed","sensor","supply","fcu"]},"FCU Fan Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","fault","sensor","fcu"]},"Supply Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","supply","fcu"]},"Supply Air Temperature Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","temp","sp","supply","fcu"]},"Return/Room Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","return/zone","fcu"]},"Return/Room Air Temperature Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","temp","sp","return/zone","fcu"]},"Return/Room Air Humidity":{kind:"number",unit:"",equipType:"",tags:["air","humidity","sensor","return/zone","fcu"]},"Cooling Coil Valve Control":{kind:"number",unit:"",equipType:"",tags:["water","valve","cmd","chilled","fcu"]},"Heating Coil Valve Control":{kind:"number",unit:"",equipType:"",tags:["water","valve","cmd","hot","fcu"]},"Air Off Coil Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","offCoil","hot/cold","fcu"]},"Outside Air Damper Control":{kind:"number/boolean",unit:"",equipType:"",tags:["air","damper","cmd","outside","fcu"]},"Filter Differential Pressure/Status":{kind:"number/boolean",unit:"",equipType:"",tags:["air","pressure","sensor","filter","fcu"]}},n.FTU={"FTU Fan S/S":{kind:"",unit:"",equipType:"",tags:["fan","run","cmd","ftu"]},"Supply Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","supply","ftu"]},"Return/Room Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","return/zone","ftu"]},"Heating Coil Valve Control":{kind:"number",unit:"",equipType:"",tags:["water","valve","cmd","hot","ftu"]},Airflow:{kind:"number",unit:"",equipType:"",tags:["air","flow","sensor","ftu"]},"Damper Feedback":{kind:"",unit:"",equipType:"",tags:["air","damper","sensor","ftu"]}},n.PAC_HotWaterReheat={"PAC Fan S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","cmd","pac"]},"PAC Fan Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","sensor","pac"]},"PAC Fan Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","fault","sensor","pac"]},"Supply Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","supply","pac"]},"Return/Room Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","return/zone","pac"]},"Return/Room Air Temperature Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","temp","sp","return/zone","pac"]},"Return/Room Air Humidity":{kind:"number",unit:"",equipType:"",tags:["air","humidity","sensor","return/zone","pac"]},"Compressor S/S":{kind:"boolean",unit:"",equipType:"",tags:["refrig","run","cmd","pac"]},"Heating Coil Valve Control":{kind:"number",unit:"",equipType:"",tags:["water","valve","cmd","hot","pac"]},"Air Off Coil Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","offCoil","hot/cold","pac"]},"Outside Air Damper Control":{kind:"number/boolean",unit:"",equipType:"",tags:["air","damper","cmd","outside","pac"]},"Filter Differential Pressure/Status":{kind:"number/boolean",unit:"",equipType:"",tags:["air","pressure","sensor","filter","pac"]}},n.PAC_ReverseCycle={"PAC Fan S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","cmd","pac"]},"PAC Fan Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","sensor","pac"]},"PAC Fan Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","fault","sensor","pac"]},"Supply Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","supply","pac"]},"Return/Room Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","return/zone","pac"]},"Return/Room Air Temperature Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","temp","sp","return/zone","pac"]},"Return/Room Air Humidity":{kind:"number",unit:"",equipType:"",tags:["air","humidity","sensor","return/zone","pac"]},"Compressor S/S":{kind:"boolean",unit:"",equipType:"",tags:["refrig","run","cmd","reverse","pac"]},"Reverse Valve Control":{kind:"boolean",unit:"",equipType:"",tags:["valve","run","cmd","reverse","pac"]},"Air Off Coil Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","offCoil","hot/cold","pac"]},"Outside Air Damper Control":{kind:"number/boolean",unit:"",equipType:"",tags:["air","damper","cmd","outside","pac"]},"Filter Differential Pressure/Status":{kind:"number/boolean",unit:"",equipType:"",tags:["air","pressure","sensor","filter","pac"]}},n.PAC_ElectricReheat={"PAC Fan S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","cmd","pac"]},"PAC Fan Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","sensor","pac"]},"PAC Fan Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","fault","sensor","pac"]},"Supply Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","supply","pac"]},"Return/Room Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","return/zone","pac"]},"Return/Room Air Temperature Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","temp","sp","return/zone","pac"]},"Return/Room Air Humidity":{kind:"number",unit:"",equipType:"",tags:["air","humidity","sensor","return/zone","pac"]},"Compressor S/S":{kind:"boolean",unit:"",equipType:"",tags:["refrig","run","cmd","pac"]},"Electric Duct Heater S/S":{kind:"boolean",unit:"",equipType:"",tags:["edh","run","cmd","pac"]},"Air Off Coil Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","offCoil","hot/cold","pac"]},"Outside Air Damper Control":{kind:"number/boolean",unit:"",equipType:"",tags:["air","damper","cmd","outside","pac"]},"Filter Differential Pressure/Status":{kind:"number/boolean",unit:"",equipType:"",tags:["air","pressure","sensor","filter","pac"]}},n.PAC_Electric_Reheat_WaterCooled={"PAC Fan S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","cmd","pac"]},"PAC Fan Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","sensor","pac"]},"PAC Fan Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","fault","sensor","pac"]},"Supply Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","supply","pac"]},"Return/Room Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","return/zone","pac"]},"Return/Room Air Temperature Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","temp","sp","return/zone","pac"]},"Return/Room Air Humidity":{kind:"number",unit:"",equipType:"",tags:["air","humidity","sensor","return/zone","pac"]},"Compressor S/S":{kind:"boolean",unit:"",equipType:"",tags:["refrig","run","cmd","pac"]},"Electric Duct Heater S/S":{kind:"boolean",unit:"",equipType:"",tags:["edh","run","cmd","pac"]},"Condenser Water Call":{kind:"boolean",unit:"",equipType:"",tags:["run","cmd","condenser","pac"]},"Air Off Coil Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","offCoil","hot/cold","pac"]},"Outside Air Damper Control":{kind:"number/boolean",unit:"",equipType:"",tags:["air","damper","cmd","outside","pac"]},"Filter Differential Pressure/Status":{kind:"number/boolean",unit:"",equipType:"",tags:["air","pressure","sensor","filter","pac"]}},n.OutsideAirFan={"Outside Air Fan S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","cmd","outside","oaf"]},"Outside Air Fan Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","sensor","outside","oaf"]},"Outside Air Fan Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","fault","sensor","outside","oaf"]},"Outside Air Fan Speed":{kind:"number",unit:"",equipType:"",tags:["fan","speed","cmd","outside","oaf"]},"Outside Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","outside","oaf"]},"Outside Air Humidity":{kind:"number",unit:"",equipType:"",tags:["air","humidity","sensor","outside","oaf"]},"Outside Air Flow":{kind:"number",unit:"",equipType:"",tags:["air","flow","sensor","return","oaf"]},"Outside Air Static Pressure":{kind:"number",unit:"",equipType:"",tags:["air","pressure","sensor","outside","oaf"]},"Outside Air Static Pressure Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","pressure","sp","outside","oaf"]}},n.SupplyAirFan={"Supply Air Fan S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","cmd","supply","saf"]},"Supply Air Fan Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","sensor","supply","saf"]},"Supply Air Fan Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","fault","sensor","supply","saf"]},"Supply Air Fan Speed":{kind:"number",unit:"",equipType:"",tags:["fan","speed","cmd","supply","saf"]},"Supply Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","supply","saf"]},"Supply Air Flow":{kind:"number",unit:"",equipType:"",tags:["air","flow","sensor","supply","saf"]},"Supply Air Humidity":{kind:"number",unit:"",equipType:"",tags:["air","humidity","sensor","supply","saf"]},"Supply Air Static Pressure":{kind:"number",unit:"",equipType:"",tags:["air","pressure","sensor","supply","saf"]},"Supply Air Static Pressure Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","pressure","sp","supply","saf"]}},n.ReturnAirFan={"Return Air Fan S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","cmd","return","raf"]},"Return Air Fan Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","sensor","return","raf"]},"Return Air Fan Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","fault","sensor","return","raf"]},"Return Air Fan Speed":{kind:"number",unit:"",equipType:"",tags:["fan","speed","cmd","return","raf"]},"Return Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","return","raf"]},"Return Air Humidity":{kind:"number",unit:"",equipType:"",tags:["air","humidity","sensor","return","raf"]},"Return Air Flow":{kind:"number",unit:"",equipType:"",tags:["air","flow","sensor","return","raf"]},"Return Air Static Pressure":{kind:"number",unit:"",equipType:"",tags:["air","pressure","sensor","return","raf"]},"Return Air Enthalpy":{kind:"",unit:"",equipType:"",tags:["air","enthalpy","sensor","return","raf"]},"Return Air Suction Pressure":{kind:"number",unit:"",equipType:"",tags:["air","pressure","sensor","return","raf"]},"Return Air CO2":{kind:"number",unit:"",equipType:"",tags:["air","co2","sensor","return","raf"]},"Return Air Static Pressure Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","pressure","sp","return","raf"]}},n.AHUReturnAirFan={"AHU Return Air Fan S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","cmd","return","ahu"]},"AHU Return Air Fan Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","sensor","return","ahu"]},"AHU Return Air Fan Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","fault","sensor","return","ahu"]},"AHU Return Air Fan Speed":{kind:"number",unit:"",equipType:"",tags:["fan","speed","cmd","return","ahu"]},"AHU Return Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","return","ahu"]},"AHU Return Air Humidity":{kind:"number",unit:"",equipType:"",tags:["air","humidity","sensor","return","ahu"]},"AHU Return Air Static Pressure":{kind:"number",unit:"",equipType:"",tags:["air","pressure","sensor","return","ahu"]},"AHU Return Air CO2":{kind:"number",unit:"",equipType:"",tags:["air","co2","sensor","return","ahu"]},"AHU Return Air Static Pressure Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","pressure","sp","return","ahu"]}},n.CarParkSupplyAirFan={"CarPark Supply Air Fan S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","cmd","supply","carpark"]},"CarPark Supply Air Fan Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","sensor","supply","carpark"]},"CarPark Supply Air Fan Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","fault","sensor","supply","carpark"]},"CarPark Supply Air Fan Speed":{kind:"number",unit:"",equipType:"",tags:["fan","speed","cmd","supply","carpark"]},"CarPark Supply Air Static Pressure":{kind:"number",unit:"",equipType:"",tags:["air","pressure","sensor","supply","carpark"]},"CarPark Supply Air Static Pressure Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","pressure","sp","supply","carpark"]}},n.CarParkExhaustAirFan={"CarPark Exhaust Air Fan S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","cmd","exhaust","carpark"]},"CarPark Exhaust Air Fan Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","sensor","exhaust","carpark"]},"CarPark Exhaust Air Fan Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","fault","sensor","exhaust","carpark"]},"CarPark Exhaust Air Fan Speed":{kind:"number",unit:"",equipType:"",tags:["fan","speed","cmd","exhaust","carpark"]},"CarPark Exhaust Air Static Pressure":{kind:"number",unit:"",equipType:"",tags:["air","pressure","sensor","exhaust","carpark"]},"CarPark Exhaust Air Static Pressure Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","pressure","sp","exhaust","carpark"]},"CarPark Exhaust Carbon Monoxide":{kind:"number",unit:"",equipType:"",tags:["air","co","sensor","exhaust","carpark"]},"CarPark Exhaust Carbon Monoxide Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","co","sp","exhaust","carpark"]}},n.ToiletExhaustAirFan={"Toilet Exhaust Air Fan S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","cmd","exhaust","toilet"]},"Toilet Exhaust Air Fan Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","sensor","exhaust","toilet"]},"Toilet Exhaust Air Fan Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","fault","sensor","exhaust","toilet"]},"Toilet Exhaust Air Static Pressure":{kind:"number",unit:"",equipType:"",tags:["air","pressure","sensor","exhaust","toilet"]}},n.KitchenExhaustAirFan={"Kitchen Exhaust Air Fan S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","cmd","exhaust","kitchen"]},"Kitchen Exhaust Air Fan Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","sensor","exhaust","kitchen"]},"Kitchen Exhaust Air Fan Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","fault","sensor","exhaust","kitchen"]},"Kitchen Exhaust Air Static Pressure":{kind:"number",unit:"",equipType:"",tags:["air","pressure","sensor","exhaust","kitchen"]}},n.ExhaustAirFan={"Exhaust Air Fan S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","cmd","exhaust"]},"Exhaust Air Fan Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","sensor","exhaust"]},"Exhaust Air Fan Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","fault","sensor","exhaust"]},"Exhaust Air Static Pressure":{kind:"number",unit:"",equipType:"",tags:["air","pressure","sensor","exhaust"]}},n.GeneralExhaustAirFan={"General Exhaust Air Fan S/S":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","cmd","exhaust","general"]},"General Exhaust Air Fan Status":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","run","sensor","exhaust","general"]},"General Exhaust Air Fan Fault":{kind:"boolean",unit:"",equipType:"hisTsPrecision",tags:["fan","fault","sensor","exhaust","general"]},"General Exhaust Air Static Pressure":{kind:"number",unit:"",equipType:"",tags:["air","pressure","sensor","exhaust","general"]}},n.VAV={"Zone/Room Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","zone","vav"]},"Zone/Room Temperature Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","temp","sp","zone","vav"]},"Supply Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","supply","vav"]},"Return Air Temperature":{kind:"number",unit:"",equipType:"",tags:["air","temp","sensor","return","vav"]},"Zone/Room Relative Humidity":{kind:"number",unit:"",equipType:"",tags:["air","humidity","sensor","zone","vav"]},Damper:{kind:"number",unit:"%",equipType:"",tags:["air","damper","cmd","vav"]},Airflow:{kind:"number",unit:"",equipType:"",tags:["air","flow","sensor","vav"]},"Airflow Setpoint":{kind:"number",unit:"",equipType:"",tags:["air","flow","sp","vav"]},"Minimum Airflow":{kind:"string",unit:"",equipType:"",tags:["air","flow","sensor","min","vav"]},"Electric Duct Heater Status":{kind:"",unit:"",equipType:"",tags:["edh","run","sensor","vav"]},"Electric Duct Heater S/S":{kind:"",unit:"",equipType:"",tags:["edh","run","cmd","vav"]},"Terminal Load":{kind:"number",unit:"",equipType:"",tags:["air","sensor","terminalLoad","vav"]},"Maximum Airflow":{kind:"number",unit:"",equipType:"",tags:["air","flow","sensor","max","vav"]}},n.Power_SubMeter={"Total Active Energy":{kind:"",unit:"",equipType:"",tags:["elec","energy","sensor","active","exclusion","hisOnWrite"]},"Total Active Power":{kind:"",unit:"",equipType:"",tags:["elec","power","sensor","active"]}},n.PowerSiteMeter={"Total Active Energy":{kind:"",unit:"",equipType:"",tags:["elec","energy","sensor","active"]},"Total Active Power":{kind:"",unit:"",equipType:"",tags:["elec","power","sensor","active"]},"Energy Target":{kind:"",unit:"",equipType:"",tags:["elec ","energy","target"]},"???":{kind:"",unit:"",equipType:"",tags:["gas","sensor","inclusion","hisTotalized"]}},n.Gas_SubMeter={"Total Gas Consumption":{kind:"",unit:"",equipType:"",tags:["gas","sensor","exclusion","hisTotalized"]}},n.Gas_SiteMeter={"Total Gas Consumption":{kind:"",unit:"",equipType:"",tags:["gas","sensor","inclusion","hisTotalized"]},"Gas Target":{kind:"",unit:"",equipType:"",tags:["gas","target","sensor","exclusion","hisTotalized"]}},n.Water_subMeter={"Total Water Consumption":{kind:"",unit:"",equipType:"",tags:["water","sensor","inclusion/exclusion","hisTotalized"]}},n.Water_SiteMeter={"Total Water Consumption":{kind:"",unit:"",equipType:"",tags:["water","sensor"]},"Water Target":{kind:"",unit:"",equipType:"",tags:["water","target"]}}},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(2),a=i(3),r=i(10),o=i(0),u=i(6);class d extends u.FlexibleNode{constructor(){super(),this.previousAdvancedSetting=!1,this.advancedSetting=!1,this.settings.url={description:"Select Url",value:"",type:n.SettingType.DROPDOWN,config:{items:[]}},this.settings.point={description:"Select Point",value:"",type:n.SettingType.STRING},this.settings.point={description:"Select Point",value:"",type:n.SettingType.DROPDOWN,config:{items:[]}}}onAdded(){this.previousAdvancedSetting=this.settings.advancedSetting.value,this.advancedSetting=this.previousAdvancedSetting,this.updateTitle()}onInputUpdated(){return s(this,void 0,void 0,(function*(){this.side===o.Side.server&&(yield this.reload(),this.updateTitle(),this.broadcastTitleToClients())}))}fetchPointValue({jwt:t,host:e,port:i},n){return s(this,void 0,void 0,(function*(){const s=`${a.default.buildUrl(e,i)}/points/${n}`;return(yield r.default.get(s,{headers:{Authorization:t}})).data}))}fetchConnection(){return s(this,void 0,void 0,(function*(){const t=(yield this.container.db.getAsyncUsers()).map(t=>({value:JSON.stringify(t),text:`${a.default.buildUrl(t.host,t.port)}/points (${t.nodeId})`}));this.settings.url.config.items=t,this.broadcastSettingsToClients();const e=this.settings.url.value,i=this.settings.url.value,s=JSON.parse(e),n=t.find(t=>JSON.parse(t.value).nodeId===s.nodeId);if(!i||!n)throw{message:"No connection"};return this.settings.url.value=n.value,this.broadcastSettingsToClients(),i&&JSON.parse(i)||null}))}fetchPoints({jwt:t,host:e,port:i}){return s(this,void 0,void 0,(function*(){const s=`${a.default.buildUrl(e,i)}/points`,n=yield r.default.get(s,{headers:{Authorization:t}}),o=this.filterPoint(Object.keys(n.data)).map(t=>({value:t,text:t}));this.settings.point.config.items=o,this.broadcastSettingsToClients();const u=this.settings.point.value;if(!u||!o.map(t=>t.value).includes(u))throw{message:"No point"};return u}))}filterPoint(t){return t}}e.default=d},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{static persistProperties(t,e=!1,i=!1,s=!1,n=!1){if(t.container.db){var a={};e&&(a.settings=t.settings),i&&(a.properties=t.properties),s&&(a.inputs=t.inputs),n&&(a.outputs=t.outputs),t.container.db.updateNode(t.id,t.container.id,{$set:a})}}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class s{static scale420maToRange(t,e,i){return t<=4?e:t>=20?i:(t-4)*((i-e)/16)+e}static scaleUI420ma(t,e,i){const s=(t-e)*(20/(i-e));return s<=4?4:s>=20?20:s}}e.default=s,s.scaleToGPIOValue=(t,e,i,s=120,n=0)=>{let a=t,r=(i-e)*(a-s)/(n-s)+e;return r>i?(r=i,a=n):r<e&&(r=e,a=s),r},s.scaleFromGPIOValue=(t,e,i,s=0,n=1)=>(i-e)*(t-s)/(n-s)+e,s.uiAsDI=t=>t>.6?0:t<.2?1:void 0,s.diInvert=t=>1^t},function(t,e,i){"use strict";var s;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.NA=0]="NA",t[t.ADD=1]="ADD",t[t.SUBTRACT=2]="SUBTRACT",t[t.MULTIPLY=3]="MULTIPLY",t[t.DIVIDE=4]="DIVIDE",t[t.REMAINDER=5]="REMAINDER",t[t.EXP=6]="EXP",t[t.BOOL_INVERT=7]="BOOL_INVERT",t[t.ONE_TO_TRUE=8]="ONE_TO_TRUE",t[t.TRUE_TO_ONE=9]="TRUE_TO_ONE",t[t.NUMBER_INVERT=10]="NUMBER_INVERT"}(s=e.MATH_FUNC_TYPE||(e.MATH_FUNC_TYPE={}));class n{static clamp(t,e,i){return Math.min(Math.max(t,e),i)}static decimals(t,e){if(isNaN(t))return;const i=t.toFixed(n.clamp(e,0,5));return parseFloat(i),i}static numInvert(t){return 1^t}static trueToOne(t){if("boolean"==typeof t)return t?1:0}static oneToTrue(t){if("number"==typeof t)return!!t}static invert(t){if("boolean"==typeof t)return!t}static mathSwitch(t,e,i){let a;switch(t){case s.NA:a=0;break;case s.ADD:a=e+i;break;case s.SUBTRACT:a=e-i;break;case s.MULTIPLY:a=e*i;break;case s.DIVIDE:a=e/i;break;case s.REMAINDER:case s.EXP:a=1;break;case s.BOOL_INVERT:a=n.invert(e);break;case s.ONE_TO_TRUE:a=n.oneToTrue(e);break;case s.TRUE_TO_ONE:a=n.trueToOne(e);break;case s.NUMBER_INVERT:a=n.numInvert(e)}return a}}e.default=n,n.validateNumbers=(...t)=>t.every(t=>!isNaN(t))},function(t,e,i){"use strict";var s=this&&this.__decorate||function(t,e,i,s){var n,a=arguments.length,r=a<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,i,s);else for(var o=t.length-1;o>=0;o--)(n=t[o])&&(r=(a<3?n(r):a>3?n(e,i,r):n(e,i))||r);return a>3&&r&&Object.defineProperty(e,i,r),r};Object.defineProperty(e,"__esModule",{value:!0});const n=i(51),a=i(4),r=i(0),o=i(1),u=i(11),d=i(75),p=i(34),l=i(76),h=i(293),c=i(80);e.BACNET_SERVER_NODE_TYPE="protocols/bacnet-server/bacnet-server",e.REGISTER_BACNET_POINT="REGISTER_BACNET_POINT",e.UPDATE_BACNET_POINT="UPDATE_BACNET_POINT",e.PUSH_BACNET_POINT_VALUE="PUSH_BACNET_POINT_VALUE",e.UNREGISTER_BACNET_POINT="UNREGISTER_BACNET_POINT";class g extends p.CentralizedPointOutputObserver{convert(t){let e={};return e[t.point.identifier()]={objectId:t.point.objectInstance,objectType:t.point.objectType.label,objectName:t.point.objectName,pointValue:t.point.pointValue,status:t.connStatus.status.label,error:t.connStatus.error},e}}class y extends d.OneIdentifierOneNodeStore{getError(){return this.errors}getNodes(){return this.nodes}alreadyExistedMsg(t){var e,i;return`Already exist object with ${null===(e=t.data)||void 0===e?void 0:e.objectInstance} and type ${null===(i=t.data)||void 0===i?void 0:i.objectType}`}}class m extends l.ProtocolDeviceNode{constructor(t){super(t,"BACnet Server","A BACnet server is used to host BACnet points to be read/written by other BACnet devices. The bacnet-server node acts as a container for bacnet-server-point nodes. All bacnet-server-point nodes should be added within the bacnet-server container. IP configurations for the BACnet server connection are set from settings."),this._oPointsSlot=2,this.device=null,this.store=new y,this.mixinEnableInputSetting(),this.addInputWithSettings("address",o.Type.STRING,"0.0.0.0","BACnet Server Address"),this.addInputWithSettings("broadcast",o.Type.STRING,"255.255.255.255","Broadcast Address"),this.addInputWithSettings("port",o.Type.NUMBER,47808,"BACnet port"),this.addInputWithSettings("id",o.Type.NUMBER,1,"BACnet Device Id"),this.addInputWithSettings("name",o.Type.STRING,"nube-bacnet","BACnet Device Name"),this.addInputWithSettings("apdu",o.Type.NUMBER,1476,"BACnet APDU"),this.addOutput("points",o.Type.JSON)}listen({action:t,payload:i}){switch(this.debugInfo(`Handling ${t}:${i.identifier}...`),t){case e.REGISTER_BACNET_POINT:return this.store.register(i,t=>this.afterRegister(t));case e.UPDATE_BACNET_POINT:return this.store.update(i,t=>this.afterUpdate(t),(t,e)=>this.afterUnregister(t,e));case e.PUSH_BACNET_POINT_VALUE:return this.pushValue(i);case e.UNREGISTER_BACNET_POINT:return this.store.unregister(i,!0,t=>this.afterUnregister(t,!0));default:this.debugWarn("Request action doesn't match")}}connObserverNodes(){return this.store.listNodeIds().map(t=>u.default._nodes[t]).filter(t=>t).map(t=>t.statusObserver())}pointObservers(){return[new g(this,this._oPointsSlot)]}applyTitle(){super.applyTitle(),this.broadcastSettingsToClients(),this.broadcastNameToClients()}isConnConnected(){return null!==this.device}onReceiveMessage(t){if(!this.getConnectionStatus().isConnected())return;let e=c.PointKind.lookupByValue(t.objectType),i=c.BacnetPointCreator.create(this.isEnabled(),t.objectId,e,null,t.presentValue,t.priority,t.priorityArray),s=this.store.lookup(i.identifier());s&&u.default._nodes[s.nodeId]&&a.isFunction(s.func)?s.func(i):this.debug(`Receive message to BACnet Point ${i.identifier()} but not found node`)}createThenStart(){this.device=new h.default({deviceId:this.settings.id.value,name:this.settings.name.value,databaseRevision:1},{port:this.settings.port.value,address:this.settings.address.value,broadcast:this.settings.broadcast.value,apduTimeout:this.settings.apdu.value},t=>this.onReceiveMessage(t)),this.device.start()}stop(){if(this.device)try{this.device.stop(),this.device=null}catch(t){this.debugWarn(`Cannot closed BACnet client ${t}`)}}afterRegister(t){return t.enabled&&this.getConnectionStatus().isConnected()?(this.device.addPoint(t.data),t.data):null}afterUpdate(t){return t.enabled&&this.getConnectionStatus().isConnected()?this.device.updatePoint(t.data):null}pushValue(t){return t.enabled&&this.getConnectionStatus().isConnected()?this.device.updateValue(t.data):null}afterUnregister(t,e){var i,s,n,a;if((null===(i=t.data)||void 0===i?void 0:i.objectInstance)&&this.getConnectionStatus().isConnected()&&this.device.delObject(null===(s=t.data)||void 0===s?void 0:s.objectInstance,null===(a=null===(n=t.data)||void 0===n?void 0:n.objectType)||void 0===a?void 0:a.value),e){let e=this.outputs[this._oPointsSlot].data;e&&delete e[t.identifier],this.setOutputData(this._oPointsSlot,e)}}}s([n.ErrorHandler],m.prototype,"onReceiveMessage",null),r.Container.registerNodeType(e.BACNET_SERVER_NODE_TYPE,m)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(4);class n{constructor(){this.nodeIdErrors=new Set}hasError(t){return this.nodeIdErrors.has(t)}addError(t){this.nodeIdErrors.add(t)}removeError(t){this.nodeIdErrors.delete(t)}listErrors(){return this.nodeIdErrors}}e.DefaultContainerErrorNode=n;class a{register(t,e){return this.checkExistence(t),this.add(t),e&&e(t)}update(t,e,i){var s,n,a,r,o,u,d;if((null===(s=t)||void 0===s?void 0:s.identifier)!==(null===(a=null===(n=t)||void 0===n?void 0:n.prev)||void 0===a?void 0:a.identifier)){try{this.checkExistence(null===(r=t)||void 0===r?void 0:r.prev)}catch(e){this.unregister(null===(o=t)||void 0===o?void 0:o.prev,!0,t=>i&&i(t,!0))}return this.register(t,e)}return(null===(u=t)||void 0===u?void 0:u.enabled)?(this.add(t),e&&e(t)):(this.unregister(t,!1,t=>i&&i(t,!1)),null===(d=t)||void 0===d?void 0:d.data)}}e.AbstractContainerStore=a;e.OneIdentifierOneNodeStore=class extends a{constructor(){super(...arguments),this.nodes={},this.errors=new n}checkExistence(t){var e;if(this.nodes[null===(e=t)||void 0===e?void 0:e.identifier]){if(t.lenient&&this.nodes[t.identifier].nodeId===t.nodeId)return;throw this.nodes[t.identifier].nodeId!==t.nodeId&&this.errors.addError(t.nodeId),new Error(this.alreadyExistedMsg(t))}}lookup(t){var e;return null!=(e=this.nodes[t])?e:null}update(t,e,i){var s;return this.errors.removeError(null===(s=t)||void 0===s?void 0:s.nodeId),super.update(t,e,i)}unregister(t,e,i){var n;if(s.isNull(t))return null;this.errors.removeError(null===(n=t)||void 0===n?void 0:n.nodeId);let a=this.lookup(t.identifier);return s.isNull(a)?null:a.nodeId!==t.nodeId?null:(e?delete this.nodes[t.identifier]:this.nodes[this.add(t)].enabled=!1,i&&i(t))}listNodeIds(){return s.unionToArray(Object.values(this.nodes).map(t=>t.nodeId),this.errors.listErrors())}add(t){var e;return this.errors.removeError(null===(e=t)||void 0===e?void 0:e.nodeId),this.nodes[t.identifier]={identifier:t.identifier,nodeId:t.nodeId,enabled:t.enabled,func:t.callback},t.identifier}};e.OneIdentifierManyNodeStore=class extends a{constructor(){super(...arguments),this.nodes={}}checkExistence(t){var e,i,s,n;if(this.nodes[null===(e=t)||void 0===e?void 0:e.identifier]&&this.nodes[null===(i=t)||void 0===i?void 0:i.identifier][null===(s=t)||void 0===s?void 0:s.nodeId]){if(null===(n=t)||void 0===n?void 0:n.lenient)return;throw new Error(this.alreadyExistedMsg(t))}}lookup(t){var e;return null!=(e=this.nodes[t])?e:{}}unregister(t,e,i){var n,a,r,o,u;let d=this.lookup(t.identifier);return s.isNull(d)||s.isNull(d[null===(n=t)||void 0===n?void 0:n.nodeId])?null:(e?this.nodes[null===(a=t)||void 0===a?void 0:a.identifier]&&delete this.nodes[null===(r=t)||void 0===r?void 0:r.identifier][null===(o=t)||void 0===o?void 0:o.nodeId]:this.nodes[this.add(t)][null===(u=t)||void 0===u?void 0:u.nodeId].enabled=!1,i&&i(t))}listNodeIds(){return s.unionToArray(...Object.values(this.nodes).map(t=>Object.keys(t)))}has(t,e){return Object.entries(this.lookup(t)).some(t=>e(t[0],t[1]))}add(t){var e,i,s,n,a,r,o,u;return this.nodes[null===(e=t)||void 0===e?void 0:e.identifier]=null!=(s=this.nodes[null===(i=t)||void 0===i?void 0:i.identifier])?s:{},this.nodes[null===(n=t)||void 0===n?void 0:n.identifier][null===(a=t)||void 0===a?void 0:a.nodeId]={enabled:null===(r=t)||void 0===r?void 0:r.enabled,func:null===(o=t)||void 0===o?void 0:o.callback},null===(u=t)||void 0===u?void 0:u.identifier}}},function(t,e,i){"use strict";var s=this&&this.__decorate||function(t,e,i,s){var n,a=arguments.length,r=a<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,i,s);else for(var o=t.length-1;o>=0;o--)(n=t[o])&&(r=(a<3?n(r):a>3?n(e,i,r):n(e,i))||r);return a>3&&r&&Object.defineProperty(e,i,r),r};Object.defineProperty(e,"__esModule",{value:!0});const n=i(51),a=i(77),r=i(35),o=i(0),u=i(14),d=i(11),p=i(36);class l extends(p.ExternalConnectionNodeMixin(u.ContainerNode)){constructor(t,e,i){super(t),this._title=e,this.description=i,this.mixinConnectionStatusOutput()}onCreated(){super.onCreated()}onAdded(){this.startOrStop(),this.applyTitle()}onAfterSettingsChange(){this.startOrStop(),this.applyTitle()}onInputUpdated(){this.reEvaluateSettingByInput(this.inputs,this.settings),this.onAfterSettingsChange()}onRemoved(){this.stop(),super.onRemoved()}applyTitle(){super.applyTitle()}statusObservable(t){return t.push(this.statusObserver()),new r.DefaultObservable(t)}statusOutputIdx(){return 0}enableDescription(){return`Enable ${this._title}`}startOrStop(){this.side===o.Side.server&&(this.stop(),this.connectionStatus=a.ConnectionStatus.UNCONNECTED,this.isEnabled()&&this.kickoff(this),this.notifyConnStatusOutput())}kickoff(t){t.createThenStart(),this.notifyConnStatusOutput(a.ConnectionStatus.CONNECTED)}handleErrorInKickOff(t){this.notifyConnStatusOutput(a.ConnectionStatus.ERROR,t.message)}notifyConnStatusOutput(t,e){this.connectionStatus=null!=t?t:this.connectionStatus;let i=d.default.getId(this.cid,this.id);this.statusObservable(this.connObserverNodes()).notify(new p.ConnectionOutput(this.getConnectionStatus(),e),i)}}s([n.ErrorCallbackHandler((t,e)=>e.handleErrorInKickOff(t))],l.prototype,"kickoff",null),e.ProtocolDeviceNode=l},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(52);class n extends s.Enumify{constructor(t){super(),this.label=t}static lookupByLabel(t){return n.enumValues.map(t=>t).find(e=>e.label===t)}isConnected(){return this===n.CONNECTED}isError(){return this===n.ERROR}isDisconnected(){return this===n.DISCONNECTED}isUnconnected(){return this===n.UNCONNECTED}}e.ConnectionStatus=n,n.CONNECTED=new n("CONNECTED"),n.DISCONNECTED=new n("DISCONNECTED"),n.ERROR=new n("ERROR"),n.UNCONNECTED=new n("UNCONNECTED"),n._=n.closeEnum(),function(t){t[t.COV=0]="COV",t[t.TRIGGERED=1]="TRIGGERED"}(e.HistoryMode||(e.HistoryMode={}))},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(4),n=i(1);e.NodeInputOutputDecoratorProxy=class{constructor(t){this.func=t}reEvaluateSettingByInput(t,e){this.func&&s.isFunction(this.func)&&this.func(t,e)}},e.AbleEnableNode=function(t){return class extends t{mixinEnableInputSetting(){return this.addInputWithSettings(this.enableSettingKey(),n.Type.BOOLEAN,!1,this.enableDescription()),{conditions:{}}}reEvaluateSettingByInput(t,e){var i;s.isFunction(super.reEvaluateSettingByInput)&&super.reEvaluateSettingByInput(t,e),this.settings[this.enableSettingKey()].value=null!=(i=this.inputs[this.enableInputIdx()].data)?i:this.settings[this.enableSettingKey()].value}enableInputIdx(){return 0}enableSettingKey(){return"enable"}isEnabled(){var t;let e=!0;return s.isFunction(super.isEnabled)&&(e=super.isEnabled()),e&&(null===(t=this.settings[this.enableSettingKey()])||void 0===t?void 0:t.value)}}}},function(t,e,i){const s=i(296),n=i(18),a=i(297),r=i(53),o=n&&n.enum.PropertyIdentifier,u=n&&{[o.OBJECT_TYPE]:n.enum.ObjectType};t.exports=class{constructor(t,e,i,s=!1){if(this.obj=t,this.propertyId=e,this.typeId=null==i?a[e]:i,this.readOnly=s,this.subscriptions=[],void 0===this.typeId)throw new Error(`Property ${r.getPropName(e)} has no default `+"type set, you must specify one yourself or update the bacnet-device Node module.");this.callbacks=[]}get value(){return this._value}set value(t){if(this.readOnly)throw new Error(`Property ${r.getPropName(this.propertyId)} cannot be changed.`);this._value=t,this.obj.onPropertyChanged(this),this.callbacks.forEach(t=>{t.fn(this)})}addCallback(t,e){this.callbacks.push({id:t,fn:e})}removeCallback(t){this.callbacks=this.callbacks.filter(e=>e.id!==t)}valueAsString(){let t=u[this.propertyId],e=this._value;return t&&(e=r.getEnumName(t,e)),e}toString(){return`BACnetObjectProperty { ${r.getPropName(this.propertyId)} = ${this.valueAsString()} }`}[s.inspect.custom](){return this.toString()}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(52),n=i(29),a=i(4);class r extends s.Enumify{constructor(t,e){super(),this.value=t,this.label=e}static items(){return r.enumKeys.map(t=>({value:t,text:r.enumValueOf(t).label}))}static lookupByValue(t){return r.enumValues.map(t=>t).find(e=>e.value===t)}static lookupByLabel(t){return r.enumValues.map(t=>t).find(e=>e.label===t)}}e.PointKind=r,r.ANALOG_INPUT=new r(0,"analog-input"),r.ANALOG_OUTPUT=new r(1,"analog-output"),r.ANALOG_VALUE=new r(2,"analog-value"),r.BINARY_INPUT=new r(3,"binary-input"),r.BINARY_OUTPUT=new r(4,"binary-output"),r.BINARY_VALUE=new r(5,"binary-value"),r.MULTI_STATE_INPUT=new r(13,"multi-state-input"),r.MULTI_STATE_OUTPUT=new r(14,"multi-state-output"),r.MULTI_STATE_VALUE=new r(19,"multi-state-value"),r._=r.closeEnum();class o{constructor(){}}e.BacnetPointCreator=o,o.from=t=>{var e,i,s,n,r,u,d,p;if(a.isNull(t))return null;let l=null===(e=t)||void 0===e?void 0:e.pointValue;return o.create(null===(i=t)||void 0===i?void 0:i.enabled,null===(s=t)||void 0===s?void 0:s.objectInstance,null===(n=t)||void 0===n?void 0:n.objectType,null===(r=t)||void 0===r?void 0:r.objectName,null===(u=l)||void 0===u?void 0:u.presentValue,null===(d=l)||void 0===d?void 0:d.priority,null===(p=l)||void 0===p?void 0:p.priorityArray)},o.create=(t,e,i,s,a,r,u)=>o.by(t,e,i,s,n.PointValueCreator.create(a,r,u)),o.by=(t,e,i,s,n)=>new u(t,e,i,s,n);class u{constructor(t,e,i,s,n){this.enabled=t||!1,this.objectInstance=e,this.objectType=i,this.objectName=s,this.pointValue=n}identifier(){return`${this.objectType.enumKey}:${this.objectInstance}`}mightOnlyValueChanged(t){var e,i,s,n;return this.enabled===(null===(e=t)||void 0===e?void 0:e.enabled)&&this.objectInstance===(null===(i=t)||void 0===i?void 0:i.objectInstance)&&this.objectType===(null===(s=t)||void 0===s?void 0:s.objectType)&&this.objectName===(null===(n=t)||void 0===n?void 0:n.objectName)}equals(t){var e;return this.identifier()===(null===(e=t)||void 0===e?void 0:e.identifier())}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);var r;!function(t){t[t.INT8=0]="INT8",t[t.UINT8=1]="UINT8",t[t.INT16=2]="INT16",t[t.UINT16=3]="UINT16",t[t.INT32=4]="INT32",t[t.UINT32=5]="UINT32",t[t.FLOAT=6]="FLOAT"}(r=e.LORA_DATA_TYPE_NAMES||(e.LORA_DATA_TYPE_NAMES={})),e.LORA_DATA_TYPE_LENGTHS=[1,1,2,2,4,4,4];class o extends s.Node{constructor(){super(),this.payloadDefinition=[],this.title="Nube LoRaRAW Two Way In",this.description="This node parses Nubes LoRa Two Way protocol",this.settings.enable={description:"enable",type:s.SettingType.BOOLEAN,value:!1},this.settings.senderId={description:"sender Id",type:s.SettingType.NUMBER,value:0},this.settings.port={description:"port number",type:s.SettingType.NUMBER,value:0},this.settings.types={description:"Types",type:s.SettingType.READONLY,value:"INT8, INT16, INT32, FLOAT"},this.settings.definition={description:"payload definition (JSON)",type:s.SettingType.STRING,value:""},this.addInput("rawInput",a.Type.STRING),this.addOutput("error",a.Type.STRING)}init(){this.updateOutputs()}onAdded(){this.payloadDefinition=this.stringToDataTypes(this.settings.definition.value)}onInputUpdated(){let t=this.getInputData(0)||"";if(!1===this.settings.enable.value)return;if(!t)return;if(!t||t.length<=12||"FFFFFFFF"!==t.substring(0,8))return;const i=parseInt(t.substring(10,12),16),s=parseInt(t.substring(12,14),16);if(i!==this.settings.senderId.value||s!==this.settings.port.value)return;"\r\n"===t.substring(t.length-2,t.length)?t=t.substring(0,t.length-2):t.length%2==1&&"\n"===t[t.length-1]&&(t=t.substring(0,t.length-1));const n=t=>{this.setOutputData(0,"parse error: "+t)};let a=Buffer.from(t.substring(14),"hex"),o=new Array(this.payloadDefinition.length);o.fill(!1);for(let t=0;t<a.length;){let i=a.readUInt8(t++),s=0;if(i>=this.payloadDefinition.length)return void n("invalid point "+i);if(o[i])return void n("point already parsed: "+i);if(s=e.LORA_DATA_TYPE_LENGTHS[this.payloadDefinition[i]],a.length-t<s)return void n("invalid length");switch(this.payloadDefinition[i]){case r.INT8:this.setOutputData(i+1,a.readInt8(t));break;case r.UINT8:this.setOutputData(i+1,a.readUInt8(t));break;case r.INT16:this.setOutputData(i+1,a.readInt16LE(t));break;case r.UINT16:this.setOutputData(i+1,a.readUInt16LE(t));break;case r.INT32:this.setOutputData(i+1,a.readInt32LE(t));break;case r.UINT32:this.setOutputData(i+1,a.readUInt32LE(t));break;case r.FLOAT:this.setOutputData(i+1,a.readFloatLE(t))}o[i]=!0,t+=s}this.setOutputData(0,null)}onAfterSettingsChange(){this.payloadDefinition=this.updateOutputs(),this.setOutputData(0,null),this.onInputUpdated()}updateOutputs(){const t=this.stringToDataTypes(this.settings.definition.value);if(this.payloadDefinition.length!==t.length){const e=this.getOutputsCount();for(let t=1;t<e;t++)this.removeOutput(t);for(let e=0;e<t.length;e++)this.addOutput(e.toString(),a.Type.NUMBER);this.updateNodeOutput()}return t}stringToDataTypes(t){const e=t.toUpperCase().replace(/ /g,"").split(",").filter(t=>""!==t);if(e&&e.length)for(let t=0;t<e.length;t++){if(void 0===r[e[t]])return void this.setOutputData(1,"settings parse error");e[t]=r[e[t]]}return e}}e.LoRaRawTwoWayInput=o,n.Container.registerNodeType("protocols/lora-raw/lora-raw-two-way-in",o)},function(t,e){t.exports=require("crypto")},function(t,e){t.exports=require("modbus-serial")},function(t,e){t.exports=require("net")},function(t,e){t.exports=require("mqtt-match")},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(75);e.MqttPointStoreItem=class{constructor(t,e,i,s,n){this.identifier=t,this.nodeId=e,this.enabled=i,this.publisher=s,this.subscriber=n}toPublisher(){return this.to(this.publisher)}toSubscriber(){return this.to(this.subscriber)}to(t){var e,i,s,n,a;return{identifier:(i=null===(e=t)||void 0===e?void 0:e.identifier,null!=i?i:this.identifier),nodeId:this.nodeId,enabled:this.enabled,prev:null===(s=t)||void 0===s?void 0:s.prev,data:null===(n=t)||void 0===n?void 0:n.data,lenient:this.lenient,callback:null===(a=t)||void 0===a?void 0:a.callback}}};class n extends s.OneIdentifierOneNodeStore{alreadyExistedMsg(t){var e;return`Already exist MQTT publisher bind to topic ${null===(e=t)||void 0===e?void 0:e.identifier}`}}e.MqttPublisherStore=n;class a extends s.OneIdentifierManyNodeStore{alreadyExistedMsg(t){var e;return`Already existed MQTT subscriber bind to topic ${null===(e=t)||void 0===e?void 0:e.identifier} with node id ${t.nodeId}`}}e.MqttSubscriberStore=a},function(t,e){t.exports=require("serialport")},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(27);class a{static isUUID(t){const e=t.toString().trim().split("-");return e.length>=1&&8===e[0].length}static isUUIDFile(t){return s(this,void 0,void 0,(function*(){try{let e=yield n.default.readFile(t);return!!e&&a.isUUID(e)}catch(t){return!1}}))}static makeUUIDFile(t,e){return s(this,void 0,void 0,(function*(){try{yield n.default.createDirectory(t),yield n.default.writeFile(`${t}/${e}`,a.create8DigId())}catch(t){throw t}}))}}e.default=a,a.createUUID=(t="")=>t?((Number(t)^16*Math.random())>>Number(t)/4).toString(16):`${1e7}-1000-4000-8000-${1e11}`.replace(/[018]/g,a.createUUID),a.create8DigId=(t="")=>t?((Number(t)^16*Math.random())>>Number(t)/4).toString(16):`${1e7}`.replace(/[018]/g,a.create8DigId),a.create12DigId=(t="")=>t?((Number(t)^16*Math.random())>>Number(t)/4).toString(16):`${1e7}-4000`.replace(/[018]/g,a.create12DigId)},function(t,e){t.exports=require("os")},function(t){t.exports=JSON.parse('{"name":"rubix-wires","version":"1.5.2","title":"Rubix Wires","author":"zero, binod, marc, ap, hilly, ritesh, ig, dan <dev@nube-io.com>","private":true,"engines":{"node":">=10.0.0","npm":">=6.0.0"},"scripts":{"compile":"tsc","prepareBuild":"node buildSrc/prepareBuild.js","prestart":"npm run prepareBuild && npm run compile","start":"node dist/app.js --datadir ./db","prebuild":"npm run prepareBuild --prod","build":"webpack --config webpack.all.prod.js --env.production","postbuild":"node buildSrc/distribute.js","test":"jest","predocker":"npm run compile","docker":"node dist/app.js","docker:prod":"node app.js","pm2:start":"npm run pm2:delete && NODE_ENV=production pm2 start ecosystem.config.js","pm2:stop":"pm2 stop ecosystem.config.js","pm2:delete":"pm2 delete ecosystem.config.js","pm2:status":"pm2 status","pm2:save":"pm2 save","pm2:startup":"pm2 startup","pm2:unstartup":"pm2 unstartup","pm2":"pm2","install:pm2-logrotate":"pm2 install pm2-logrotate","uninstall:pm2-logrotate":"pm2 uninstall pm2-logrotate"},"dependencies":{"@hapi/joi":"^17.1.0","@mdi/font":"^4.9.95","axios":"^0.19.0","body-parser":"^1.16.1","btoa":"^1.2.1","codeflask":"^1.4.1","convert-units":"^2.3.4","cookie-parser":"^1.4.3","cron":"^1.8.2","cron-parser":"^2.13.0","cron-time-generator":"^1.0.4","cron-validator":"^1.1.1","cronstrue":"^1.92.0","crypto-js":"^3.1.9-1","dotenv":"^8.2.0","enumify":"^2.0.0","events":"^1.1.1","express":"^4.14.1","express-validator":"^4.3.0","influx":"^5.5.1","ip":"^1.1.5","jquery":"^3.2.1","jsonata":"^1.8.1","jsonwebtoken":"^8.5.1","local-devices":"^3.0.0","lodash":"^4.17.4","lodash-decorators":"latest","logplease":"^1.2.14","material-icons":"^0.3.1","microcache":"^1.0.0","minimist":"^1.2.5","modbus-serial":"^7.8.1","moment":"^2.19.1","moment-timezone":"^0.5.28","morgan":"^1.8.1","mqtt":"^2.18.8","mqtt-match":"^2.0.3","nedb":"^1.8.0","net":"^1.0.2","network":"^0.5.0","nexmo":"^2.6.0","node-aes-cmac":"^0.1.1","ngeohash":"^0.6.3","node-bacnet":"^0.1.2-beta.3","nodemailer":"^6.4.2","perm":"^1.0.0","ping":"^0.2.2","pubsub-js":"^1.8.0","roboto-fontface":"^0.10.0","serialport":"^8.0.6","set-ip-address":"^0.2.0","slackbots":"^1.2.0","socket.io":"^2.0.4","socket.io-client":"^2.3.0","systeminformation":"^4.26.10","twilio":"^3.40.0","uuid":"^8.0.0","vis":"^4.21.0","vm2":"^3.9.2","vue":"^2.6.11","vue-cookie":"^1.1.4","vue-markdown":"^2.2.4","vue-moment":"^3.2.0","vue-multipane":"^0.9.5","vue-resize-directive":"^1.2.0","vue-router":"^3.1.5","vue-socket.io":"^2.1.1-a","vue-toasted":"^1.1.27","vue2-editor":"^2.10.2","vuebar":"0.0.17","vuetify":"^2.2.8","websocket":"^1.0.31"},"devDependencies":{"@babel/core":"^7.11.6","@babel/preset-env":"^7.11.5","@types/body-parser":"^1.16.7","@types/codeflask":"^1.4.0","@types/cookie-parser":"^1.3.30","@types/express":"^4.0.35","@types/express-validator":"^3.0.0","@types/handlebars":"^4.0.31","@types/jest":"^25.1.3","@types/jquery":"^3.2.16","@types/jquery.noty":"^2.0.28","@types/lodash":"^4.14.149","@types/moment":"^2.13.0","@types/morgan":"^1.7.32","@types/mqtt":"^2.5.0","@types/nedb":"^1.8.5","@types/node":"^8.10.59","@types/shelljs":"^0.7.9","@types/socket.io":"^1.4.42","@types/socket.io-client":"^1.4.31","@types/vis":"^4.17.3","adm-zip":"^0.4.14","archiver":"^3.1.1","awesome-typescript-loader":"5.2.1","babel-loader":"^7.1.5","clean-webpack-plugin":"^3.0.0","copy-webpack-plugin":"^6.1.0","css-loader":"^3.6.0","deepmerge":"^4.2.2","empty-module":"0.0.2","favicons-webpack-plugin":"^4.2.0","fibers":"^4.0.2","file-loader":"^5.1.0","generate-package-json-webpack-plugin":"^1.1.2","html-webpack-plugin":"^4.4.1","husky":"^3.1.0","jest":"^25.1.0","lint-staged":"^9.5.0","mini-css-extract-plugin":"^0.11.1","prettier":"^1.19.1","pug":"^2.0.4","pug-loader":"^2.4.0","pug-plain-loader":"^1.0.0","sass":"^1.26.10","sass-loader":"^10.0.2","shebang-loader":"0.0.1","shelljs":"^0.8.3","source-map-loader":"1.0.0","source-map-support":"^0.5.16","ts-jest":"^25.2.1","ts-loader":"^6.2.1","typescript":"^3.7.5","vue-loader":"^15.8.3","vue-template-compiler":"^2.6.11","webpack":"^4.44.1","webpack-cli":"^3.3.12","webpack-dev-middleware":"^1.12.2","webpack-hot-middleware":"^2.25.0","webpack-merge":"^5.1.4","webpack-node-externals":"^2.5.2","webpack-strip-block":"^0.3.0"},"optionalDependencies":{"pm2":"^4.2.2"}}')},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(92),n=i(376),a=i(19),r=i(19);e.default=class{static getActiveNetworks(){return new Promise(t=>{n.get_interfaces_list((function(e,i){e&&t(),i||t(),t(i)}))})}static networkUpDown(t,e){return new Promise((i,s)=>{let n=`sudo ip link set ${t} ${e}`;a.exec(n,(t,e,n)=>{t?s({err:t,stderr:n}):i(e)})})}static checkIpValid(t,e,i,n){const a=s.isV4Format(t),r=s.isV4Format(e),o=s.isV4Format(i),u=s.isV4Format(n);return!!(a&&r&&o&&u)}static bbbGetInterfaceDetails(){return new Promise((t,e)=>{r.execSync("connmanctl services",(i,s,n)=>{i?e({err:i,stderr:n}):t(s.toString().replace(/\s/g,"").substring(8))})})}static bbbSetIPDHCP(t){return new Promise((e,i)=>{const s=`sudo connmanctl config ${t} --ipv4 dhcp`;r.execSync(s,(t,s,n)=>{t?i({err:t,stderr:n}):e(!0)})})}static bbbSetIPFixed(t,e,i,s){return new Promise((n,a)=>{const o=`sudo connmanctl config ${t} --ipv4 manual ${e} ${i} ${s} --nameservers 8.8.8.8 8.8.4.4`;r.execSync(o,(t,e,i)=>{t?a({err:t,stderr:i}):n(!0)})})}}},function(t,e){t.exports=require("ip")},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{static nodeColourChange(t,e){t.setNodeState(e)}}},function(t,e,i){t.exports=i(21)},function(t,e){t.exports=require("source-map-support")},function(t,e){t.exports=require("process")},function(t,e){t.exports=require("minimist")},function(t,e){t.exports=require("dotenv")},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(8),n=i(9),a=i(0),r=i(101),o=i(103);e.Backend=class{constructor(t){this.database=t}start(){s.default.backendSync.enabled&&this.ensureParentContainers().then(()=>this.refreshPeriodically())}ensureParentContainers(){return this.findOrCreateNode(n.EDGES_PARENT_CONTAINER_TYPE,t=>t instanceof r.EdgesParentContainerNode).then(t=>this.edgesContainer=t).then(()=>this.findOrCreateNode(n.MODULES_PARENT_CONTAINER_TYPE,t=>t instanceof o.ModulesParentContainerNode)).then(t=>this.modulesContainer=t).then(()=>this.findOrCreateNode(n.SERVICES_PARENT_CONTAINER_TYPE,t=>t instanceof o.ServicesParentContainerNode)).then(t=>this.servicesContainer=t)}findOrCreateNode(t,e){const i=a.Container.containers[0];return new Promise((s,n)=>{const a=i.getNodes().find(e);if(a)s(a);else{const e=i.createNode(t,null,null,!1,()=>s(e))}})}refreshPeriodically(){setInterval(()=>this.refreshParentContainers(),1e3*s.default.backendSync.nodeRefreshIntervalSeconds)}refreshParentContainers(){this.edgesContainer.syncWithBackend(),this.modulesContainer.syncWithBackend(),this.servicesContainer.syncWithBackend()}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(4),n=i(0),a=i(11),r=i(3),o=i(7).create("node-link",{color:5});e.Link=class{},e.createLinkHandler=t=>new u(t);class u{constructor(t){this.node=t}make(t){var e;let i=this.node.container.getNodeById(t.target_id);if(!i)return o.error("Can't connect, target node not found"),!1;if(!this.node.outputs||!this.node.outputs[t.origin_slot])return o.error("Can't connect, output not found"),!1;let s=null!=(e=t.target_input_id)?e:t.target_slot;if(!i.inputs||!i.inputs[s])return o.error("Can't connect, input not found"),!1;let n=this.node.outputs[t.origin_slot],a=i.inputs[s];return!(i.onConnectInput&&!i.onConnectInput(s,n))&&(a.link&&i.disconnectInputLink(t.target_slot,t.target_input_id),n.links||(n.links=[]),n.links.push({target_node_id:t.target_id,target_slot:t.target_slot,target_input_id:t.target_input_id}),a.link={target_node_id:t.origin_id,target_slot:t.origin_slot},a.updated=!0,a.data=r.default.parseValue(n.data,a.type),i.isUpdated=!0,i.id===this.node.id?this.emitChange(this.node,"inputs","outputs"):(this.emitChange(this.node,"outputs"),this.emitChange(i,"inputs")),o.debug("Connected to "+i.getReadableId()),!0)}disconnectInput(t,e){var i;let s=null!=e?e:t;if(!this.node.inputs||!this.node.inputs[s])return o.error(`Can't disconnect, input slot: ${s} not found on node: ${this.node.id}`),!1;const n=this.node.inputs[s],a=n.link;if(!a)return!1;let r=this.node.container.getNodeById(a.target_node_id);if(!r)return!1;let u=r.outputs[(i=a.target_input_id,null!=i?i:a.target_slot)];if(!u||!u.links)return!1;let d=u.links.findIndex(i=>this.predicate(i,this.node.id,e,t));return-1!==d&&u.links.splice(d,1),n.link=null,n.data=void 0,n.updated=!0,this.node.isUpdated=!0,this.emitChange(this.node,"inputs"),this.emitChange(r,"outputs"),o.debug(`Disconnected from ${r.getReadableId()}`),!0}disconnectOutput(t,e){var i,n;if(!this.node.outputs||!this.node.outputs[t])return o.error(`Can't disconnect, output slot: ${t} not found on node: ${this.node.id}`),!1;const a=this.node.outputs[t];if(s.isEmpty(a.links))return!1;let r=a.links.length;for(;r--;){let t=a.links[r];const e=this.node.container.getNodeById(t.target_node_id);e||o.error(`Node: ${t.target_node_id} is not available`),e&&e.inputs&&e.inputs[t.target_slot]&&e.inputs[t.target_slot].link?(delete e.inputs[t.target_slot].link,e.inputs[t.target_slot].data=void 0,e.inputs[t.target_slot].updated=!0,e.isUpdated=!0,this.emitChange(this.node,"inputs")):o.error(`Tried to delete input link on: ${e} of slot: ${t.target_slot}`),a.links.splice(r,1),o.debug(`Disconnected from ${n=null===(i=e)||void 0===i?void 0:i.getReadableId(),null!=n?n:t.target_node_id}`)}return delete a.links,this.emitChange(this.node,"outputs"),!0}recomputeInputLinks(t){var e;let i=null!=(e=a.default._nodes[t])?e:this.node,n=-1;for(const[t,e]of Object.entries(i.inputs)){if(e.setting.hidden)continue;if(n++,s.isNull(e.link))continue;let a=e.link,r=i.container.getNodeById(a.target_node_id);if(s.isNull(r))continue;let o=a.target_input_id,u=a.target_slot,d=r.outputs[null!=o?o:u];if(s.isNull(d)||s.isNull(d.links))continue;let p=d.links.findIndex(e=>this.predicate(e,i.id,+t,n));-1!==p&&(d.links.splice(p,1,{target_node_id:i.id,target_slot:n,target_input_id:+t}),this.emitChange(r,"outputs"))}this.emitChange(i,"inputs")}recomputeOutputLinks(t){var e;let i=null!=(e=a.default._nodes[t])?e:this.node,n=-1;Object.entries(i.outputs).forEach(([t,e])=>{n++,s.isEmpty(e.links)||e.links.forEach(e=>{var a,r;let o=i.container.getNodeById(e.target_node_id);s.isNull(o)||s.isNull(o.inputs[(a=e.target_input_id,null!=a?a:e.target_slot)])||(o.inputs[(r=e.target_input_id,null!=r?r:e.target_slot)].link={target_node_id:i.id,target_slot:n,target_input_id:+t},this.emitChange(o,"inputs"))})}),this.emitChange(i,"outputs")}emitChange(t,...e){if(t.side===n.Side.server){let i=t.serialize(),s=e.reduce((t,e)=>(t[e]=i[e],t),{});t.container.db.updateNode(t.id,t.container.id,{$set:s})}}predicate(t,e,i,s){return t.target_node_id===e&&(!(!t.target_input_id||!i||t.target_input_id!==i)||t.target_slot===s)}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(13),n=i(102),a=i(40),r=i(8),o=i(39),u=i(25),d=i(9),p=i(0),l=i(2),h=i(1),c=i(3),g=i(61),y=i(30),m=i(62),f=()=>{};class v extends m.default{constructor(){super(...arguments),this.title="Edges",this.extra_node_types=[]}collectChildNodes(t){return t.filter(t=>t instanceof T)}initAPI(){return new n.EdgeAPI}fetchChildren(){return this.api.list()}childNodeType(){return[d.EDGE_CONTAINER_TYPE]}}e.EdgesParentContainerNode=v;class T extends g.default{constructor(){super(...arguments),this.title="Edge Container",this.settingFields={code:l.SettingType.STRING,customer_code:l.SettingType.STRING,side_code:l.SettingType.STRING,model:l.SettingType.STRING,firmware_version:l.SettingType.STRING,data_version:l.SettingType.STRING}}onAdded(){this.ignore_remove=!0,this.removable=!1,this.movable=!1,super.onAdded()}createEntry(){return Promise.reject("ERROR: Edge creation not currently supported.")}deleteEntry(){return Promise.reject("ERROR: Edge deletion not currently supported.")}collectChildNodes(t){return t.filter(t=>t instanceof O)}namePrefix(){return"Edge"}initAPI(){return new n.EdgeAPI}fetchChildren(){return(new n.NetworkAPI).list(this.entryId())}childNodeType(){return[d.NETWORK_CONTAINER_TYPE]}}e.EdgeContainerNode=T;class O extends g.default{constructor(){super(...arguments),this.title="Network Container",this.settingFields={state:l.SettingType.READONLY,protocol:l.SettingType.READONLY,code:l.SettingType.STRING},this.protocols=["GPIO","BACNET","MODBUS","UNKNOWN"].map(t=>({value:t,text:t})),this.createSettingForm=t=>s.merge(y.default.prototype.createSettingForm.call(this,t),{protocol:{value:this.protocols[this.protocols.length-1].value,type:l.SettingType.DROPDOWN,config:{items:this.protocols}}})}collectChildNodes(t){return t.filter(t=>t instanceof I)}namePrefix(){return"Network"}createEntry(){const t=this.container.container_node;if(!(t instanceof T)){const t="Error: Trying to create network, but network node does not exist inside a valid Edge container...";return console.log(t),Promise.reject(t)}return this.findFreeIdentifier().then(e=>this.api.create({code:e},t.entryId()))}initAPI(){return new n.NetworkAPI}fetchChildren(){return(new n.DeviceAPI).list(this.entryId())}childNodeType(){return[d.DEVICE_CONTAINER_TYPE]}}e.NetworkContainerNode=O;class I extends g.default{constructor(){super(...arguments),this.title="Device Container",this.settingFields={state:l.SettingType.READONLY,code:l.SettingType.STRING,manufacturer:l.SettingType.STRING,protocol:l.SettingType.STRING,type:l.SettingType.STRING}}collectChildNodes(t){return t.filter(t=>t instanceof S||t instanceof b)}namePrefix(){return"Device"}createEntry(){const t=this.container.container_node,e=t.container.container_node;if(!(t instanceof O)){const t="Error: Trying to create device, but device node does not exist inside a valid Network container...";return Promise.reject(t)}return this.findFreeIdentifier().then(i=>this.api.create({edge_id:e.entryId(),device:{type:"EQUIPMENT",code:i}},t.entryId()))}initAPI(){return new n.DeviceAPI}fetchChildren(){return(new n.FolderAPI).list(this.entryId())}childNodeType(){return[d.GROUP_CONTAINER_TYPE,d.POINT_NODE_TYPE]}}e.DeviceContainerNode=I;class S extends g.default{constructor(){super(...arguments),this.title="Group Container",this.settingFields={name:l.SettingType.STRING}}collectChildNodes(t){return t.filter(t=>t instanceof b)}namePrefix(){return"Group"}createEntry(){const t=this.container.container_node,e=t.container.container_node,i=e.container.container_node;if(!(t instanceof I&&e instanceof O&&i instanceof T)){const t="Error: Trying to create group, but group node does not exist inside a valid Device container hierarchy...";return Promise.reject(t)}return this.findFreeIdentifier().then(e=>this.api.create({folder:{name:e}},t.entryId()))}initAPI(){return new n.FolderAPI}fetchChildren(){return(new n.PointAPI).list(this.entryId())}childNodeType(){return[d.POINT_NODE_TYPE]}}e.GroupContainerNode=S;class b extends l.Node{constructor(t){super(t),this.clonable=!1,this.movable=!1,this.settingFields={edge:l.SettingType.READONLY,network:l.SettingType.READONLY,code:l.SettingType.STRING,enabled:l.SettingType.BOOLEAN,kind:l.SettingType.STRING,measure_unit:l.SettingType.STRING,offset:l.SettingType.NUMBER,precision:l.SettingType.NUMBER,protocol:l.SettingType.STRING,type:l.SettingType.STRING},this.entry=y.default.prototype.entry.bind(this),this.entryId=y.default.prototype.entryId.bind(this),this.onAfterSettingsChange=y.default.prototype.onAfterSettingsChange.bind(this),this.applyEntry=y.default.prototype.applyEntry.bind(this),this.deactivate=y.default.prototype.deactivate.bind(this),this.onCreated=y.default.prototype.onCreated.bind(this),this.makeIdentifier=y.default.prototype.makeIdentifier.bind(this),this.findFreeIdentifier=y.default.prototype.findFreeIdentifier.bind(this),this.getTakenIdentifiers=y.default.prototype.getTakenIdentifiers.bind(this),this.createSettingForm=y.default.prototype.createSettingForm.bind(this),this.title="Point container",this.description="placeholder",this.backend=new n.PointAPI,this.settings.name={description:"Point ID",value:this.title,type:l.SettingType.READONLY},this.settings.priority={description:"Priority",value:1,type:l.SettingType.NUMBER},this.addOutput("value",h.Type.NUMBER),this.addInput("in",h.Type.NUMBER)}entryFactory(){return new a.Point}onAdded(){y.default.prototype.onAdded.call(this),this.syncWithBackend(),this.interval=setInterval(()=>this.syncWithBackend(),1e3*r.default.backendSync.pointRefreshIntervalSeconds)}onRemoved(){return y.default.prototype.onRemoved.call(this)}namePrefix(){return"Point"}syncWithBackend(){this.side===p.Side.server&&u.singleton.process(()=>{if(this.entry())return this.backend.fetchPointData(this.entryId()).then(t=>{this.entry()&&this.setOutputData(0,s.get(t,"value"))}).catch(f)})}onInputUpdated(){let t=parseFloat(this.getInputData(0));if(isNaN(t)||null===t)return void console.log("WARNING: Received non-numeric value on point inlet.");this.setOutputData(0,t);const e=c.default.clamp(this.settings.priority.value,1,17);this.backend.updatePointData(this.entryId(),e,t).catch(t=>this.container.server_editor_socket.emit(o.ERROR,`Could not patch point value. ${t.message}`))}createEntry(){const t=this.container.container_node,e=t.container.container_node,i=e.container.container_node,s=i.container.container_node;if(!(t instanceof S&&t instanceof I)){const t="Error: Trying to create point, but point node does not exist inside a valid Group container hierarchy...";return console.log(t),Promise.reject(t)}return this.findFreeIdentifier().then(n=>this.backend.create({device_id:e.entryId(),point:{network:i.entryId(),edge:s.entryId(),code:n,unit:{type:"number"},enabled:!1}},t.entryId()))}updateEntry(t){return this.backend.update(t,this.entryId())}deleteEntry(){return this.backend.delete(this.entryId())}}e.PointNode=b,p.Container.registerNodeType(d.EDGES_PARENT_CONTAINER_TYPE,v,null,!1),p.Container.registerNodeType(d.EDGE_CONTAINER_TYPE,T,null,!1),p.Container.registerNodeType(d.NETWORK_CONTAINER_TYPE,O,null,!1),p.Container.registerNodeType(d.DEVICE_CONTAINER_TYPE,I,null,!1),p.Container.registerNodeType(d.GROUP_CONTAINER_TYPE,S,null,!1),p.Container.registerNodeType(d.POINT_NODE_TYPE,b,null,!1)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(60),n=i(40);class a extends s.Api{list(t){return this.fetchMany("edge","edges")}get(t){return this.fetchOne(`edge/${t}`)}create(t){throw new Error("Method not implemented.")}update(t,e){return this.client.patch(`edge/${e}`,t)}delete(t){throw new Error("Method not implemented.")}factoryEntry(){return this.newEntry(n.Edge)}}e.EdgeAPI=a;class r extends s.Api{list(t){return this.fetchMany(`edge/${t}/network`,"networks")}get(t){return this.fetchOne(`network/${t}`)}create(t,e){return this.client.post(`edge/${e}/network`,t).then(this.extractData("resource"))}update(t,e){return this.client.patch(`network/${e}`,t)}delete(t){return this.client.delete(`network/${t}?_force=true`)}factoryEntry(){return this.newEntry(n.Network)}}e.NetworkAPI=r;class o extends s.Api{factoryEntry(){return this.newEntry(n.Device)}list(t){return this.client.get(`network/${t}/device`).then(this.extractData("devices")).then(t=>t.map(t=>t.device)).then(this.assignAllTo(()=>new n.Device))}get(t){return this.fetchOne(`device/${t}`)}create(t,e){return this.client.post(`network/${e}/device`,t).then(this.extractData("resource.device"))}update(t,e){return this.client.patch(`device/${e}`,t)}delete(t){return this.client.delete(`device/${t}?_force=true`)}}e.DeviceAPI=o;class u extends s.Api{list(t){return this.fetchMany(`device/${t}/folder`,"folders")}get(t){return this.fetchOne(`folder/${t}`)}create(t,e){return this.client.post(`device/${e}/folder`,t).then(this.extractData("resource"))}update(t,e){return this.client.patch(`folder/${e}`,t)}delete(t){return this.client.delete(`folder/${t}?_force=true`)}factoryEntry(){return this.newEntry(n.Folder)}}e.FolderAPI=u;class d extends s.Api{factoryEntry(){return this.newEntry(n.Point)}list(t){return this.fetchMany(`folder/${t}/point`,"points")}get(t){return this.fetchOne(`point/${t}`)}create(t,e){return this.client.post(`folder/${e}/point`,t).then(this.extractData("resource.point"))}update(t,e){return this.client.patch(`point/${e}`,t)}delete(t){return this.client.delete(`point/${t}?_force=true`)}fetchPointData(t){return this.client.get(`point/${t}/data`).then(this.extractData())}updatePointData(t,e,i){return this.client.put(`point/${t}/data`,{priority:e,value:i})}}e.PointAPI=d},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(13),n=i(104),a=i(25),r=i(9),o=i(0),u=i(2),d=i(105),p=i(30),l=i(62);class h extends l.default{constructor(){super(...arguments),this.title="Modules"}collectChildNodes(t){return t.filter(t=>t instanceof y)}initAPI(){return new n.ModuleAPI}fetchChildren(){return this.api.list()}childNodeType(){return[r.MODULE_NODE_TYPE]}}e.ModulesParentContainerNode=h;class c extends l.default{constructor(){super(...arguments),this.title="Services"}collectChildNodes(t){return t.filter(t=>t instanceof m)}initAPI(){return new n.ServiceAPI}fetchChildren(){return this.api.list()}childNodeType(){return[r.SERVICE_NODE_TYPE]}}e.ServicesParentContainerNode=c;class g extends d.default{constructor(t){super(t),this.required_settings=["service_id","service_name","version"],this.settingFields={service_id:u.SettingType.STRING,service_name:u.SettingType.STRING,version:u.SettingType.STRING,service_type:u.SettingType.STRING,published_by:u.SettingType.STRING,state:u.SettingType.STRING,deploy_id:u.SettingType.STRING,deploy_location:u.SettingType.STRING,created_at:u.SettingType.READONLY,modified_at:u.SettingType.READONLY},this.settingsHeaderComponent={props:["self"],template:'<div>  <v-alert v-if="self.properties.is_protected" type="warning">Waiting for required fields <br />'+`    <small>(${this.required_settings.join(", ")})</small>`+"  </v-alert></div>"},this.onAdded=p.default.prototype.onAdded.bind(this),this.onRemoved=p.default.prototype.onRemoved.bind(this),this.entryId=()=>this.entry()&&this.entry().service_id,this.syncWithBackend=()=>{},this.title=this.namePrefix()}onAfterSettingsChange(){this.side===o.Side.server&&this.areSettingsValid()&&(this.entry()?p.default.prototype.onAfterSettingsChange.call(this):a.singleton.process(()=>this.createEntry().then(t=>this.applyEntry(t)).then(()=>this.displayMessage(`${this.namePrefix()} entry created.`)).catch(t=>this.displayError(t,"Entry not created."))))}applyEntry(t){this.settingFields.service_id=u.SettingType.READONLY,p.default.prototype.applyEntry.call(this,t),this.properties.is_protected=!t,this.broadcastPropertiesToClients()}onCreated(){this.entry()?this.applyEntry(this.entry()):(this.properties.is_protected=!0,s.merge(this.settings,this.createSettingForm(null)))}createEntry(){const t=Object.keys(this.settingFields).map(t=>({[t]:this.settings[t].value})).reduce(s.merge);return this.backend.create(this.settings.service_id.value,t)}areSettingsValid(){return this.required_settings.map(t=>this.settings[t].value).reduce((t,e)=>t&&e)}}class y extends g{namePrefix(){return"Module"}initAPI(){return new n.ModuleAPI}}class m extends g{namePrefix(){return"Service"}initAPI(){return new n.ServiceAPI}}o.Container.registerNodeType(r.MODULES_PARENT_CONTAINER_TYPE,h,null,!1),o.Container.registerNodeType(r.SERVICES_PARENT_CONTAINER_TYPE,c,null,!1),o.Container.registerNodeType(r.MODULE_NODE_TYPE,y,null,!1),o.Container.registerNodeType(r.SERVICE_NODE_TYPE,m,null,!1)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(60),n=i(40);class a extends s.Api{list(t){return this.fetchMany(this.url(),"services")}get(t){return this.fetchOne(`${this.url()}/${t}`)}create(t,e){return this.client.post(this.url(),{obj:t}).then(()=>this.get(e))}update(t,e){return this.client.patch(`${this.url()}/${e}`,{service_id:e,obj:t})}delete(t){return this.client.delete(`${this.url()}/${t}`)}factoryEntry(){return this.newEntry(n.Service)}}e.ModuleAPI=class extends a{url(){return"modules"}};e.ServiceAPI=class extends a{url(){return"services"}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(30);class a extends s.Node{constructor(t){super(t),this.clonable=!1,this.removable=!1,this.movable=!1,this.entry=n.default.prototype.entry.bind(this),this.entryId=n.default.prototype.entryId.bind(this),this.deactivate=n.default.prototype.deactivate.bind(this),this.createSettingForm=n.default.prototype.createSettingForm.bind(this),this.getTakenIdentifiers=n.default.prototype.getTakenIdentifiers.bind(this),this.makeIdentifier=n.default.prototype.makeIdentifier.bind(this),this.findFreeIdentifier=n.default.prototype.findFreeIdentifier.bind(this),this.entryFactory=()=>this.backend.factoryEntry(),this.updateEntry=t=>this.backend.update(t,this.entryId()),this.deleteEntry=()=>this.backend.delete(this.entryId()),this.description="placeholder",this.backend=this.initAPI(),this.settings.name={description:"Entry",value:this.title,type:s.SettingType.READONLY}}}e.default=a},function(t,e,i){"use strict";var s=this&&this.__decorate||function(t,e,i,s){var n,a=arguments.length,r=a<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,i,s);else for(var o=t.length-1;o>=0;o--)(n=t[o])&&(r=(a<3?n(r):a>3?n(e,i,r):n(e,i))||r);return a>3&&r&&Object.defineProperty(e,i,r),r};Object.defineProperty(e,"__esModule",{value:!0});class n{constructor(t){this.socket=t,this.uiPanels=[]}loadFromDatabase(t){this.db=t,t.getUiPanels((t,e)=>{if(t)return console.log(t);this.uiPanels=e||[]})}onNodeRemoved(t){t.isDashboardNode&&(this.removeElementForNode(t),this.removeEmptyPanels(),this.sendUiPanel(t.settings["ui-panel"].value))}onNodeChangePanelOrTitle(t,e,i){this.removeElementForNode(t);const s={title:i,type:t.uiElementType,cid:t.container.id,id:t.id,name:t.name};let n=this.getUiPanel(e);n?(n.subPanels[0].uiElements.push(s),this.db&&this.db.updateUiPanel(n.name,{$set:{subPanels:n.subPanels}})):(n=this.addUiPanel(e),n.subPanels[0].uiElements.push(s),this.db&&this.db.addUiPanel(n)),this.removeEmptyPanels(),this.socket.io.emit("getUiPanelsList",this.getUiPanelsList()),this.sendUiPanel(t.settings["ui-panel"].value)}sendUiPanel(t){this.socket.io.emit("getUiPanel",this.getUiPanel(t))}removeEmptyPanels(){let t=!1;for(let e=0;e<this.uiPanels.length;e++){let i=this.uiPanels[e];i.subPanels.every(t=>0==t.uiElements.length)&&(t=!0,this.uiPanels=this.uiPanels.filter(t=>t.name!=i.name),this.db&&this.db.removeUiPanel(i.name))}t&&this.socket.io.emit("getUiPanelsList",this.getUiPanelsList())}removeElementForNode(t){const e=this.getUiPanel(t.settings["ui-panel"].value);if(e)for(let i=0;i<e.subPanels.length;i++){const s=e.subPanels[i];for(let i=0;i<s.uiElements.length;i++){const n=s.uiElements[i];n.cid==t.container.id&&n.id==t.id&&(s.uiElements.splice(i,1),this.db&&this.db.updateUiPanel(e.name,{$set:{subPanels:e.subPanels}}))}}}getUiPanel(t){return this.uiPanels.find(e=>e.name===t)}getUiPanelsList(){let t=[];return this.uiPanels.forEach(e=>{t.push({name:e.name,title:e.title,icon:e.icon})}),t}addUiPanel(t){const e={name:t,title:t,icon:"label_outline",subPanels:[{title:"",name:"",uiElements:[]}]};return this.uiPanels.push(e),e}}s([i(63).default(100)],n.prototype,"sendUiPanel",null),e.Dashboard=n},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(108),n=i(109),a=i(15),r=i(110),o=i(111),u=i(38),d=i(64),p=i(8),l=i(41),h=i(112),c=i(113),g=i(65),y=i(115),m=i(116),f=i(117),v=i(7).create("server",{color:3});e.Server=class{constructor(t){this.express=a(),this.express.locals.moment=i(24),this.middleware(t),this.routes(),this.handleErrors(),this.configure(),this.start_io()}middleware(t){l.webServer.debug&&this.express.use(o("dev",{skip:function(t,e){return e.statusCode<400}})),this.express.use(s.json({limit:"5mb"})),this.express.use(s.urlencoded({extended:!1})),this.express.use(n()),this.express.use(f());const e=u.resolve(t,"public");v.info(`App Server Dir : '${e}'`),this.express.use("/",a.static(e))}routes(){this.express.use("/api/",(function(t,e,i){const s=e.send;e.send=function(t){[200,201].includes(e.statusCode)||v.warn(t),s.call(this,t)},i()})),this.express.use("/dashboard",g.authMiddleware(),i(118)),this.express.use("/api/dashboard",g.authMiddleware(),i(119)),this.express.use("/editor",g.authMiddleware(),i(120)),this.express.use("/api/editor",g.authMiddleware(),i(121)),this.express.use("/api/wire-name",g.authMiddleware(),i(122)),this.express.use("/api/auth",i(124)),this.express.use("/api/help",g.authMiddleware(),i(126)),this.express.use("/api/platform",g.authMiddleware(),i(128))}handleErrors(){this.express.use((t,e)=>{e.status(404),e.json({error:{message:"Not Found"}})}),this.express.use((t,e,i,s)=>{v.warn(t),i.status(t.status||500),i.json({error:{message:t.message,error:{}}})})}configure(){const t=function(t){const e="string"==typeof t?parseInt(t,10):t;return isNaN(e)?t:e>=0&&e}(p.default.port);this.express.set("port",t),this.server=r.createServer(this.express),this.server.listen(t),this.server.on("error",(function(e){if("listen"!==e.syscall)throw e;const i="string"==typeof t?"Pipe "+t:"Port "+t;switch(e.code){case"EACCES":console.error(`${i} requires elevated privileges`),process.exit(1);break;case"EADDRINUSE":console.error(`${i} is already in use`),process.exit(1);break;default:throw e}})),this.server.on("listening",(function(){const t=e.server.address(),i="string"==typeof t?`pipe ${t}`:`port ${t.port}`;v.info(`Listening on ${i}`)}));const e=this}start_io(){const t=d(this.server);this.editorSocket=new c.EditorServerSocket(t),this.dashboardSocket=new h.DashboardServerSocket(t),this.wireNameSocket=new m.WireNameServerSocket(t),this.pingPongSocket=new y.PingPongServerSocket(this.server,t)}}},function(t,e){t.exports=require("body-parser")},function(t,e){t.exports=require("cookie-parser")},function(t,e){t.exports=require("http")},function(t,e){t.exports=require("morgan")},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(21),a=i(7).create("server",{color:3});e.DashboardServerSocket=class{constructor(t){this.io_root=t;const e=this.io_root.of("/dashboard");this.io=e,e.on("connection",(function(t){a.debug("New client connected to dashboard"),t.on("disconnect",()=>{a.debug("Client disconnected from dashboard")}),t.on("getUiPanel",e=>{a.debug("getUiPanel: "+e),t.emit("getUiPanel",n.default.dashboard.getUiPanel(e))}),t.on("getUiPanelsList",()=>{a.debug("getUiPanelsList"),t.emit("getUiPanelsList",n.default.dashboard.getUiPanelsList())}),t.on("nodeMessageToServerSide",t=>{let e=s.Container.containers[t.cid];if(!e)return void a.error("Can't send node message to server-side. Container id ["+t.cid+"] does not exist");let i=e.getNodeById(t.id);i?i.onGetMessageToServerSide?i.onGetMessageToServerSide(t.message):a.error("Can't send node message to server-side. Node "+i.getReadableId()+"dont have onGetMessageToServerSide method!"):a.error("Can't send node message to server-side. Node id ["+t.cid+"/"+t.id+"] does not exist")}),t.on("nodeMessageToEditorSide",t=>{let e=s.Container.containers[t.cid];e?e.getNodeById(t.id)?n.default.server.editorSocket.io.in(t.cid).emit("nodeMessageToEditorSide",t):a.error("Can't send node message to editor-side. Node id ["+t.cid+"/"+t.id+"] does not exist"):a.error("Can't send node message to editor-side. Container id ["+t.cid+"] does not exist")}),t.on("nodeMessageToDashboardSide",t=>{let e=s.Container.containers[t.cid];e?e.getNodeById(t.id)?n.default.server.dashboardSocket.io.in(t.cid).emit("nodeMessageToDashboardSide",t):a.error("Can't send node message to dashboard-side. Node id ["+t.cid+"/"+t.id+"] does not exist"):a.error("Can't send node message to dashboard-side. Container id ["+t.cid+"] does not exist")}),t.on("nodeSettings",t=>{let e=s.Container.containers[t.cid];if(!e)return void a.error("Can't update node settings. Container id ["+t.cid+"] does not exist");let i=e.getNodeById(t.id);if(!i)return void a.error("Can't update node settings. Node id ["+t.cid+"/"+t.id+"] does not exist");let r=i.name,o=JSON.parse(JSON.stringify(i.settings));i.onBeforeSettingsChange&&i.onBeforeSettingsChange(t.settings,t.name);for(let e in t.settings){let s=t.settings[e];try{i.settings[e].value=s.value}catch(t){a.error(t)}}i.name=t.name,Promise.resolve(i.onAfterSettingsChange(o,r)).then(()=>{const e={id:t.id,cid:t.cid,settings:i.settings,name:t.name,oldSettings:o,oldName:r};n.default.server.editorSocket.io.emit("nodeSettings",e),i.isDashboardNode&&n.default.server.dashboardSocket.io.in(t.cid).emit("nodeSettings",e),n.default.db&&n.default.db.updateNode(i.id,i.container.id,{$set:{settings:i.settings,name:i.name}})})}),t.on("dashboardElementGetNodeState",e=>{let i=s.Container.containers[e.cid];if(!i)return void a.error("Can't get dashboard element state. Container id ["+e.cid+"] does not exist");let n=i.getNodeById(e.id);if(n)if(n.onDashboardElementGetNodeState)n.onDashboardElementGetNodeState(e.options);else{let e={id:n.id,cid:n.container.id,state:n.properties.state};t.emit("dashboardElementGetNodeState",e)}else a.error("Can't get dashboard element state. Node id ["+e.cid+"/"+e.id+"] does not exist")}),t.on("dashboardElementSetNodeState",t=>{let i=s.Container.containers[t.cid];if(!i)return void a.error("Can't set node state from dashboard element. Container id ["+t.cid+"] does not exist");let n=i.getNodeById(t.id);if(n)if(n.onDashboardElementSetNodeState)n.onDashboardElementSetNodeState(t.state);else{n.properties.state=t.state;let i={id:n.id,cid:n.container.id,state:n.properties.state},s=this.settings["ui-panel"].value;e.in(""+s).emit("dashboardElementGetNodeState",i)}else a.error("Can't set node state from dashboard element. Node id ["+t.cid+"/"+t.id+"] does not exist")}),t.on("join-room",e=>{null!=t.room?(a.debug("Leave dashboard room ["+t.room+"]"),t.leave(t.room,()=>{t.room=e,t.join(e,()=>{a.debug("Join to dashboard room ["+e+"]")})})):(t.room=e,t.join(e,()=>{a.debug("Join to dashboard room ["+e+"]")}))}),t.on("leave-room",e=>{t.leave(e,()=>{a.debug("Leave dashboard room ["+e+"]")}),t.room=null})}))}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(21),a=i(114),r=i(7).create("server",{color:3});class o{constructor(t){this.io_root=t;const e=t.of("/editor");this.io=e,e.on("connection",(function(t){r.debug("New client connected to editor"),t.on("disconnect",()=>{r.debug("Client disconnected from editor")}),t.on("room",(function(e){null!=t.room?t.leave(t.room,(function(){t.room=e,t.join(e,()=>{r.debug("Switch editor room to ["+e+"]")})})):(t.room=e,t.join(e,()=>{r.debug("Join to editor room ["+e+"]")}))})),t.on("nodeMessageToServerSide",(function(t){let e=o.checkContainerNodeValidity(t,s.Side.server);e&&e.onGetMessageToServerSide(t.message)})),t.on("nodeMessageToEditorSide",(function(t){o.checkContainerNodeValidity(t,s.Side.editor)&&n.default.server.editorSocket.io.in(t.cid).emit("nodeMessageToEditorSide",t)})),t.on("nodeMessageToDashboardSide",(function(t){o.checkContainerNodeValidity(t,s.Side.dashboard)&&n.default.server.dashboardSocket.io.in(t.cid).emit("nodeMessageToDashboardSide",t)}))})),setInterval(()=>{this.sendSlotsValues(e)},200)}sendSlotsValues(t){const e=t.connected;for(let i of Object.keys(e)){const e=+Object.keys(t.connected[i].rooms).filter(t=>t!==i)[0];let s=a.default.getNodesIOValues(e);t.to(e).emit("nodes-io-values",s)}}static checkContainerNodeValidity(t,e){let i=s.Container.containers[t.cid];if(!i)return r.error(`Can't send node message to ${e}-side. Container id ["${t.cid}'] does not exist`),null;let n=i.getNodeById(t.id);return n||(r.error(`Can't send node message to ${e}-side. Node id ["${t.cid}'/'${t.id}'] does not exist`),null)}}e.EditorServerSocket=o},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(3);e.default=class{static getNodesIOValues(t){let e=s.Container.containers[t];if(!e||!e._nodes)return;let i=[],a=[];for(let t in e._nodes){let s=e._nodes[t];if(s.inputs)for(let t in s.inputs){let e=s.getInputData(Number(t));e=n.default.formatAndTrimValue(e),i.push({nodeId:s.id,inputId:t,type:s.type,data:e})}if(s.outputs)for(let t in s.outputs){let e=s.outputs[t].data;e=n.default.formatAndTrimValue(e),a.push({nodeId:s.id,outputId:t,type:s.type,data:e})}}return{cid:t,inputs:i,outputs:a}}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(64),n=i(7).create("heartbeat",{color:3});e.PingPongServerSocket=class{constructor(t,e){let i=null!=e?e:s(t,{path:"/heartbeat"});this.io=i.of(e?"/heartbeat":"/ping"),this.io.on("connect",t=>this.listen(t))}listen(t){n.debug(`New client ${t.id} connected into server path ${t.server.path()}`),n.debug(`Handshake: ${JSON.stringify(t.handshake)}`),t.on("disconnect",()=>{n.debug(`Client ${t.id} is disconnected`)})}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(7).create("server",{color:3});e.WireNameServerSocket=class{constructor(t){this.io_root=t;const e=t.of("/wire-name");this.io=e,e.on("connection",(function(t){s.debug("New client connected to wire"),t.on("disconnect",()=>{s.debug("Client disconnected from wire")})}))}}},function(t,e){t.exports=require("express-validator")},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(15),n=i(0);let a=s.Router();a.get("/",(function(t,e,i){e.render("dashboard/index",{container_id:0})})),a.get("/c/:cid",(function(t,e,i){e.render("dashboard/index",{container_id:t.params.cid})})),a.get("/c/:cid/n/:id*",(function(t,e){let i=n.Container.containers[t.params.cid];if(!i)return e.status(404).send(`Can't send request to node. Container id [${t.params.cid}] not found.`);let s=i.getNodeById(t.params.id);return s?s.onDashboardGetRequest?void s.onDashboardGetRequest(t,e):e.status(404).send(`Can't send request to node. Node id [${t.params.cid}/${t.params.id}] does not accept requests.`):e.status(404).send(`Can't send request to node. Node id [${t.params.cid}/${t.params.id}] not found.`)})),a.post("/c/:cid/n/:id*",(function(t,e){let i=n.Container.containers[t.params.cid];if(!i)return e.status(404).send(`Can't send request to node. Container id [${t.params.cid}] not found.`);let s=i.getNodeById(t.params.id);return s?s.onDashboardPostRequest?void s.onDashboardPostRequest(t,e):e.status(404).send(`Can't send request to node. Node id [${t.params.cid}/${t.params.id}] does not accept requests.`):e.status(404).send(`Can't send request to node. Node id [${t.params.cid}/${t.params.id}] not found.`)})),t.exports=a},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});let s=i(15).Router();const n=i(0);s.get("/c/:cid",(function(t,e){let i=n.Container.containers[t.params.cid];if(!i)return e.status(404).send(`Can't get container. Container id [${t.params.cid}] not found.`);let s=i.serialize(!0);e.json(s)})),t.exports=s},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(15),n=i(41),a=i(0);let r=s.Router();r.get("/",(function(t,e){e.render("editor/index",{split:t.query.split,container_id:0,theme:n.nodeEditor.theme})})),r.get("/c/:cid",(function(t,e){let i=t.params.cid||0;if(!a.Container.containers[i])return e.redirect("/editor");e.render("editor/index",{split:t.query.split,container_id:i,theme:n.nodeEditor.theme})})),r.get("/split",(function(t,e){e.render("editor/split",{container_id:0})})),r.get("/split/c/:cid",(function(t,e){let i=t.params.cid||0;if(!a.Container.containers[i])return e.redirect("/editor/split");e.render("editor/split",{container_id:i})})),t.exports=r},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(15),n=i(0),a=i(21),r=i(8),o=i(59),u=i(66),d=i(39);let p=s.Router();function l(t,e){t.status(404).send(e),a.default.server.editorSocket.io.emit(d.ERROR,e)}function h(t,e,i,s,a=!1){const r=[];let u=o.default.getSortedAvailableContainers(e);const d=Math.min(...u);return({nodes:e}=o.default.remapContainersId(t,e,i,d)),e=o.default.fallbackNodeIfDoesNotExist(e),u=o.default.getSortedAvailableContainers(e),o.default.createContainersIfDoesNotExist(u,n.Side.server),u.forEach(u=>{let d=e.filter(t=>t.cid==u);if(u===i){const e=t.last_node_id;d=o.default.remapNodesId(t,d,u,e),d=o.default.adjustPosition(t,d,s,a),o.default.sortNodes(d),d.forEach(e=>{r.push(t.createNode(e.type,e,null,!0))}),t.setDirtyCanvas(!0,!0)}else{const t=n.Container.containers[u];d=o.default.adjustPosition(t,d,s,a),o.default.sortNodes(d),d.forEach(e=>{const i=t.createNode(e.type,e,null,!0);r.push(i),t.last_node_id=i.id}),t.container_node&&o.default.updateSubContainerLastNodeId(t,t.last_node_id)}}),o.default.addInputsLinkNodes(r,e,c),o.default.addOutputsLinkNodes(r,e,g),o.default.addSettingsValues(r,e,y)}function c(t){a.default.db&&a.default.db.updateNode(t.id,t.cid,{$set:{inputs:t.inputs}})}function g(t){a.default.db&&a.default.db.updateNode(t.id,t.cid,{$set:{outputs:t.outputs}})}function y(t){a.default.db&&a.default.db.updateNode(t.id,t.cid,{$set:{settings:t.settings}})}function m(t,e,i){return new Promise((s,n)=>{t.db.getNodes((t,a)=>{if(t)n("Can't able to get nodes from DB!");else{const t=[];e.forEach(e=>{const s=a.find(t=>t.id===e&&t.cid===i);s&&(t.push(s),function t(e,i){e.sub_container&&a.forEach(s=>{s.cid==e.sub_container.id&&(i.push(s),t(s,i))})}(s,t))}),s(t)}})})}function f(t,e,i){for(let s of e){const e=t.getNodeById(s);if(!e)return Promise.reject(`Can't delete node. Node id [${i}/${s}] not found.`);t.removeBroadcasted(e)}return Promise.resolve()}setInterval((function(){if(!a.default.rootContainer)return;for(let t in n.Container.containers){let e=n.Container.containers[t],i=[];for(let t in e._nodes){let s=e._nodes[t];s.isRecentlyActive&&(s.isRecentlyActive=!1,i.push(s.id))}i.length>0&&a.default.server.editorSocket.io.in(""+e.id).emit("nodes-active",{ids:i,cid:e.id})}}),500),p.get("/c/:cid",(function(t,e){let i=n.Container.containers[t.params.cid];if(!i)return e.status(404).send(`Can't get container. Container id [${t.params.cid}] not found.`);let s=i.serialize();e.json(s)})),p.get("/c/:cid/file",(function(t,e){let i=n.Container.containers[t.params.cid];if(!i)return e.status(404).send(`Can't export container. Container id [${t.params.cid}] not found.`);let s=i.container_node.serialize();if(s.inputs)for(let t in s.inputs)s.inputs[t].link&&delete s.inputs[t].link;if(s.outputs)for(let t in s.outputs)s.outputs[t].links&&delete s.outputs[t].links;let a=JSON.stringify(s),r="shub_"+i.name.replace(/[^a-z0-9]/gi,"_").toLowerCase()+".json";e.set({"Content-Disposition":'attachment; filename="'+r+'"'}),e.send(a)})),p.post("/c/:cid/n/",(function(t,e){let i=n.Container.containers[t.params.cid];if(!i)return e.status(404).send(`Can't create node. Container id [${t.params.cid}] not found.`);let s=i.createNode(t.body.type,{pos:t.body.position});if(!s)return e.status(404).send(`Can't create node. Node type [${t.body.type}] not found.`);a.default.server.editorSocket.io.emit("node-create",{id:s.id,cid:t.params.cid,type:s.type,pos:s.pos}),s.isDashboardNode&&a.default.server.dashboardSocket.io.in(t.params.cid).emit("node-create",{id:s.id,cid:t.params.cid,type:s.type,pos:s.pos}),e.send(`New node created: type [${s.type}] id [${s.container.id}/${s.id}]`)})),p.delete("/c/:cid/n/",(function(t,e){let i=n.Container.containers[t.params.cid];if(!i)return e.status(404).send(`Can't delete node. Container id [${t.params.cid}] not found.`);f(i,t.body,+t.params.cid).then(()=>{e.send(`Nodes deleted: ids ${t.params.cid}/${JSON.stringify(t.body.ids)}`)},t=>{e.status(404).send(t)})})),p.put("/c/:cid/n/:id/position",(function(t,e){let i=n.Container.containers[t.params.cid];if(!i)return e.status(404).send(`Can't update node position. Container id [${t.params.cid}] not found.`);let s=i.getNodeById(t.params.id);if(!s)return e.status(404).send(`Can't update node position. Node id [${t.params.cid}/${t.params.id}] not found.`);s.pos=t.body.position,a.default.db&&a.default.db.updateNode(s.id,s.container.id,{$set:{pos:s.pos}}),a.default.server.editorSocket.io.emit("node-update-position",{id:t.params.id,cid:t.params.cid,pos:s.pos}),e.send(`Node position updated: type [${s.type}] id [${s.container.id}/${s.id}]`)})),p.put("/c/:cid/n/:id/size",(function(t,e){let i=n.Container.containers[t.params.cid];if(!i)return e.status(404).send(`Can't update node size. Container id [${t.params.cid}] not found.`);let s=i.getNodeById(t.params.id);if(!s)return e.status(404).send(`Can't update node size. Node id [${t.params.cid}/${t.params.id}] not found.`);s.size=t.body.size,a.default.db&&a.default.db.updateNode(s.id,s.container.id,{$set:{size:s.size}}),a.default.server.editorSocket.io.emit("node-update-size",{id:t.params.id,cid:t.params.cid,size:s.size}),e.send(`Node size updated: type [${s.type}] id [${s.container.id}/${s.id}]`)})),p.put("/c/:cid/n/:id/collapse",(function(t,e){let i=n.Container.containers[t.params.cid];if(!i)return e.status(404).send(`Can't update node collapse. Container id [${t.params.cid}] not found.`);let s=i.getNodeById(t.params.id);if(!s)return e.status(404).send(`Can't update node collapse. Node id [${t.params.cid}/${t.params.id}] not found.`);s.flags.collapsed=t.body.collapsed,a.default.db&&a.default.db.updateNode(s.id,s.container.id,{$set:{"flags.collapsed":s.flags.collapsed}}),a.default.server.editorSocket.io.emit("node-update-collapsed",{id:t.params.id,cid:t.params.cid,"flags.collapsed":s.flags.collapsed}),e.send(`Node collapsed updated: type [${s.type}] id [${s.container.id}/${s.id}]`)})),p.put("/c/:cid/move",(function(t,e){const i=+t.params.cid;let s=n.Container.containers[i];if(!s)return e.status(404).send(`Can't move nodes. Container id [${i}] not found.`);const r=t.body;m(s,r,i).then(t=>{const{nodes:p,convertedParamsCid:h}=function(t,e,i){const s=[];let a;({nodes:e,convertedParamsCid:a}=o.default.remapContainersId(t,e,i,null,!0)),e=function(t,e,i){const s=o.default.getSortedAvailableContainers(t),n=t.filter(t=>t.cid==i),a=Math.max(...n.map(t=>+t.id)),r={cid:e,type:u.CONTAINER_NODE_TYPE,pos:t[0].pos,sub_container:{id:s[0],last_node_id:a}};return t.push(r),t}(e,i,a);const r=o.default.getSortedAvailableContainers(e);return o.default.createContainersIfDoesNotExist(r,n.Side.server),r.forEach(t=>{let i=e.filter(e=>e.cid==t);o.default.sortNodes(i);const a=n.Container.containers[t];i.forEach(t=>{const e=a.createNode(t.type,t,null,!0);s.push(e),a.last_node_id=e.id}),a.container_node&&o.default.updateSubContainerLastNodeId(a,a.last_node_id)}),o.default.removeBrokenLinks(n.Container.containers[i]),o.default.removeBrokenLinks(n.Container.containers[a]),o.default.addInputsLinkNodes(s,e,c),o.default.addOutputsLinkNodes(s,e,g),{nodes:o.default.addSettingsValues(s,e,y),convertedParamsCid:a}}(s,t,i);f(s,r,i).then(()=>{a.default.server.editorSocket.io.emit(d.MOVE_TO_CONTAINER,{cid:i,nodes:p,convertedParamsCid:h,message:"Nodes Moved to new Container!"}),e.send("Moved nodes successfully")},t=>{l(e,t)})},t=>{l(e,t)})})),p.post("/c/:cid/clone",(function(t,e){const i=+t.params.cid;let s=n.Container.containers[i];if(!s)return e.status(404).send(`Can't clone node. Container id [${i}] not found.`);const{ids:r,pos:o}=t.body;m(s,r,i).then(t=>{const n=h(s,t,i,o,!0);a.default.server.editorSocket.io.emit(d.CLONE,{cid:i,nodes:n,message:"Nodes Cloned!"}),e.send("Nodes Cloned!")},t=>{l(e,t)})})),p.post("/c/:cid/export",(function(t,e){const i=+t.params.cid,s=n.Container.containers[i];if(!s)return e.status(404).send(`Can't export nodes. Container id [${i}] not found.`);m(s,t.body,i).then(t=>{e.status(200).json(t)},t=>{e.status(404).send(t)})})),p.post("/c/:cid/import",(function(t,e){const i=+t.params.cid,s=n.Container.containers[i];if(!s)return e.status(404).send(`Can't import nodes. Container id [${i}] not found.`);const{ids:r,pos:o}=t.body,u=h(s,r,i,o);a.default.server.editorSocket.io.emit(d.IMPORT,{cid:i,nodes:u,message:"Nodes Imported!"}),e.send("Nodes Imported!")})),p.post("/c/:cid/l",(function(t,e){let i=n.Container.containers[t.params.cid];if(!i)return e.status(404).send(`Can't create link. Container id [${t.params.cid}] not found.`);let s=t.body,r=i.getNodeById(s.origin_id),o=i.getNodeById(s.target_id);if(!r)return e.status(404).send(`Can't create link. Node id [${t.params.cid}/${s.origin_id}] not found.`);if(!o)return e.status(404).send(`Can't create link. Node id [${t.params.cid}/${s.target_id}] not found.`);if(-1===s.target_slot){if(!o.getInputInfo(0))return e.status(404).send(`Can't create link. Node id [${t.params.cid}/${s.target_id}] has no free inputs.`);s.target_slot=0}return r.connect(s.origin_slot,o.id,s.target_slot,s.target_input_id)?(a.default.server.editorSocket.io.emit("link-create",{cid:t.params.cid,link:s}),e.send(`Link created: from [${r.container.id}/${r.id}] to [${o.container.id}/${o.id}]`)):e.status(400).send(`Link created: from [${r.container.id}/${r.id}] to [${o.container.id}/${o.id}]`)})),p.delete("/c/:cid/l",(function(t,e){let i=n.Container.containers[t.params.cid];if(!i)return e.status(404).send(`Can't delete link. Container id [${t.params.cid}] not found.`);let s=t.body,r=i.getNodeById(s.origin_id),o=i.getNodeById(s.target_id);return r?o?o.disconnectInputLink(s.target_slot,s.target_input_id)?(a.default.server.editorSocket.io.emit("link-delete",{cid:t.params.cid,link:s}),e.send(`Link deleted: from [${r.container.id}/${r.id}] to [${o.container.id}/${o.id}]`)):e.status(400).send(`Cannot delete link: from [${r.container.id}/${r.id}] to [${o.container.id}/${o.id}]`):e.status(404).send(`Can't delete link. Node id [${t.params.cid}/${s.target_id}] not found.`):e.status(404).send(`Can't delete link. Node id [${t.params.cid}/${s.origin_id}] not found.`)})),p.get("/state",(function(t,e){let i={isRunning:a.default.rootContainer.isRunning};e.json(i)})),p.post("/run",(function(t,e){a.default.rootContainer.run(r.default.loopInterval),a.default.server.editorSocket.io.emit("container-run"),e.send("Run container")})),p.post("/stop",(function(t,e){a.default.rootContainer.stop(),a.default.server.editorSocket.io.emit("container-stop"),e.send("Stop container")})),p.post("/step",(function(t,e){a.default.rootContainer.runStep(),a.default.server.editorSocket.io.emit("container-run-step"),e.send("Run step container")})),p.get("/c/:cid/n/:id*",(function(t,e){let i=n.Container.containers[t.params.cid];if(!i)return e.status(404).send(`Can't send request to node. Container id [${t.params.cid}] not found.`);let s=i.getNodeById(t.params.id);return s?s.onEditorApiGetRequest?void s.onEditorApiGetRequest(t,e):e.status(404).send(`Can't send request to node. Node id [${t.params.cid}/${t.params.id}] does not accept requests.`):e.status(404).send(`Can't send request to node. Node id [${t.params.cid}/${t.params.id}] not found.`)})),p.post("/c/:cid/n/:id*",(function(t,e){let i=n.Container.containers[t.params.cid];if(!i)return e.status(404).send(`Can't send request to node. Container id [${t.params.cid}] not found.`);let s=i.getNodeById(t.params.id);return s?s.onEditorApiPostRequest?void s.onEditorApiPostRequest(t,e):e.status(404).send(`Can't send request to node. Node id [${t.params.cid}/${t.params.id}] does not accept requests.`):e.status(404).send(`Can't send request to node. Node id [${t.params.cid}/${t.params.id}] not found.`)})),p.post("/c/:cid/n-type",(function(t,e){let i=n.Container.containers[t.params.cid];if(!i)return e.status(404).send(`Can't receive request to node. Container id [${t.params.cid}] not found.`);let s=t.body.type;if(!s)return e.status(404).send("Can't receive request to node. Node type is not defined.");let a=1==t.body.subcontainers,r=i.getNodesByType(s,a);if(0==r.length)return e.status(404).send(`Can't receive request to node. Node type [${s}] not found in container [${t.params.cid}].`);r.forEach(i=>{if(!i.onEditorApiPostRequest)return e.status(404).send(`Can't receive request to node. Node type [${s}] does not accept requests.`);i.onEditorApiPostRequest(t,e)}),e.headersSent||e.status(400).send("No node has processed the request.")})),t.exports=p},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(15),a=i(21),r=i(123);let o=n.Router();o.get("",(function(t,e){return s(this,void 0,void 0,(function*(){try{const t=yield r.default.getWireName();e.json(t)}catch(t){e.status(500).send(t)}}))})),o.put("",(function({body:t},e){return s(this,void 0,void 0,(function*(){const{name:i}=t;try{yield r.default.changeWireName(i),a.default.server.wireNameSocket.io.emit("wire-name-update",i),e.status(201).send(t)}catch(t){e.status(500).send(t)}}))})),t.exports=o},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(26),n=i(8),a=i(7).create("auth-database",{color:4}),r=i(27),o=`${n.default.dataDir}/wire-name.txt`;e.default=class{static getWireName(){return new Promise((t,e)=>{r.default.createFile(o).then(()=>{s.readFile(o,{encoding:"utf-8"},(i,s)=>{i?(e(i),a.error(i)):t(s)})})})}static changeWireName(t){return new Promise((e,i)=>{r.default.createFile(o).then(()=>{s.writeFile(o,t,s=>{s?(i(s),a.error(s)):e(t)})})})}}},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(15),a=i(21),r=i(65),o=i(125);let u=n.Router();const d=o.object({username:o.string().min(5),password:o.string().min(5)});u.route("/user").post(r.schemaMiddleware(d,"body"),(t,e)=>s(void 0,void 0,void 0,(function*(){try{const i=yield a.default.db.addAuthUser(t.body);e.status(201).send(i)}catch(t){e.status(500).send(t)}}))),u.route("/user").get((t,e)=>s(void 0,void 0,void 0,(function*(){try{const t=yield a.default.db.getAuthUser();e.status(200).send(t)}catch(t){e.status(500).send(t)}}))),u.route("/users").delete(r.authMiddleware(),(t,e)=>s(void 0,void 0,void 0,(function*(){try{const t=yield a.default.db.deleteAuthUsers();e.status(200).send(t)}catch(t){e.status(500).send(t)}}))),u.route("/login").post(r.schemaMiddleware(d,"body"),(t,e)=>s(void 0,void 0,void 0,(function*(){try{const i=yield a.default.db.getAuthToken(t.body);e.status(200).send({token:i})}catch(t){e.status(500).send(t)}}))),t.exports=u},function(t,e){t.exports=require("@hapi/joi")},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(15),a=i(127);let r=n.Router();r.get("",(function(t,e){return s(this,void 0,void 0,(function*(){try{const t=yield a.default.getHelpComment();e.json(t)}catch(t){e.status(500).send(t)}}))})),r.put("",(function({body:t},e){return s(this,void 0,void 0,(function*(){const{stringHtml:i}=t;try{yield a.default.changeHelpComment(i),e.status(201).send("successful")}catch(t){e.status(500).send(t)}}))})),t.exports=r},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(26),n=i(8),a=i(7).create("auth-database",{color:4}),r=i(27),o=`${n.default.dataDir}/help-comment.txt`;e.default=class{static getHelpComment(){return new Promise((t,e)=>{r.default.createFile(o).then(()=>{s.readFile(o,{encoding:"utf-8"},(i,s)=>{i?(e(i),a.error(i)):t(s)})})})}static changeHelpComment(t){return new Promise((e,i)=>{r.default.createFile(o).then(()=>{s.writeFile(o,t,s=>{s?(i(s),a.error(s)):e(t)})})})}}},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(15),a=i(129);let r=n.Router();r.get("",(function(t,e){return s(this,void 0,void 0,(function*(){try{const t=yield a.default.getPlatform();e.json(t)}catch(t){e.status(500).send(t)}}))})),r.put("",(function({body:t},e){return s(this,void 0,void 0,(function*(){try{yield a.default.updatePlatform(t),e.status(201).send("successful")}catch(t){e.status(500).send(t)}}))})),t.exports=r},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(26),n=i(8),a=i(7).create("auth-database",{color:4}),r=i(27),o=`${n.default.dataDir}/platform.db`;e.default=class{static getPlatform(){return new Promise((t,e)=>{r.default.createFile(o).then(()=>{s.readFile(o,{encoding:"utf-8"},(i,s)=>{if(i)e(i),a.error(i);else{const e=s?JSON.parse(s):{};t(e)}})})})}static updatePlatform(t){return new Promise((e,i)=>{r.default.createFile(o).then(()=>{var n=JSON.stringify(t);s.writeFile(o,n,"utf-8",t=>{t?(i(t),a.error(t)):e(n)})})})}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),i(131),i(132),i(133),i(134),i(135),i(136),i(137),i(138),i(139),i(140),i(141),i(142),i(143),i(144),i(145),i(146),i(147),i(148),i(149),i(150),i(151),i(152),i(153),i(154),i(66),i(155),i(156),i(157),i(158),i(159),i(160),i(161),i(162),i(164),i(165),i(166),i(167),i(168),i(169),i(170),i(171),i(172),i(173),i(176),i(177),i(178),i(179),i(180),i(181),i(182),i(183),i(184),i(185),i(186),i(187),i(188),i(189),i(190),i(191),i(192),i(193),i(194),i(195),i(196),i(197),i(198),i(199),i(200),i(201),i(202),i(203),i(204),i(205),i(207),i(208),i(209),i(210),i(211),i(212),i(213),i(214),i(215),i(216),i(217),i(218),i(219),i(220),i(221),i(222),i(223),i(224),i(225),i(226),i(227),i(228),i(229),i(230),i(231),i(232),i(233),i(234),i(235),i(236),i(237),i(238),i(239),i(240),i(241),i(242),i(243),i(244),i(245),i(246),i(247),i(248),i(249),i(250),i(251),i(252),i(254),i(255),i(256),i(258),i(259),i(260),i(262),i(264),i(265),i(266),i(267),i(268),i(269),i(270),i(271),i(272),i(273),i(274),i(275),i(276),i(277),i(278),i(279),i(282),i(284),i(285),i(287),i(288),i(289),i(290),i(291),i(74),i(299),i(300),i(81),i(301),i(302),i(305),i(306),i(307),i(308),i(309),i(312),i(313),i(55),i(315),i(317),i(318),i(319),i(320),i(321),i(323),i(324),i(325),i(327),i(328),i(329),i(330),i(331),i(332),i(333),i(334),i(335),i(336),i(337),i(338),i(339),i(340),i(341),i(342),i(343),i(344),i(345),i(346),i(347),i(348),i(349),i(350),i(351),i(352),i(353),i(354),i(355),i(356),i(357),i(358),i(359),i(360),i(361),i(362),i(363),i(364),i(365),i(366),i(367),i(368),i(370),i(371),i(372),i(373),i(374),i(375),i(377),i(379),i(380),i(381),i(382),i(384),i(385),i(386),i(387),i(388),i(389),i(390),i(392),i(393),i(394),i(395),i(396),i(397),i(398),i(399),i(400)},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(10),a=i(0),r=i(2),o=i(1),u=i(42),d=i(43);class p extends r.Node{constructor(){super(),this.title="Create BSA Cumulocity Device",this.description="",this.addInput("createDevice",o.Type.BOOLEAN),this.addOutput("id",o.Type.NUMBER),this.addOutput("message",o.Type.STRING),this.settings.CumulocityDeviceName={description:"Cumulocity Device Name",value:"",type:r.SettingType.STRING}}onAdded(){return s(this,void 0,void 0,(function*(){yield this.onAfterSettingsChange()}))}onInputUpdated(){return s(this,void 0,void 0,(function*(){this.side===a.Side.server&&this.getInputData(0)&&this.inputs[0].updated&&(this.outputs[0].data&&0==this.outputs[0].data.length&&(yield this.createDevice()),yield this.checkDeviceExists())}))}onAfterSettingsChange(){return s(this,void 0,void 0,(function*(){this.side===a.Side.server&&(yield this.checkDeviceExists())}))}getDeviceName(){let t=this.settings.CumulocityDeviceName.value||"unknownDevice";return t.startsWith("c8y_")||(t="c8y_"+t),t}checkDeviceExists(){return s(this,void 0,void 0,(function*(){let t=this.getDeviceName(),e=u.bsaClientConfig("device");e=Object.assign(Object.assign({},e),{method:"GET",url:`${e.url}?query=name+eq+${t}`});try{const t=yield n.default(e),i=[];t.data.managedObjects.forEach(t=>{i.push(Number(t.id))}),this.setOutputData(0,i),this.setOutputData(1,null)}catch(t){this.setOutputData(1,String(t))}}))}createDevice(){return s(this,void 0,void 0,(function*(){let t,e;try{t=yield d.default.getClientID(this)}catch(e){t="unknownClientID"}try{e=yield d.default.getDeviceID(this)}catch(t){e="unknownDeviceID"}let i=this.getDeviceName(),s=u.bsaClientConfig("device");s=Object.assign(Object.assign({},s),{method:"POST",data:{name:i,type:"c8y_nube",deviceid:e,clientid:t,c8y_IsDevice:{}}});try{yield n.default(s)}catch(t){this.setOutputData(1,String(t))}}))}}a.Container.registerNodeType("bsa/bsa-cumulocity-device",p)},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(12),a=i(2),r=i(1),o=i(3),u=i(5),d=i(10),p=i(0),l=i(42);var h;!function(t){t[t.COV=0]="COV",t[t.PERIODIC=1]="PERIODIC",t[t.TRIGGER_ONLY=2]="TRIGGER_ONLY"}(h||(h={}));class c extends a.Node{constructor(){super(),this.valueInput=0,this.interval=-1,this.title="BSA Cumulocity Point (History)",this.description="",this.addInput("input",r.Type.ANY)}addHistoryConfiguration(){this.addInput("histTrigger",r.Type.BOOLEAN),this.addInput("clearStoredHis",r.Type.BOOLEAN),this.addOutput("histError",r.Type.ANY),this.addOutput("storedHistCount",r.Type.NUMBER),this.addOutput("lastHistExport",r.Type.STRING),this.settings.enable={description:"History Enable",value:!1,type:a.SettingType.BOOLEAN},this.settings.CumulocityDeviceID={description:"Cumulocity Device ID (Number)",value:"",type:a.SettingType.STRING},this.settings.CumulocityPointName={description:"Measurement Name",value:"",type:a.SettingType.STRING},this.settings.CumulocityPointType={description:"Measurement Type",value:"",type:a.SettingType.STRING},this.settings.CumulocitySeries={description:"Series Name",value:"",type:a.SettingType.STRING},this.settings.historyMode={description:"History Logging Mode",type:a.SettingType.DROPDOWN,config:{items:[{value:h.COV,text:"Change Of Value (COV)"},{value:h.PERIODIC,text:"Periodic"},{value:h.TRIGGER_ONLY,text:"Trigger Only"}]},value:h.COV},this.settings.dataType={description:"Data type for storing",type:a.SettingType.DROPDOWN,config:{items:[{value:r.Type.NUMBER,text:"Number"},{value:r.Type.BOOLEAN,text:"Boolean"},{value:r.Type.STRING,text:"String"}]},value:r.Type.NUMBER},this.settings.threshold={description:"COV Threshold",value:0,type:a.SettingType.NUMBER},this.settings.period={description:"Logging Interval",value:15,type:a.SettingType.NUMBER},this.settings.periodUnits={description:"Units",type:a.SettingType.DROPDOWN,config:{items:[{value:u.TIME_TYPE.MILLISECONDS,text:"Milliseconds"},{value:u.TIME_TYPE.SECONDS,text:"Seconds"},{value:u.TIME_TYPE.MINUTES,text:"Minutes"},{value:u.TIME_TYPE.HOURS,text:"Hours"}]},value:u.TIME_TYPE.MINUTES},this.settings["storage-limit"]={description:"Local Storage Limit (Max 50)",value:25,type:a.SettingType.NUMBER},this.settings.minuteRoundValue={description:"Round minutes up in increments of",value:0,type:a.SettingType.NUMBER},this.settings.decimals={description:"Decimal Places (Limit 5)",value:3,type:a.SettingType.NUMBER},this.settings.timeAsString={description:"Display Timestamp as",type:a.SettingType.DROPDOWN,config:{items:[{value:!1,text:"Numeric"},{value:!0,text:"String"}]},value:!0},this.settings.units={description:"Units",value:"",type:a.SettingType.STRING},this.properties.obj=[]}setup(){this.addHistoryConfiguration()}init(){this.assignInputsOutputs()}onAdded(){this.assignInputsOutputs(),this.resetOutputs(),this.doPeriodicHistoryFunctions()}onInputUpdated(){return s(this,void 0,void 0,(function*(){this.getInputData(this.clearStoredHisInput)&&(this.properties.obj=[],this.updateHistoryCountOutput()),yield this.doNonPeriodicHistoryFunctions()}))}onAfterSettingsChange(){return s(this,void 0,void 0,(function*(){yield this.doNonPeriodicHistoryFunctions(),this.doPeriodicHistoryFunctions()}))}onRemoved(){clearInterval(this.timeoutFunc)}assignInputsOutputs(){for(let t in this.inputs)this.inputs.hasOwnProperty(t)&&("histTrigger"==this.inputs[t].name&&(this.histTriggerInput=Number(t)),"clearStoredHis"==this.inputs[t].name&&(this.clearStoredHisInput=Number(t)));for(let t in this.outputs)this.outputs.hasOwnProperty(t)&&("histError"==this.outputs[t].name?this.histErrorOutput=Number(t):"storedHistCount"==this.outputs[t].name?this.storedHistCountOutput=Number(t):"lastHistExport"==this.outputs[t].name&&(this.lastHistExportOutput=Number(t)))}resetOutputs(){this.updateHistoryCountOutput()}doNonPeriodicHistoryFunctions(){return s(this,void 0,void 0,(function*(){if(this.side!==p.Side.server)return;if(!this.settings.enable.value)return;const t=this.getInputData(this.valueInput);this.checkTriggered()?yield this.storeLogEntry(t):this.checkCOV(t)&&(yield this.storeLogEntry(t)),this.properties.obj.length>0&&(yield this.trySendStoredData())}))}trySendStoredData(){return s(this,void 0,void 0,(function*(){let t=this.settings.decimals.value;t=o.default.clamp(t,0,5);const e=[];let i=this.settings.CumulocityPointName.value||"c8y_unknownPoint";i.startsWith("c8y_")||(i="c8y_"+i);let s=this.settings.CumulocityPointType.value||"c8y_unknownType";s.startsWith("c8y_")||(s="c8y_"+s);const a=this.settings.CumulocitySeries.value||"unknownSeries";this.properties.obj.forEach(n=>{const r=this.settings.dataType.value;n.payload=this.convertInput(n.payload,r,t),e.push({source:{id:this.settings.CumulocityDeviceID.value},time:n.timestamp,type:s,[i]:{[a]:{value:n.payload,unit:String(this.settings.units.value)||"undefined"}}})}),this.debugInfo(`SENDING DATA: ${JSON.stringify(e)}`);let r=l.bsaClientConfig("measurement");r=Object.assign(Object.assign({},r),{method:"POST",data:{measurements:e}});try{const t=yield d.default(r);this.debugInfo(`RESPONSE FROM SERVER: ${JSON.stringify(t.data)}`),this.properties.obj=[],this.persistProperties(!1,!0),this.setOutputData(this.histErrorOutput,""),this.settings.timeAsString.value?this.setOutputData(this.lastHistExportOutput,n().format(),!0):this.setOutputData(this.lastHistExportOutput,n().valueOf(),!0),this.updateHistoryCountOutput()}catch(t){this.debugErr(`ERROR: ${t}`),this.setOutputData(this.histErrorOutput,t)}}))}storeLogEntry(t){return s(this,void 0,void 0,(function*(){if(null==t)return;const e=o.default.clamp(this.settings["storage-limit"].value,0,50),i=o.default.clamp(this.settings.minuteRoundValue.value,0,60),s=i?u.default.nearestFutureMinutes(i,n()):n(),a={payload:t,timestamp:s.toISOString()};for(this.properties.obj.push(a);this.properties.obj.length>e;)this.properties.obj.shift();this.properties.lastHistoryValue=t,this.persistProperties(!1,!0),this.updateHistoryCountOutput()}))}checkTriggered(){return this.settings.historyMode.value===h.TRIGGER_ONLY&&this.getInputData(this.histTriggerInput)&&this.inputs[this.histTriggerInput].updated}checkCOV(t){if(this.settings.historyMode.value===h.COV){const e=this.settings.threshold.value;return isNaN(t)||isNaN(this.properties.lastHistoryValue)?t!==this.properties.lastHistoryValue:Math.abs(Number(t)-Number(this.properties.lastHistoryValue))>=e}return!1}doPeriodicHistoryFunctions(){if(this.side!==p.Side.server)return;const t=this.settings.enable.value,e=this.settings.historyMode.value===h.PERIODIC;if(t&&e||this.timeoutFunc&&(this.interval=-1,clearInterval(this.timeoutFunc),this.debugInfo("Clearing Periodic interval data insertion...")),t&&e){const t=u.default.timeConvert(this.settings.period.value,this.settings.periodUnits.value);this.interval!==t&&(clearInterval(this.timeoutFunc),this.timeoutFunc=setInterval(()=>s(this,void 0,void 0,(function*(){const t=this.getInputData(this.valueInput);yield this.storeLogEntry(t),this.properties.obj.length>0&&(yield this.trySendStoredData())})),t),this.interval=t,this.debugInfo(`Setting Periodic Period of: ${t} ms`))}}updateHistoryCountOutput(){this.setOutputData(this.storedHistCountOutput,this.properties.obj&&this.properties.obj.length||0)}}p.Container.registerNodeType("bsa/bsa-cumulocity-point",c)},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(10),a=i(13),r=i(0),o=i(2),u=i(1),d=i(42);let p=i(12);var l;!function(t){t.WARNING="WARNING",t.MINOR="MINOR",t.MAJOR="MAJOR",t.CRITICAL="CRITICAL"}(l||(l={}));const h={items:[{value:l.WARNING,text:l.WARNING},{value:l.MINOR,text:l.MINOR},{value:l.MAJOR,text:l.MAJOR},{value:l.CRITICAL,text:l.CRITICAL}]};class c extends o.Node{constructor(){super(),this.title="BSA Cumulocity Alarm",this.description="",this.addInput("alarmInput",u.Type.BOOLEAN),this.addInputWithSettings("alarmText",u.Type.STRING,"No Alarm Message Available","Enter Alarm Message"),this.addInputWithSettings("alarmClass",u.Type.DROPDOWN,l.WARNING,"Alarm Class",!1,h),this.addOutput("status",u.Type.BOOLEAN),this.addOutput("error",u.Type.STRING),this.settings.enable={description:"Alarm Enable",value:!0,type:o.SettingType.BOOLEAN},this.settings.CumulocityDeviceID={description:"Cumulocity Device ID (Number)",value:"",type:o.SettingType.STRING},this.settings.CumulocityAlarmName={description:"Alarm Name",value:"",type:o.SettingType.STRING}}onCreated(){a.isEmpty(this.properties.alarmRegistry)&&(this.properties.alarmRegistry={})}onInputUpdated(){return s(this,void 0,void 0,(function*(){this.side===r.Side.server&&this.settings.enable.value&&this.inputs[0].updated&&(yield this.postAlarm(this.getInputData(0)))}))}onAfterSettingsChange(){return s(this,void 0,void 0,(function*(){yield this.onInputUpdated()}))}postAlarm(t){return s(this,void 0,void 0,(function*(){let e=this.settings.CumulocityAlarmName.value||"c8y_unknownAlarm";e.startsWith("c8y_")||(e="c8y_"+e);let i=d.bsaClientConfig("alarm");if(t){i=Object.assign(Object.assign({},i),{method:"POST",data:{source:{id:this.settings.CumulocityDeviceID.value},text:this.getInputData(1),time:p().toISOString(),type:e,status:"ACTIVE",severity:this.getInputData(2)}});try{const t=yield n.default(i);this.setOutputData(0,!0),this.setOutputData(1,!1),this.properties.alarmRegistry[e]=t.data.id,this.debugInfo(`ALARM_REGISTRY ${JSON.stringify(this.properties.alarmRegistry)}`)}catch(t){this.debugErr(t),this.setOutputData(0,!1),this.setOutputData(1,t)}}else if(!t){const t=this.properties.alarmRegistry[e];if(!t)return;i=Object.assign(Object.assign({},i),{method:"PUT",url:`alarm/alarms/${t}`,data:{status:"CLEARED"}});try{yield n.default(i),this.setOutputData(0,!1),this.setOutputData(1,!1),delete this.properties.alarmRegistry[e],this.debugInfo(`Cleared alarm ${e}`),this.debugInfo(`ALARM_REGISTRY ${JSON.stringify(this.properties.alarmRegistry)}`)}catch(t){this.debugErr(`ERROR ${t}`),this.setOutputData(0,!1),this.setOutputData(1,t)}}this.persistProperties(!1,!0)}))}}r.Container.registerNodeType("bsa/bsa-cumulocity-alarm",c)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(6),a=i(1);class r extends n.FlexibleNode{constructor(){super(),this.dynamicSettingsExist=!1,this.dynamicInputsType=a.Type.BOOLEAN,this.title="AND",this.description="Performs a logical 'AND' operation (output 'true' when ALL inputs are 'true'). You can specify the number of inputs in the node settings.",this.addOutput("output",a.Type.BOOLEAN),this.addOutput("out not",a.Type.BOOLEAN),this.setOutputData(0,!1),this.setOutputData(1,!0)}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){const t=this.getDefinedInputValues();if(0==t.length)return this.setOutputData(0,!1),void this.setOutputData(1,!0);const e=t.every(t=>!0===t);this.setOutputData(0,e),this.setOutputData(1,!e)}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("boolean/and",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(6),a=i(1);class r extends n.FlexibleNode{constructor(){super(),this.dynamicSettingsExist=!1,this.dynamicInputsType=a.Type.BOOLEAN,this.title="OR",this.description="Performs a logical 'OR' operation (output 'true' when ANY input is 'true'). You can specify the number of inputs in the node settings.",this.addOutput("output",a.Type.BOOLEAN),this.addOutput("out not",a.Type.BOOLEAN)}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){const t=this.getDefinedInputValues();if(0==t.length)return this.setOutputData(0,!1),void this.setOutputData(1,!0);const e=t.some(t=>1==t);this.setOutputData(0,e),this.setOutputData(1,!e)}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("boolean/or",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(22),r=i(1);a.default.logicMainColour,a.default.logicAndIcon,a.default.logicOrIcon;class o extends s.Node{constructor(){super(),this.title="XOR",this.description="Performs a logical 'XOR' operation (output 'true' when EITHER input is 'true', but not both). Limited to only 2 inputs.",this.addInput("in 1",r.Type.BOOLEAN),this.addInput("in 2",r.Type.BOOLEAN),this.addOutput("output",r.Type.BOOLEAN),this.addOutput("out not",r.Type.BOOLEAN)}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){const t=this.getInputData(0),e=this.getInputData(1);t&&!e||!t&&e?(this.setOutputData(0,!0),this.setOutputData(1,!1)):(this.setOutputData(0,!1),this.setOutputData(1,!0))}}n.Container.registerNodeType("boolean/xor",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(22),r=i(1);a.default.logicMainColour,a.default.logicNotIcon;class o extends s.Node{constructor(){super(),this.title="NOT",this.description="Performs a logical 'NOT' operation (output will be the inverse of the input).",this.addInput("input",r.Type.BOOLEAN),this.addOutput("output",r.Type.BOOLEAN)}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){this.emitTransformedInput(t=>!t)}}n.Container.registerNodeType("boolean/not",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.state=!1,this.count=0,this.title="Toggle",this.description="When the 'input' transitions from 'false' to 'true', 'output' will switch between 'false'/'true'.   (See Figure A.)",this.addInput("input",a.Type.BOOLEAN),this.addOutput("output",a.Type.BOOLEAN),this.settings["reset-on-disc"]={description:"Reset on disconnected or input is null",value:!1,type:s.SettingType.BOOLEAN},this.setOutputData(0,null)}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){let t=this.getInputData(0);if(0===this.count?this.count=1:1===this.count&&(this.count=0),null==t||null==t)this.settings["reset-on-disc"].value&&(this.lastVal=!1,this.setOutputData(0,null),this.state=!1);else if(t==this.lastVal)return;1==t&&(this.setOutputData(0,!this.state),this.state=!this.state),this.lastVal=t}}n.Container.registerNodeType("boolean/toggle",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(5);class o extends s.Node{constructor(){super(),this.title="One Shot",this.description="Triggers output to 'true' for 'interval' duration when 'trigger' input transitions from 'false' to 'true.  Output is reset to 'false' when 'reset' transitions from 'false' to 'true. 'interval' units can be configured from settings. Maximum ‘interval’ setting is 587 hours. (See Figure A.).  If 'Retrigger While Output Is 'true'' setting is false, then 'fire' input transitions will have an effect when output is 'false'.",this.addInput("trigger",a.Type.BOOLEAN),this.addInput("reset",a.Type.BOOLEAN),this.addInputWithSettings("interval",a.Type.NUMBER,1,"Interval (Max is 597 Hours)"),this.addOutput("output",a.Type.BOOLEAN),this.addOutput("remaining",a.Type.NUMBER),this.settings.time={description:"Units",type:s.SettingType.DROPDOWN,config:{items:[{value:r.TIME_TYPE.MILLISECONDS,text:"Milliseconds"},{value:r.TIME_TYPE.SECONDS,text:"Seconds"},{value:r.TIME_TYPE.MINUTES,text:"Minutes"},{value:r.TIME_TYPE.HOURS,text:"Hours"}]},value:r.TIME_TYPE.SECONDS},this.setSettingsConfig({groups:[{interval:{weight:2},time:{}}]}),this.settings.retrigger={description:"Retrigger While Output is 'true'?",value:!0,type:s.SettingType.BOOLEAN}}onCreated(){this.setOutputData(0,!1),this.setOutputData(1,0),this.lastFireValue=!1,this.lastResetValue=!1,this.enabled=!1}onAdded(){this.onAfterSettingsChange()}onExecute(){}onAfterSettingsChange(){this.timeUnits=this.settings.time.value,this.inputs[2].name=`[interval] (${this.settings.time.value})`,this.outputs[1].name=`[remaining] (${this.timeUnits})`,this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(1);null==t&&(t=!1),1==t&&t!=this.lastResetValue&&(this.clearTimers(),this.setOutputData(0,!1),this.setOutputData(1,0),this.enabled=!1),this.lastResetValue=t;let e=this.getInputData(0);if(null==e&&(e=!1),1==e&&e!=this.lastFireValue){if(this.settings.retrigger.value||!1===this.enabled){const t=this.getInputData(2),e=r.default.timeConvert(t,this.timeUnits);switch(this.clearTimers(),this.setOutputData(0,!0),this.setOutputData(1,t),this.enabled=!0,this.timeoutFunc=setTimeout(()=>{this.enabled=!1,this.setOutputData(0,!1),this.setOutputData(1,0),clearInterval(this.remainingFunc)},e),this.timeUnits){case r.TIME_TYPE.MILLISECONDS:this.remainingUpdateMillis=500,this.remainingUpdateSize=500;break;case r.TIME_TYPE.SECONDS:this.remainingUpdateMillis=1e3,this.remainingUpdateSize=1;break;case r.TIME_TYPE.MINUTES:this.remainingUpdateMillis=6e3,this.remainingUpdateSize=.1;break;case r.TIME_TYPE.HOURS:this.remainingUpdateMillis=36e4,this.remainingUpdateSize=.1}this.remainingFunc=setInterval(()=>{const t=this.outputs[1].data-this.remainingUpdateSize;this.setOutputData(1,t)},this.remainingUpdateMillis)}}this.lastFireValue=e,this.setOutputData(0,this.outputs[0].data),this.setOutputData(1,this.outputs[1].data)}clearTimers(){this.timeoutFunc&&clearTimeout(this.timeoutFunc),this.remainingFunc&&clearInterval(this.remainingFunc)}}n.Container.registerNodeType("boolean/one-shot",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3),o=i(5);class u extends s.Node{constructor(){super(),this.title="Min On Off",this.description="‘output’ matches ‘input’ but is delayed by the 'minOn' and 'minOff' durations. ‘output’ will remain 'true' for 'minOn' duration then match the ‘input’ value. ‘output’ will remain 'false' for 'minOff' duration then match the ‘input’ value. 'minOn' and 'minOff' delays are cancelled when 'reset' transitions from 'false' to 'true. ‘minOn active’ is ‘true’ during ‘minOn’ periods. ‘minOff active’ is ‘true’ during ‘minOff’ periods.  'minOn' and 'minOff' units can be configured from settings. Maximum ‘minOn’ and ‘'minOff'’ setting is 587 hours.   (See Figure A.)",this.addInput("input",a.Type.BOOLEAN),this.addInputWithSettings("minOn",a.Type.NUMBER,1,"Minimum On Time"),this.addInputWithSettings("minOff",a.Type.NUMBER,1,"Minimum Off Time"),this.addInput("reset",a.Type.BOOLEAN),this.addOutput("output",a.Type.BOOLEAN),this.addOutput("minOn active",a.Type.BOOLEAN),this.addOutput("minOff active",a.Type.BOOLEAN),this.settings.timeMinOn={description:"Units",type:s.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"seconds"},this.settings.timeMinOff={description:"Units",type:s.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"seconds"},this.setSettingsConfig({groups:[{minOn:{weight:2},timeMinOn:{}},{minOff:{weight:2},timeMinOff:{}}]}),this.setOutputData(0,!1),this.setOutputData(1,!1),this.setOutputData(2,!1),this.timeOn=null,this.timeOff=null,this.minOnEnabled=!1,this.minOffEnabled=!1,this.lastResetValue=!1}onCreated(){this.setOutputData(0,!1),this.setOutputData(1,!1),this.setOutputData(2,!1)}onAdded(){this.inputs[1].name=`[minOn] (${this.settings.timeMinOn.value})`,this.inputs[2].name=`[minOff] (${this.settings.timeMinOff.value})`,this.onInputUpdated()}onExecute(){let t=null;this.minOnEnabled&&(t=Date.now()-this.timeOn,t>=this.minOnTime&&(this.minOnEnabled=!1,this.onInputUpdated(),this.setOutputData(1,!1))),this.minOffEnabled&&(t=Date.now()-this.timeOff,t>=this.minOffTime&&(this.minOffEnabled=!1,this.onInputUpdated(),this.setOutputData(2,!1))),this.setOutputData(1,this.outputs[1].data),this.setOutputData(2,this.outputs[2].data)}onInputUpdated(){let t=this.getInputData(3);null==t&&(t=!1),1==t&&t!=this.lastResetValue&&(this.setOutputData(0,!1),this.minOnEnabled=!1,this.minOffEnabled=!1,this.setOutputData(1,!1),this.setOutputData(2,!1)),this.lastResetValue=t;let e=this.getInputData(1);e=o.default.timeConvert(e,this.settings.timeMinOn.value),this.minOnTime=e;let i=this.getInputData(2);i=o.default.timeConvert(i,this.settings.timeMinOff.value),this.minOffTime=i;let s=this.getInputData(0);r.default.hasInput(s)||(s=!1),this.minOnEnabled||this.minOffEnabled||(this.setOutputData(0,s),s&&s!=this.lastValue?(this.timeOn=Date.now(),this.minOnEnabled=!0,this.setOutputData(1,!0)):s||s==this.lastValue||(this.timeOff=Date.now(),this.minOffEnabled=!0,this.setOutputData(2,!0)),this.lastValue=s)}onAfterSettingsChange(){this.inputs[1].name=`[minOn] (${this.settings.timeMinOn.value})`,this.inputs[2].name=`[minOff] (${this.settings.timeMinOff.value})`,this.onInputUpdated()}}n.Container.registerNodeType("boolean/min-on-off",u)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(5);class o extends s.Node{constructor(){super(),this.enabled=!1,this.title="On Delay",this.description="‘output’ matches ‘input’, but ‘output’ transitions from 'false' to 'true' are delayed by 'delay' duration. The delay is cancelled when 'reset' transitions from 'false' to 'true. ‘onDelay active’ is ‘true’ during ‘onDelay’ periods. 'delay' units can be configured from settings. Maximum ‘delay’ setting is 587 hours.  (See Figure A.)",this.addInput("input",a.Type.BOOLEAN),this.addInputWithSettings("delay",a.Type.NUMBER,1,"On Delay Duration (Max 597 Hours)"),this.addInput("reset",a.Type.BOOLEAN),this.addOutput("output",a.Type.BOOLEAN),this.addOutput("onDelay active",a.Type.BOOLEAN),this.addOutput("remaining",a.Type.NUMBER),this.settings.time={description:"Units",type:s.SettingType.DROPDOWN,config:{items:[{value:r.TIME_TYPE.MILLISECONDS,text:"Milliseconds"},{value:r.TIME_TYPE.SECONDS,text:"Seconds"},{value:r.TIME_TYPE.MINUTES,text:"Minutes"},{value:r.TIME_TYPE.HOURS,text:"Hours"}]},value:r.TIME_TYPE.SECONDS},this.setSettingsConfig({groups:[{delay:{weight:2},time:{}}]})}onCreated(){this.setOutputData(0,!1),this.setOutputData(1,!1),this.setOutputData(2,0),this.lastInput=!1,this.lastReset=!1}onAdded(){this.onAfterSettingsChange()}onExecute(){}onAfterSettingsChange(){this.timeUnits=this.settings.time.value,this.inputs[1].name=`[delay] (${this.timeUnits})`,this.outputs[2].name=`[remaining] (${this.timeUnits})`,this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(1),e=r.default.timeConvert(t,this.timeUnits);let i=this.getInputData(0);!0!==i&&(i=!1);const s=this.getInputData(2);if(s&&this.inputs[2].updated&&!this.lastReset&&this.enabled&&(this.clearTimers(),this.setOutputData(0,i),this.setOutputData(1,!1),this.setOutputData(2,0),this.enabled=!1),this.lastReset=s,i&&this.inputs[0].updated&&!this.lastInput){switch(this.setOutputData(1,!0),this.setOutputData(2,t),this.enabled=!0,this.clearTimers(),this.timeoutFunc=setTimeout(()=>{this.enabled=!1,this.setOutputData(0,!0),this.setOutputData(1,!1),this.setOutputData(2,0),clearInterval(this.remainingFunc)},e),this.timeUnits){case r.TIME_TYPE.MILLISECONDS:this.remainingUpdateMillis=500,this.remainingUpdateSize=500;break;case r.TIME_TYPE.SECONDS:this.remainingUpdateMillis=1e3,this.remainingUpdateSize=1;break;case r.TIME_TYPE.MINUTES:this.remainingUpdateMillis=6e3,this.remainingUpdateSize=.1;break;case r.TIME_TYPE.HOURS:this.remainingUpdateMillis=36e4,this.remainingUpdateSize=.1}this.remainingFunc=setInterval(()=>{const t=this.outputs[2].data-this.remainingUpdateSize;this.setOutputData(2,t)},this.remainingUpdateMillis)}this.lastInput=i,i||(this.setOutputData(0,!1),this.setOutputData(1,!1),this.setOutputData(2,0),this.inputs[0].updated&&this.enabled&&(this.clearTimers(),this.enabled=!1))}clearTimers(){this.timeoutFunc&&clearTimeout(this.timeoutFunc),this.remainingFunc&&clearInterval(this.remainingFunc)}}n.Container.registerNodeType("boolean/on-delay",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(5);class o extends s.Node{constructor(){super(),this.enabled=!1,this.title="Off Delay",this.description="‘output’ matches ‘input’, but ‘output’ transitions from 'true' to 'false' are delayed by 'delay' duration. The delay is cancelled when 'reset' transitions from 'false' to 'true. ‘offDelay active’ is ‘true’ during ‘offDelay’ periods. 'delay' units can be configured from settings.  Maximum ‘delay’ setting is 587 hours. (See Figure A.)",this.addInput("input",a.Type.BOOLEAN),this.addInputWithSettings("delay",a.Type.NUMBER,1,"Off Delay Duration (Max 597 Hours)"),this.addInput("reset",a.Type.BOOLEAN),this.addOutput("output",a.Type.BOOLEAN),this.addOutput("offDelay active",a.Type.BOOLEAN),this.addOutput("remaining",a.Type.NUMBER),this.settings.time={description:"Units",type:s.SettingType.DROPDOWN,config:{items:[{value:r.TIME_TYPE.MILLISECONDS,text:"Milliseconds"},{value:r.TIME_TYPE.SECONDS,text:"Seconds"},{value:r.TIME_TYPE.MINUTES,text:"Minutes"},{value:r.TIME_TYPE.HOURS,text:"Hours"}]},value:r.TIME_TYPE.SECONDS},this.setSettingsConfig({groups:[{delay:{weight:2},time:{}}]})}onCreated(){this.setOutputData(0,!1),this.setOutputData(1,!1),this.setOutputData(2,0),this.lastInput=!1,this.lastReset=!1}onAdded(){this.onAfterSettingsChange()}onAfterSettingsChange(){this.timeUnits=this.settings.time.value,this.inputs[1].name=`[delay] (${this.timeUnits})`,this.outputs[2].name=`[remaining] (${this.timeUnits})`,this.onInputUpdated()}onExecute(){}onInputUpdated(){const t=this.getInputData(1),e=r.default.timeConvert(t,this.timeUnits);let i=this.getInputData(0);!0!==i&&(i=!1);const s=this.getInputData(2);if(s&&this.inputs[2].updated&&!this.lastReset&&this.enabled&&(this.clearTimers(),this.setOutputData(0,i),this.setOutputData(1,!1),this.setOutputData(2,0),this.enabled=!1),this.lastReset=s,!i&&this.inputs[0].updated&&this.lastInput){switch(this.setOutputData(1,!0),this.setOutputData(2,t),this.clearTimers(),this.enabled=!0,this.timeoutFunc=setTimeout(()=>{this.enabled=!1,this.setOutputData(0,!1),this.setOutputData(1,!1),this.setOutputData(2,0),clearInterval(this.remainingFunc)},e),this.timeUnits){case r.TIME_TYPE.MILLISECONDS:this.remainingUpdateMillis=500,this.remainingUpdateSize=500;break;case r.TIME_TYPE.SECONDS:this.remainingUpdateMillis=1e3,this.remainingUpdateSize=1;break;case r.TIME_TYPE.MINUTES:this.remainingUpdateMillis=6e3,this.remainingUpdateSize=.1;break;case r.TIME_TYPE.HOURS:this.remainingUpdateMillis=36e4,this.remainingUpdateSize=.1}this.remainingFunc=setInterval(()=>{const t=this.outputs[2].data-this.remainingUpdateSize;this.setOutputData(2,t)},this.remainingUpdateMillis)}this.lastInput=i,i&&(this.setOutputData(0,!0),this.setOutputData(1,!1),this.setOutputData(2,0),this.inputs[0].updated&&this.enabled&&(this.clearTimers(),this.enabled=!1))}clearTimers(){this.timeoutFunc&&clearTimeout(this.timeoutFunc),this.remainingFunc&&clearInterval(this.remainingFunc)}}n.Container.registerNodeType("boolean/off-delay",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(5);class o extends s.Node{constructor(){super(),this.lastInterval=1e3,this.state=!1,this.runState=!0,this.title="Ticker",this.description="While 'enable' is 'true', ‘output’ will change to 'true' at every 'interval' period. If 'Generate False' setting is set to ‘true’, ‘output’ will be 'false' for the second half of the 'interval' period. When 'enable' is 'false', ‘output’ will be 'false'. 'interval' units can be configured from settings.  Maximum ‘interval’ setting is 587 hours.  (See Figure A.)",this.addInputWithSettings("enable",a.Type.BOOLEAN,!0,"Enable"),this.addInputWithSettings("interval",a.Type.NUMBER,1,"Interval"),this.addOutput("output",a.Type.BOOLEAN),this.settings.time={description:"Units",type:s.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"seconds"},this.setSettingsConfig({groups:[{interval:{weight:2},time:{}}]}),this.settings.false={description:"Generate False",value:!0,type:s.SettingType.BOOLEAN},this.setOutputData(0,!1)}onAdded(){if(this.inputs[1].name=`[interval] (${this.settings.time.value})`,clearInterval(this.timeoutFunc),!this.getInputData(0))return this.setOutputData(0,!1),void(this.runState=!1);let t=this.getInputData(1);t=r.default.timeConvert(t,this.settings.time.value),this.timeoutFunc=setInterval(()=>{this.state=!this.state,this.state||!this.settings.false.value?this.state&&this.setOutputData(0,!0):this.setOutputData(0,!1)},t/2),this.onInputUpdated()}onExecute(){}onInputUpdated(){let t=this.getInputData(0);if(!t&&this.runState)return clearInterval(this.timeoutFunc),this.setOutputData(0,!1),this.runState=!1,void(this.state=!1);if(!t&&!this.runState)return this.setOutputData(0,!1),this.runState=!1,void(this.state=!1);if(t){let t=this.getInputData(1);if(t=r.default.timeConvert(t,this.settings.time.value),this.runState)return void(t!=this.lastInterval&&(this.lastInterval=t,clearInterval(this.timeoutFunc),this.timeoutFunc=setInterval(()=>{this.state=!this.state,this.state||!this.settings.false.value?this.state&&this.setOutputData(0,!0):this.setOutputData(0,!1)},t/2)));this.runState||(this.runState=!0,this.state=!0,this.setOutputData(0,!0),this.timeoutFunc=setInterval(()=>{this.state=!this.state,this.state||!this.settings.false.value?this.state&&this.setOutputData(0,!0):this.setOutputData(0,!1)},t/2))}}onAfterSettingsChange(){this.inputs[1].name=`[interval] (${this.settings.time.value})`,this.onInputUpdated()}}n.Container.registerNodeType("boolean/ticker",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3);class o extends s.Node{constructor(){super(),this.title="Equal",this.description="'output equal' is 'true' when 'in 1' and 'in 2' are identical, otherwise 'output equal' is 'false'.  Can be used to compare boolean, numeric, and string values; it can also be used to compare 'null' values. 'output not equal' is always the opposite of 'out equal'.",this.addInput("in 1",a.Type.ANY),this.addInputWithSettings("in 2",a.Type.ANY,null,"in 2"),this.addOutput("out equal",a.Type.BOOLEAN),this.addOutput("out not equal",a.Type.BOOLEAN)}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);if(!r.default.hasInput(t))return this.setOutputData(0,!1),void this.setOutputData(1,!0);t=(t||"").toString(),t===(this.getInputData(1)||"").toString()?(this.setOutputData(0,!0),this.setOutputData(1,!1)):(this.setOutputData(0,!1),this.setOutputData(1,!0))}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("compare/equal",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Greater than",this.description="'out >' is 'true' when 'in 1' is greater than 'in 2', otherwise 'out >' is 'false'. 'out >=' is 'true' when 'in 1' is greater than or equal to 'in 2', otherwise 'out>=' is 'false'.  Both Outputs will be 'false' if either input is undefined.",this.addInput("in 1",a.Type.NUMBER),this.addInputWithSettings("in 2",a.Type.NUMBER,0,"In 2 Constant",!1),this.addOutput("out >",a.Type.BOOLEAN),this.addOutput("out >=",a.Type.BOOLEAN)}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0),e=this.getInputData(1);null!=t&&null!=e?(this.setOutputData(0,t>e),this.setOutputData(1,t>=e)):(this.setOutputData(0,!1),this.setOutputData(1,!1))}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("compare/greater-than",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Less than",this.description="'out <' is 'true' when 'in 1' is less than 'in 2', otherwise 'out <' is 'false'.  'out <=' is 'true' when 'in 1' is less than or equal to 'in 2', otherwise 'out <=' is 'false'.  Both outputs will be 'false' if either input is undefined.",this.addInput("in 1",a.Type.NUMBER),this.addInputWithSettings("in 2",a.Type.NUMBER,0,"In 2 Constant",!1),this.addOutput("out <",a.Type.BOOLEAN),this.addOutput("out <=",a.Type.BOOLEAN)}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){let t=this.getInputData(0),e=this.getInputData(1);if(null!=t&&null!=e)return this.setOutputData(0,t<e),void this.setOutputData(1,t<=e);this.setOutputData(0,!1),this.setOutputData(1,!1)}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("compare/less-than",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Between",this.description="'output' is 'true' when 'in 1' is within the numeric range between 'from' value and 'to' value (exclusive), otherwise 'output' is 'false'.  'output' will be 'false' if either input is undefined. 'outp not' is always the opposite of 'output'.",this.addInput("input",a.Type.NUMBER),this.addInputWithSettings("from",a.Type.NUMBER,0,"From Value",!1),this.addInputWithSettings("to",a.Type.NUMBER,1,"To Value",!1),this.addOutput("output",a.Type.BOOLEAN),this.addOutput("out not",a.Type.BOOLEAN),this.setOutputData(0,!1),this.setOutputData(1,!0)}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0),e=this.getInputData(1),i=this.getInputData(2);null!=t&&null!=e&&null!=i&&t>=Math.min(e,i)&&t<=Math.max(e,i)?(this.setOutputData(0,!0),this.setOutputData(1,!1)):(this.setOutputData(0,!1),this.setOutputData(1,!0))}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("compare/between",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Hysteresis",this.description="Boolean 'output' based on 'input' in relation to 'risingEdge' and 'fallingEdge' setpoints.  There are 2 cases: 'risingEdge' greater than 'fallingEdge', and 'risingEdge' less than 'fallingEdge'. [For 'risingEdge' > 'fallingEdge'] => 'output' is 'true' when 'input' is greater than 'risingEdge'.  'output' is  'false' when 'input' is less than 'fallingEdge'. [For 'fallingEdge' < 'fallingEdge'] => 'output' is 'false' when 'input' is greater than 'risingEdge'.  'output' is 'true' when 'input' is less than 'fallingEdge'.  In both cases, when 'input' is between 'risingEdge' and 'fallingEdge', 'output' will remain in its current state.  ",this.addInput("input",a.Type.NUMBER),this.addInputWithSettings("risingEdge",a.Type.NUMBER,20,"Rising Edge",!1),this.addInputWithSettings("fallingEdge",a.Type.NUMBER,10,"Falling Edge",!1),this.addOutput("output",a.Type.BOOLEAN),this.addOutput("out not",a.Type.BOOLEAN),this.setOutputData(0,!1),this.setOutputData(1,!0)}onAdded(){this.setOutputData(0,!1)}onExecute(){}onInputUpdated(){let t=this.getInputData(0),e=this.getInputData(1),i=this.getInputData(2);null!=e&&null!=i?e>i?(t<=i&&(this.setOutputData(0,!1),this.setOutputData(1,!0)),t>=e&&(this.setOutputData(0,!0),this.setOutputData(1,!1))):e<i&&(t>=i&&(this.setOutputData(0,!1),this.setOutputData(1,!0)),t<=e&&(this.setOutputData(0,!0),this.setOutputData(1,!1))):(this.setOutputData(0,!1),this.setOutputData(1,!0))}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("compare/hysteresis",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Type Check (string)",this.description="'output' is 'true' when 'input' type matches 'Type to check' setting.  'isType' outputs the type of the 'input' value.",this.addInput("input",a.Type.ANY),this.addOutput("output",a.Type.BOOLEAN),this.addOutput("isType",a.Type.STRING),this.settings.type={description:"Type to check",type:s.SettingType.DROPDOWN,config:{items:[{value:a.Type.STRING,text:a.Type.STRING},{value:a.Type.NUMBER,text:a.Type.NUMBER},{value:a.Type.BOOLEAN,text:a.Type.BOOLEAN},{value:a.Type.JSON,text:a.Type.JSON}]},value:a.Type.STRING}}onAdded(){this.updateTitle(),this.onInputUpdated()}onExecute(){}onInputUpdated(){let t=this.getInputData(0);void 0===t&&(this.setOutputData(0,null),this.setOutputData(1,null));const e=this.settings.type.value,i=typeof t;switch(this.setOutputData(1,i),e){case a.Type.STRING:this.setOutputData(0,typeof t===a.Type.STRING);break;case a.Type.NUMBER:this.setOutputData(0,typeof t===a.Type.NUMBER);break;case a.Type.BOOLEAN:this.setOutputData(0,typeof t===a.Type.BOOLEAN);break;case a.Type.JSON:if("string"==typeof t)try{JSON.parse(t),this.setOutputData(0,!0)}catch(t){this.setOutputData(0,!1)}else if("object"==typeof t)try{JSON.parse(JSON.stringify(t)),this.setOutputData(0,!0)}catch(t){this.setOutputData(0,!1)}this.setOutputData(0,null===t)}}onAfterSettingsChange(){this.updateTitle(),this.onInputUpdated()}updateTitle(){switch(this.settings.type.value){case a.Type.STRING:this.title="Type Check (string)";break;case a.Type.NUMBER:this.title="Type Check (number)";break;case a.Type.BOOLEAN:this.title="Type Check (boolean)";break;case a.Type.JSON:this.title="Type Check (json)"}}}n.Container.registerNodeType("compare/type-check",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(2),a=i(22),r=i(1),o=a.default.aiIcon;class u extends n.Node{constructor(){super(),this.title="Link Transmitter Single",this.description="This node works in conjunction with link-receiver node, and provides a connection of nodes without the graphical wires. 'in #' inputs will be sent to the corresponding 'out #' output on link-receiver nodes with matching 'Channel Number' settings. The number of inputs is configurable from settings.",this.iconImageUrl=o,this.addInput("input",r.Type.ANY),this.addInputWithSettings("channel",r.Type.STRING,"1","Topic Name",!1),this.addInputWithSettings("enable",r.Type.BOOLEAN,!0,"Enable"),this.settings.ifNew={description:"Only transmit on COV",value:!1,type:n.SettingType.BOOLEAN}}init(){this.properties.channel||(this.properties.channel=null)}onAdded(){this.onAfterSettingsChange(),this.updateTitle()}onInputUpdated(){if(this.side!==s.Side.server)return;this.properties.channel=this.getInputData(1),this.persistProperties(!1,!0);const t=this.getReceivers();if(this.inputs[1].updated&&this.updateTransmitterTopics(),!this.isEnable())return;const e=this.getInputData(0),i=this.getInputData(1),n=this.settings.ifNew.value;t.forEach(t=>{if(t.settings.channel.value===i){const i=t.settings.blockNull.value;!0===t.getInputData(0)&&(i&&null!=e||!i)&&(t.properties.val=e,t.persistProperties(!1,!0),t.setOutputData(0,t.properties.val,n))}}),this.updateTitle()}onAfterSettingsChange(){this.updateTransmitterTopics(),this.onInputUpdated()}onRemoved(){this.updateTransmitterTopics()}updateTransmitterTopics(){this.side===s.Side.server&&setTimeout(()=>{this.getReceivers().forEach(t=>{t.triggerTransmitterTopicUpdate()})},100)}getReceivers(){return s.Container.containers[0].getNodesByType("connection/link-receiver-single",!0)}isEnable(){return this.getInputData(2)}updateTitle(){this.title=`Link Transmitter Single [${this.properties.channel||this.getInputData(1)}]`,this.broadcastTitleToClients()}}e.ConnectionLocalTransmitterNode=u,s.Container.registerNodeType("connection/link-transmitter-single",u)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(22),r=i(1),o=i(4),u=a.default.aiIcon;class d extends s.Node{constructor(){super(),this.topicList=[],this.title="Link Receiver Topic",this.description="This node works in conjunction with link-transmitter node and provides a connection of nodes without the graphical wires. 'out #' outputs will match the corresponding 'in #' input from link-transmitter nodes with matching 'Channel Number' settings.  The number of outputs is configurable from settings.",this.iconImageUrl=u,this.addInputWithSettings("enable",r.Type.BOOLEAN,!0,"Enable"),this.addOutput("output",r.Type.ANY),this.addOutput("topic-id",r.Type.STRING),this.settings.channel={description:"Topic Name",config:{items:[]},value:"",type:s.SettingType.DROPDOWN},this.settings.blockNull={description:"Block Null",value:!1,type:s.SettingType.BOOLEAN}}init(){this.properties.val||(this.properties.val=null)}onAdded(){this.onAfterSettingsChange(),this.setOutputData(0,this.properties.val)}onCreated(){o.isNull(this.settings.channel.value)&&this.onAfterSettingsChange()}onAfterSettingsChange(){this.updateTitle(),this.side===n.Side.server&&(this.transmitterTopic(),this.updateChannel())}pushSettings(){const t=this.topicList.map(t=>({value:t,text:t}));this.settings.channel.config={items:t},this.persistProperties(!0),this.updateTitle(),this.updateChannel(),this.broadcastSettingsToClients(!1),this.broadcastTitleToClients(!1),this.broadcastOutputsToClients(!1)}transmitterTopic(){const t=n.Container.containers[0].getNodesByType("connection/link-transmitter-single",!0);this.topicList=[],t.forEach(t=>{this.topicList.push(t.getInputData(1)),this.settings.channel.value===t.getInputData(1)&&this.setOutputData(0,t.getInputData(0))}),this.pushSettings()}updateTitle(){this.title="Link Receiver Single ["+this.settings.channel.value+"]"}updateChannel(){this.setOutputData(1,this.settings.channel.value)}triggerTransmitterTopicUpdate(){this.side===n.Side.server&&this.transmitterTopic()}}e.ConnectionLocalReceiverNode=d,n.Container.registerNodeType("connection/link-receiver-single",d)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(2),a=i(1),r=i(3);class o extends n.Node{constructor(){super(),this.title="Link Transmitter",this.description="This node works in conjunction with link-receiver node, and provides a connection of nodes without the graphical wires.  'in #' inputs will be sent to the corresponding 'out #' output on link-receiver nodes with matching 'Channel Number' settings.  The number of inputs is configurable from settings.",this.settings.channel={description:"Channel Number",value:1,type:n.SettingType.NUMBER},this.settings.inputsCount={description:"Inputs Count",value:1,type:n.SettingType.NUMBER}}init(){this.properties.inputsCount=0,this.changeTopicsCount(this.settings.inputsCount.value)}onAdded(){this.onAfterSettingsChange()}onInputUpdated(){for(let t in this.inputs){let e=this.inputs[t].data;null==e&&(e=null),s.Container.containers[0].getNodesByType("connection/link-receiver",!0).forEach(i=>{i.settings.channel.value==this.settings.channel.value&&i.outputs.hasOwnProperty(t)&&(i.setOutputData(+t,e),""!==this.inputs[t].name&&(i.outputs[t].name=this.inputs[t].name))})}}onAfterSettingsChange(){this.updateTitle();let t=this.settings.inputsCount.value;t=r.default.clamp(t,1,100),t!==this.properties.inputsCount&&this.changeTopicsCount(t),this.renameInputs(),this.persistProperties(!0,!0,!0),this.onInputUpdated()}changeTopicsCount(t){let e=t-this.properties.inputsCount;if(0!=e){if(this.changeInputsCount(t,a.Type.ANY),e>0)for(let e=this.properties.inputsCount+1;e<=t;e++)this.settings["in"+e]={description:"Input "+e,value:"",type:n.SettingType.STRING};else if(e<0)for(let e=this.properties.inputsCount;e>t;e--)delete this.settings["in"+e];this.properties.inputsCount=t}}renameInputs(){var t,e;for(let i=0;i<=this.properties.inputsCount-1;i++){let s=null===(t=this.settings["in"+(i+1)])||void 0===t?void 0:t.value;(null===(e=s)||void 0===e?void 0:e.length)>20&&(s="..."+s.substr(s.length-20,20)),this.inputs[String(i)].name=i+1+" | "+s}if(this.side==s.Side.editor){for(let t=0;t<=this.properties.inputsCount-1;t++)this.inputs[String(t)].label=this.inputs[String(t)].name;this.setDirtyCanvas(!0,!0)}}updateTitle(){this.title="Link Transmitter ["+this.settings.channel.value+"]"}}e.ConnectionLocalTransmitterNode=o,s.Container.registerNodeType("connection/link-transmitter",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(6);class r extends a.FlexibleNode{constructor(){super(),this.dynamicOutputsExist=!0,this.dynamicInputsExist=!1,this.dynamicSettingsExist=!1,this.dynamicDefaultOutputs=1,this.dynamicMinOutputs=1,this.title="Link Receiver",this.description="This node works in conjunction with link-transmitter node and provides a connection of nodes without the graphical wires.  'out #' outputs will match the corresponding 'in #' input from link-transmitter nodes with matching 'Channel Number' settings.  The number of outputs is configurable from settings.",this.settings.channel={description:"Channel Number",value:1,type:s.SettingType.NUMBER}}onCreated(){this.properties.channel=1}onAdded(){this.updateTitle(),this.onAfterSettingsChange()}onAfterSettingsChange(){super.onAfterSettingsChange(),this.updateTitle(),this.properties.channel!==this.settings.channel.value&&this.resetOutputs(),this.triggerTransmitterNodeUpdate()}triggerTransmitterNodeUpdate(){n.Container.containers[0].getNodesByType("connection/link-transmitter",!0).forEach(t=>{t.settings.channel.value==this.settings.channel.value&&t.onInputUpdated()})}resetOutputs(){for(let t in this.outputs)this.setOutputData(+t,null)}updateTitle(){this.title="Link Receiver ["+this.settings.channel.value+"]"}}e.ConnectionLocalReceiverNode=r,n.Container.registerNodeType("connection/link-receiver",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(1),a=i(3),r=i(6);class o extends r.FlexibleNode{constructor(){super(),this.dynamicSettingsExist=!1,this.dynamicInputsType=n.Type.ANY,this.title="Hub",this.description="This node merges multiple inputs into a single stream/output.  Any new 'input' ('in #') value will be passed to 'output'.  The number of inputs can be modified from settings.",this.addOutput("output",n.Type.ANY)}onAdded(){this.onInputUpdated(),this.size=this.computeSize()}onInputUpdated(){const t=this.getInputsCount();for(let e=this.dynamicInputStartPosition;e<t;e++){let t=this.getInputData(e);if(a.default.hasInput(t)&&this.inputs[e].updated)return void this.setOutputData(0,this.inputs[e].data)}}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("connection/hub",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(4),n=i(0),a=i(1),r=i(11),o=i(67);class u extends o.AbstractFolderIONode{constructor(t){super(t,"Folder Input","Input of the container"),this.addOutput("input",null)}onCreated(){if(!this.isUnderContainer())return;let t=this.container.container_node;const e=t.addInput(this.name,a.Type.ANY,void 0,void 0,{subNodeId:this.id});this.name=t.inputs[e].name,this.linkHandler.recomputeInputLinks(r.default.getId(t.cid,t.id))}onRemoved(){if(!this.isUnderContainer())return;let t=this.container.container_node,[e,i]=this.findParentOutputById(this.container.container_node,"inputs");s.isNull(e)||(t.removeInput(+e),this.linkHandler.recomputeInputLinks(r.default.getId(t.cid,t.id)),this.emitChange(t,"size"))}onAfterSettingsChange(){if(!this.isUnderContainer())return;const t=this.container.container_node;let[e,i]=this.findParentOutputById(this.container.container_node,"inputs");s.isNull(e)||(t.inputs[e].name=this.name,this.emitChange(t,"inputs"))}onExecute(){var t;if(!this.isUnderContainer())return;let[e,i]=this.findParentOutputById(this.container.container_node,"inputs"),s=i;(null===(t=s)||void 0===t?void 0:t.updated)&&this.setOutputData(0,s.data)}correctParentIO(t,e){let i=t.inputs[e];s.isNull(i)||(i.subNodeId=this.id,this.emitChange(t,"inputs"))}}n.Container.registerNodeType("container/folder-input",u,null,!0,!1,!0)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(4),n=i(0),a=i(1),r=i(11),o=i(67);class u extends o.AbstractFolderIONode{constructor(t){super(t,"Folder Output","Output of the container"),this.addInput("output",null)}onCreated(){if(!this.isUnderContainer())return;let t=this.container.container_node;const e=t.addOutput(this.name,a.Type.ANY,void 0,{subNodeId:this.id});this.name=t.outputs[e].name,this.linkHandler.recomputeOutputLinks(r.default.getId(t.cid,t.id))}onRemoved(){if(!this.isUnderContainer())return;let t=this.container.container_node,[e,i]=this.findParentOutputById(this.container.container_node,"outputs");s.isNull(e)||(t.removeOutput(+e),this.linkHandler.recomputeOutputLinks(r.default.getId(t.cid,t.id)),this.emitChange(t,"size"))}onAfterSettingsChange(){if(!this.isUnderContainer())return;const t=this.container.container_node;let[e,i]=this.findParentOutputById(t,"outputs");s.isNull(e)||(t.outputs[e].name=this.name,this.emitChange(t,"outputs"))}onInputUpdated(){if(!this.isUnderContainer())return;let[t,e]=this.findParentOutputById(this.container.container_node,"outputs");s.isNull(t)||(this.isRecentlyActive=!0,this.container.container_node.setOutputData(+t,this.getInputData(0)))}correctParentIO(t,e){let i=t.outputs[e];s.isNull(i)||(i.subNodeId=this.id,this.emitChange(t,"outputs"))}}n.Container.registerNodeType("container/folder-output",u,null,!0,!1,!0)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(2),a=i(1),r=i(3);class o extends n.Node{constructor(){super(),this.title="Bit Mask Single",this.description="A node to mask a single bit of a byte",this.settings.bit={description:"bit index (0-7)",type:n.SettingType.NUMBER,value:0},this.settings.byte={description:"Byte to read if Array",type:n.SettingType.NUMBER,value:0},this.addInput("input",a.Type.ANY),this.addOutput("output",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);if(null==t)return;const e=this.settings.bit.value,i=this.settings.byte.value;if("object"==typeof t){if(!t||!t.length||t.length<i+1)return;t=t[i]}this.setOutputData(0,t>>e&1)}onAfterSettingsChange(){this.settings.bit.value=r.default.clamp(this.settings.bit.value,0,7),this.onInputUpdated()}}s.Container.registerNodeType("conversion/bit-mask-single",o);class u extends n.Node{constructor(){super(),this.mask=0,this.title="Bit Mask Multiple",this.description="A node to mask certain bits of a byte",this.settings.bitStart={description:"Lowest bit to start (0-7)",type:n.SettingType.NUMBER,value:0},this.settings.maskLen={description:"Mask length (1-8)",type:n.SettingType.NUMBER,value:1},this.settings.byte={description:"Byte to read if Array",type:n.SettingType.NUMBER,value:0},this.addInput("input",a.Type.ANY),this.addOutput("output",a.Type.NUMBER),this.addOutput("error",a.Type.STRING)}init(){this.updateMask()}onAdded(){this.updateMask(),this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);if(null==t)return;const e=this.settings.bitStart.value,i=this.settings.byte.value;if("object"==typeof t){if(!t||!t.length||t.length<i+1)return;t=t[i]}this.setOutputData(0,(t&this.mask)>>e)}onAfterSettingsChange(){this.settings.bitStart.value=r.default.clamp(this.settings.bitStart.value,0,7),this.settings.maskLen.value=r.default.clamp(this.settings.maskLen.value,1,8-this.settings.bitStart.value),this.updateMask(),this.onInputUpdated()}updateMask(){this.mask=0;for(let t=0;t<this.settings.maskLen.value;t++)this.mask|=1<<t;this.mask<<=this.settings.bitStart.value}}s.Container.registerNodeType("conversion/bit-mask-multiple",u)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(2),a=i(1);class r extends n.Node{constructor(){super(),this.title="Bit Split",this.description="A node to split an Int (or Int array) into all individual bits\nAssuming all Ints are 8 bits (UINT8)",this.settings.start={description:"Start index if Array",type:n.SettingType.NUMBER,value:0},this.settings.bytes={description:"Bytes to read if Array",type:n.SettingType.NUMBER,value:1},this.addInput("input",a.Type.ANY)}init(){this.setNewOutputs()}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);if(null==t)return;"number"==typeof t&&(t=[t]);const e=this.settings.start.value,i=this.settings.bytes.value;if(!t||!t.length||t.length<i)return;let s=0;for(let n=0;n<i;n++)for(let i=0;i<8;i++)this.setOutputData(s++,t[e+n]>>i&1)}onAfterSettingsChange(){this.setNewOutputs(),this.onInputUpdated()}setNewOutputs(){let t=this.getOutputsCount();for(let e=0;e<t;e++)this.removeOutput(e);t=8*this.settings.bytes.value;for(let e=0;e<t;e++)this.addOutput(e.toString(),a.Type.NUMBER);this.updateNodeOutput(),this.onInputUpdated()}}s.Container.registerNodeType("conversion/int-to-bits",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(2),a=i(1);class r extends n.Node{constructor(){super(),this.title="Bool-to-Int Conversion",this.description="This node converts a Boolean to a Number.",this.addInput("input",a.Type.BOOLEAN),this.addOutput("output",a.Type.NUMBER)}onInputUpdated(){this.setOutputData(0,this.inputs[0].data?1:0)}}s.Container.registerNodeType("conversion/bool-to-int",r);class o extends n.Node{constructor(){super(),this.title="Int-to-Bool Conversion",this.description="This node converts a Number to a Boolean.",this.addInput("input",a.Type.NUMBER),this.addOutput("output",a.Type.BOOLEAN)}onInputUpdated(){this.setOutputData(0,!!this.inputs[0].data)}}s.Container.registerNodeType("conversion/int-to-bool",o);class u extends n.Node{constructor(){super(),this.title="String-to-Bool Conversion",this.description="This node converts a Number to a Boolean.",this.addInput("input",a.Type.STRING),this.addOutput("output",a.Type.BOOLEAN)}onInputUpdated(){const t=this.getInputData(0);"0"===t||"false"===t?this.setOutputData(0,!1,!0):"1"!==t&&"true"!==t||this.setOutputData(0,!0,!0)}}s.Container.registerNodeType("conversion/string-to-bool",u)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(1),a=i(0);class r extends s.Node{constructor(){super(),this.title="Buffer to hex string",this.description="",this.addInput("input",n.Type.ANY),this.addOutput("output",n.Type.STRING)}onInputUpdated(){let t=this.getInputData(0);if(!t||!Buffer.isBuffer(t))return;let e=t.toString("hex").toUpperCase();this.setOutputData(0,e)}}e.BufferToHexString=r,a.Container.registerNodeType("conversion/buffer-to-hex-string",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(2),a=i(1),r=i(44);class o extends n.Node{constructor(){super(),this.value=null,this.title="Byte Array To Int",this.description="A node to convert an 4 and 8 (long) byte array to an int with Big-endian And Little-endian format. Example [0,0,0,5,11,88,37,12] = 190326028",this.addInput("in 1",a.Type.ANY),this.addOutput("out",a.Type.JSON),this.addOutput("out buffer",a.Type.JSON),this.settings.dataType={description:"Set data type",type:n.SettingType.DROPDOWN,config:{items:[{value:0,text:"na"},{value:1,text:"INT-16"},{value:2,text:"UINT-16"},{value:3,text:"INT-32"},{value:4,text:"UINT-32"},{value:5,text:"FLOAT-32"},{value:8,text:"DOUBLE-64"}]},value:0},this.settings.dataEndian={description:"Set byte order",type:n.SettingType.DROPDOWN,config:{items:[{value:0,text:"LE-Byte BE-Word"},{value:1,text:"LE-Byte LE-Word"},{value:2,text:"BE-Byte LE-Word"},{value:3,text:"BE-Byte BE-Word"}]},value:0}}onAdded(){this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(0);try{const e=Buffer.from(t),i=this.settings.dataEndian.value,s=this.settings.dataType.value,n=r.default.readByteOrder(e,0,s,i);this.setOutputData(0,JSON.stringify(n)),this.setOutputData(1,JSON.stringify(e))}catch(t){}}onAfterSettingsChange(){this.onInputUpdated()}}s.Container.registerNodeType("conversion/buffer-array-to-int",o)},function(t,e,i){"use strict";var s=this&&this.__rest||function(t,e){var i={};for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&e.indexOf(s)<0&&(i[s]=t[s]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var n=0;for(s=Object.getOwnPropertySymbols(t);n<s.length;n++)e.indexOf(s[n])<0&&Object.prototype.propertyIsEnumerable.call(t,s[n])&&(i[s[n]]=t[s[n]])}return i};Object.defineProperty(e,"__esModule",{value:!0});const n=i(2),a=i(0),r=i(163),o=i(13);class u extends n.Node{constructor(){super(),this.title="Unit converter",this.description="This node converts units.",this.addInput("in"),this.addOutput("converted"),this.settings["from-to"]={description:"From / To unit",type:n.SettingType.TREE_SELECT,config:{items:[]}},this.ensureFromToConfig()}onAdded(){this.updateTitle(),this.ensureFromToConfig()}ensureFromToConfig(){o.get(this,"settings['from-to'].config.items.length",0)||(this.settings["from-to"].config={items:this.createTreeSelectItems()}),this.settings["from-to"].toJSON=function(){const t=Object.assign({},this),{config:e=null}=t;return s(t,["config"])}}createTreeSelectItems(){const t=t=>({value:t,text:t});return r().measures().map(e=>({text:e,items:r().possibilities(e).map(t)})).map(t=>{return Object.assign(Object.assign({},t),{items:t.items.map((e=t.text,i=t.items,t=>Object.assign(Object.assign({},t),{items:i.map(i=>Object.assign(Object.assign({},i),{value:{type:e,from:t.value,to:i.value}}))})))});var e,i})}onInputUpdated(){if(!this.settings["from-to"].value)return;const{from:t,to:e}=this.settings["from-to"].value,i=parseFloat(this.inputs[0].data);this.setOutputData(0,r(i).from(t).to(e))}onAfterSettingsChange(){this.ensureFromToConfig(),this.onInputUpdated(),this.updateTitle()}updateTitle(){if(!this.settings["from-to"].value)return;const{from:t,to:e}=this.settings["from-to"].value;this.title="Unit converter ("+t+"/"+e+")"}}a.Container.registerNodeType("conversion/convert-units",u)},function(t,e){t.exports=require("convert-units")},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(1),a=i(0);class r extends s.Node{constructor(){super(),this.title="Hex string to Buffer",this.description="",this.addInput("input",n.Type.STRING),this.addOutput("output",n.Type.ANY)}onInputUpdated(){let t=this.getInputData(0);if(!t)return;let e=Buffer.from(t,"hex");this.setOutputData(0,e)}}e.HexStringToBuffer=r,a.Container.registerNodeType("conversion/hex-string-to-buffer",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(2),a=i(1),r=i(44);class o extends n.Node{constructor(){super(),this.title="Int to Buffer",this.description="A node to convert an int to a buffer array to an int with Big-endian And Little-endian format. This node is used for testing data types",this.addInput("in 1",a.Type.ANY),this.addOutput("out",a.Type.JSON),this.addOutput("out data",a.Type.JSON),this.settings.dataType={description:"Set data type",type:n.SettingType.DROPDOWN,config:{items:[{value:0,text:"na"},{value:1,text:"INT-16"},{value:2,text:"UINT-16"},{value:3,text:"INT-32"},{value:4,text:"UINT-32"},{value:5,text:"FLOAT-32"},{value:8,text:"DOUBLE-64"}]},value:0},this.settings.dataEndian={description:"Set byte order",type:n.SettingType.DROPDOWN,config:{items:[{value:0,text:"LE-Byte BE-Word"},{value:1,text:"LE-Byte LE-Word"},{value:2,text:"BE-Byte LE-Word"},{value:3,text:"BE-Byte BE-Word"}]},value:0}}onAdded(){this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(0),e=this.settings.dataEndian.value,i=this.settings.dataType.value,s=r.default.writeValue(t,i,e);this.setOutputData(0,JSON.stringify(s)),this.setOutputData(1,JSON.parse(JSON.stringify(s)).data)}onAfterSettingsChange(){this.onInputUpdated()}}s.Container.registerNodeType("conversion/int-to-buffer",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(4),r=i(1);class o extends s.Node{constructor(){super(),this.title="Any Event Counter",this.description="‘count' increases by 1 every time an event occurs at 'input'. Any incoming value, including null, will be taken. 'count' will be reset to 0 when 'reset' transitions from 'false' to 'true.  ‘toggle’ will alternate between ‘true’ and ‘false’, changing each time count increases. ",this.addInput("input"),this.addInput("reset",r.Type.BOOLEAN),this.addOutput("count",r.Type.NUMBER),this.addOutput("toggle",r.Type.NUMBER),this.setOutputData(0,0),this.setOutputData(1,!1),this.settings.null={description:"Stop count if input is null",value:!1,type:s.SettingType.BOOLEAN},this.properties.count=0}onAdded(){this.onInputUpdated()}onInputUpdated(){const t=this.inputs[0].updated,e=this.inputs[0].data,i=this.inputs[1].data;i&&1==i&&(this.properties.count=0),this.settings.null.value&&this.isNull(e)||(t&&(this.properties.count++,this.setOutputData(1,!this.outputs[1].data)),this.properties.count!==e&&(this.setOutputData(0,this.properties.count),this.persistProperties(!1,!0)))}isNull(t){return a.isNull(t)}}n.Container.registerNodeType("count/any-event-counter",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Counter",this.description="'count' increases by 1 every time 'countUp' transitions from 'false' to 'true.  'count' decreases by 1 every time 'countDown' transitions from 'false' to 'true.  'count' will be set to 'set value' when 'reset' transitions from 'false' to 'true.",this.addInputWithSettings("set value",a.Type.NUMBER,0,"Set Value"),this.addInput("count up",a.Type.BOOLEAN),this.addInput("count down",a.Type.BOOLEAN),this.addInput("reset",a.Type.BOOLEAN),this.addOutput("count",a.Type.NUMBER),this.properties.pointVal=0}onCreated(){this.setOutputData(1,!1),this.setOutputData(2,!1),this.lastUp=!1,this.lastDown=!1,this.lastReset=!1}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){const t=this.outputs[0].data,e=this.getInputData(1)||!1,i=this.getInputData(2)||!1,s=this.getInputData(3)||!1;this.inputs[1].updated&&e&&!this.lastUp&&this.properties.pointVal++,this.lastUp=e,this.inputs[2].updated&&i&&!this.lastDown&&this.properties.pointVal--,this.lastDown=i;const n=this.getInputData(0);this.inputs[3].updated&&s&&!this.lastReset&&(this.properties.pointVal=n),this.lastReset=s,this.properties.pointVal!==t&&(this.setOutputData(0,this.properties.pointVal),this.properties.pointVal=this.properties.pointVal,this.persistProperties(!1,!0)),this.setOutputData(0,this.outputs[0].data)}}n.Container.registerNodeType("count/counter",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Triggered Ramp",this.description="'output' changes on every time 'trigger' transitions from 'false' to 'true'. If 'count on true->false?' setting is enabled, 'output' will also change on 'false' to 'true' transition.   'output' will change by the 'step' value on each change (if a full 'step' would cause the output to be greater than 'max', or less than 'min' it will be limited by 'max' or 'min' respectively).  'output' will first ramp up to 'max' then it will change directions and ramp down to 'min'.  'output' will be reset to 'min' when 'reset' transitions from 'false' to 'true. ",this.addInput("trigger",a.Type.BOOLEAN),this.addInputWithSettings("min",a.Type.NUMBER,0,"min",!1),this.addInputWithSettings("max",a.Type.NUMBER,10,"max",!1),this.addInputWithSettings("step",a.Type.NUMBER,1,"Step Size",!1),this.addInput("reset",a.Type.BOOLEAN),this.addOutput("output",a.Type.NUMBER),this.settings.countOnFalse={description:"Also count on true->false?",value:!1,type:s.SettingType.BOOLEAN},this.countUp=!1,this.lastTrigger=!1,this.lastReset=!1,this.currentVal=0,this.settings.rampUpOnly={description:"Ramp Up Only",value:!1,type:s.SettingType.BOOLEAN}}onAdded(){this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(1),e=this.getInputData(2);this.currentVal=Number(this.currentVal),this.currentVal<t?this.currentVal=t:this.currentVal>e&&(this.currentVal=e);const i=this.getInputData(4);i&&!this.lastReset&&(this.currentVal=t),this.lastReset=i;const s=this.getInputData(0);if(s!=this.lastTrigger){if(this.settings.countOnFalse.value||s){const i=this.getInputData(3);this.countUp&&this.currentVal+i>e?this.settings.rampUpOnly.value?(this.countUp=!0,this.currentVal=t-i):this.countUp=!1:!this.countUp&&this.currentVal-i<t&&(this.countUp=!0),this.countUp?this.currentVal+=i:this.currentVal-=i}this.lastTrigger=s}this.setOutputData(0,this.currentVal,!0)}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("count/triggered-ramp",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(5);class o extends s.Node{constructor(){super(),this.title="Interval Ramp",this.description="‘output' changes at every 'interval' period, while 'enable' is set to 'true'. 'output' will change by the 'step' value on each change (if a full 'step' would cause the output to be greater than 'max', or less than 'min' it will be limited by 'max' or 'min' respectively). 'output' will first ramp up to 'max' then it will change directions and ramp down to 'min'. 'output' will be reset to 'min' when 'reset' transitions from 'false' to 'true. If ‘Ramp Up Only’ setting is ticked, the ramp down stage will be bypassed and ‘output’ will be reset back to ‘min’ value when it reaches the ‘max’ value. 'interval’ units can be configured from settings.  Maximum ‘interval’ setting is 587 hours.",this.addInputWithSettings("enable",a.Type.BOOLEAN,0,"Enable",!1),this.addInputWithSettings("min",a.Type.NUMBER,0,"min",!1),this.addInputWithSettings("max",a.Type.NUMBER,10,"max",!1),this.addInputWithSettings("step",a.Type.NUMBER,1,"Step Size",!1),this.addInputWithSettings("interval",a.Type.NUMBER,1,"Count Interval",!1),this.addInput("reset",a.Type.BOOLEAN),this.addOutput("out",a.Type.NUMBER),this.settings.time={description:"Units",type:s.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"seconds"},this.setSettingsConfig({groups:[{interval:{weight:2},time:{}}]}),this.settings.rampUpOnly={description:"Ramp Up Only",value:!1,type:s.SettingType.BOOLEAN},this.countUp=!0,this.lastInterval=1e3,this.lastReset=!1,this.lastEnable=!0,this.currentVal=0}onAdded(){this.timeoutFunc=setInterval(()=>{const t=this.getInputData(1),e=this.getInputData(2);this.count(t,e),this.setOutputData(0,this.currentVal,!0)},this.lastInterval),this.inputs[4].name=`[interval] (${this.settings.time.value})`}onInputUpdated(){const t=this.getInputData(1),e=this.getInputData(2);this.currentVal=Number(this.currentVal),this.currentVal<t?this.currentVal=t:this.currentVal>e&&(this.currentVal=e);const i=Boolean(this.getInputData(5));i&&!this.lastReset&&(this.currentVal=t),this.countUp=!0,this.lastReset=i;let s=this.getInputData(4);s=r.default.timeConvert(s,this.settings.time.value);const n=this.getInputData(0);n&&!this.lastEnable?this.timeoutFunc=setInterval(()=>{this.count(t,e),this.setOutputData(0,this.currentVal,!0)},s):!n&&this.lastEnable?(clearInterval(this.timeoutFunc),this.setOutputData(0,null)):n&&this.lastEnable&&s!==this.lastInterval&&(clearInterval(this.timeoutFunc),this.timeoutFunc=setInterval(()=>{this.count(t,e),this.setOutputData(0,this.currentVal,!0)},s)),this.lastInterval=s,this.lastEnable=n}count(t,e){const i=this.getInputData(3);this.countUp&&this.currentVal+i>e?this.settings.rampUpOnly.value?(this.countUp=!0,this.currentVal=t-i):this.countUp=!1:!this.countUp&&this.currentVal-i<t&&(this.countUp=!0),this.countUp?this.currentVal+=i:this.currentVal-=i}onAfterSettingsChange(){this.inputs[4].name=`[interval] (${this.settings.time.value})`,this.onInputUpdated()}}n.Container.registerNodeType("count/interval-ramp",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(5);class o extends s.Node{constructor(){super(),this.title="Waveform",this.description="This node generates a sequence of numbers based on the selected settings; these sequences (waveforms) are of the form 'Ramp', 'Sine', 'Square', 'Triangle', and 'Sawtooth'. While 'enable' is 'true', 'output' will produce the next number in the sequence after every 'interval' duration. The period (how often the waveform pattern repeats) is defined by 'period'. The amplitude of the waveform is defined by 'amplitude'. The waveform can be inverted by setting 'Invert Output' to 'true' in settings. The waveform will reset to its starting position if 'reset' transitions from 'false' to 'true'.  'interval' and ‘period’ units can be configured from settings.  Maximum 'interval' and ‘period’ setting is 587 hours.",this.addInputWithSettings("enable",a.Type.BOOLEAN,0,"min",!1),this.settings.signalType={description:"Signal Type",type:s.SettingType.DROPDOWN,config:{items:[{value:"Ramp",text:"Ramp"},{value:"Sine",text:"Sine"},{value:"Square",text:"Square"},{value:"Triangle",text:"Triangle"},{value:"Sawtooth",text:"Sawtooth"}]},value:"Ramp"},this.addInputWithSettings("interval",a.Type.NUMBER,1,"Interval",!1),this.addInputWithSettings("period",a.Type.NUMBER,10,"Period",!1),this.addInputWithSettings("amplitude",a.Type.NUMBER,1,"Amplitude",!1),this.addInput("reset",a.Type.BOOLEAN),this.addOutput("output",a.Type.BOOLEAN),this.settings.intervalTime={description:"Units",type:s.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"seconds"},this.settings.periodTime={description:"Units",type:s.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"seconds"},this.setSettingsConfig({groups:[{interval:{weight:2},intervalTime:{}},{period:{weight:2},periodTime:{}},{amplitude:{}}]}),this.settings.enable={description:"Enable",value:!0,type:s.SettingType.BOOLEAN},this.settings.invert={description:"Invert Output",value:!1,type:s.SettingType.BOOLEAN},this.lastReset=!1,this.startTime=Date.now()}onAdded(){this.updateTitle(),this.inputs[1].name=`[interval] (${this.settings.intervalTime.value})`,this.inputs[2].name=`[period] (${this.settings.periodTime.value})`,this.onInputUpdated()}onExecute(){if(!this.getInputData(0))return;let t=this.getInputData(1);t=r.default.timeConvert(t,this.settings.intervalTime.value);const e=Date.now();this.lastTime||(this.lastTime=e),e-this.lastTime>=t&&this.recalculate()}onInputUpdated(){const t=this.getInputData(4);t&&!this.lastReset&&(this.setOutputData(0,0,!1),this.startTime=Date.now()),this.lastReset=t,this.getInputData(0)&&this.recalculate()}recalculate(){const t=Date.now(),e=this.settings.signalType.value||"Ramp";let i=this.getInputData(2);i=r.default.timeConvert(i,this.settings.periodTime.value)/1e3;const s=this.getInputData(3),n=this.settings.invert.value?-1:1;let a=(t-this.startTime)/1e3%i/i,o=0;switch(e){case"Sine":o=Math.sin(2*Math.PI*a);break;case"Square":o=Math.sign(Math.sin(2*Math.PI*a)),-1===o&&(o=0);break;case"Triangle":o=1-4*Math.abs(Math.round(a-.25)-(a-.25));break;case"Sawtooth":o=a;break;case"Ramp":o=2*Math.abs(Math.round(a)-a)}o*=n*s,this.lastTime=t,this.setOutputData(0,o)}onAfterSettingsChange(){this.updateTitle(),this.inputs[1].name=`[interval] (${this.settings.intervalTime.value})`,this.inputs[2].name=`[period] (${this.settings.periodTime.value})`}updateTitle(){if(!this.settings.signalType.value)return;const t=this.settings.signalType.value;this.title="Waveform ("+t+")"}}n.Container.registerNodeType("count/waveform",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);i(12);class r extends s.Node{constructor(){super(),this.obj=[],this.title="CSV Merge Rows",this.description="This node merges the rows of properly formatted CSV strings.  ‘merge’ CSV string will be joined with the ‘original’ CSV string.  The ‘merge’ CSV rows will be added below the ‘original’ CSV rows.  Only the ‘original’ header titles will be kept.  No error checking.",this.addInput("original",a.Type.STRING),this.addInput("merge",a.Type.STRING),this.addOutput("output",a.Type.STRING)}onAdded(){this.setOutputData(0,""),this.onInputUpdated()}onInputUpdated(){if(this.side!==n.Side.server)return;if(!this.getInputData(0)||!this.getInputData(1))return;let t=this.getInputData(0).slice(0,this.getInputData(0).length-1),e=this.getInputData(1);e=e.slice(e.indexOf("\n"),e.length-1),t+=e,this.setOutputData(0,t)}}n.Container.registerNodeType("csv/csv-merge-rows",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);i(12);class r extends s.Node{constructor(){super(),this.obj=[],this.title="CSV Merge Columns",this.description="This node merges the columns of properly formatted CSV strings.  ‘merge’ CSV string will be joined with the ‘original’ CSV string.  The ‘merge’ CSV columns will be added to the right of the ‘original’ CSV columns.  ‘null’ will be added to rows where no value exists for that column.  No error checking.",this.addInput("original",a.Type.STRING),this.addInput("merge",a.Type.STRING),this.addOutput("output",a.Type.STRING)}onAdded(){this.setOutputData(0,""),this.onInputUpdated()}onInputUpdated(){if(this.side!==n.Side.server)return;if(!this.getInputData(0)||!this.getInputData(1))return;let t=this.getInputData(0).split("\n"),e=this.getInputData(1).split("\n"),i="";const s=t[0].split(",").length,a=e[0].split(",").length;var r=0;for(r=0;r<Math.min(e.length,t.length)-1;r++)i+=t[r]+", "+e[r]+"\n";for(var o=0;r<t.length-1;){for(i+=t[r],o=s;o<s+a;)i+=", ",o++;i+="\n",r++}for(;r<e.length-1;){for(o=a;o<s+a;)i+=", ",o++;i+=e[r],i+="\n",r++}this.setOutputData(0,i)}}n.Container.registerNodeType("csv/csv-merge-columns",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(174);class a extends n.BaseFunctionNode{constructor(){super("Function",'Evaluates a code block upon message reception. The incoming value is accessible through the variable named "message". The "return" value will be emitted through the outlet. Null values are ignored.'),this.mixinScriptSetting("// message is the received value\nreturn message;")}getScriptInput(){return this.getInputData(0)}}e.FunctionNode=a,s.Container.registerNodeType("custom-function/function",a)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(175),n=i(4),a=i(0),r=i(2);class o extends r.Node{constructor(t,e){super(),this.title=t,this.description=e,this.addInput("message"),this.addOutput("output"),this.addOutput("error")}onCreated(){}onAdded(){}onInputUpdated(){try{this.executeConfiguredScript(this.getScriptInput()).then(t=>this.emitResult(t)).catch(t=>this.emitError(t))}catch(t){this.emitError(t)}}onAfterSettingsChange(){this.onInputUpdated()}executeConfiguredScript(...t){const e=this.settings.script.value;if(this.side!==a.Side.server||n.isEmpty(e))return;let i=new s.NodeVM({timeout:1e3,sandbox:{}}).run(`module.exports = function(message, ...args) {\n${e}\n};`);return Promise.resolve(i(...t))}emitResult(t){this.setOutputData(0,t),this.setOutputData(1,null)}emitError(t){this.setOutputData(0,null),this.debugErr(`Error when executing function node ${t.stack}`),this.setOutputData(1,t)}mixinScriptSetting(t){this.settings.script={description:"Function Code",value:t,type:r.SettingType.CODE_AREA}}}e.BaseFunctionNode=o},function(t,e){t.exports=require("vm2")},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(16),n=i(0),a=i(3);class r extends s.UiNode{constructor(t,e,i){super("Label","UiLabelNode",i),this.description="Dashboard node which displays inputed values on the dashboard.",this.title="Label",this.addInput("input"),this.UPDATE_INPUTS_INTERVAL=100}onInputUpdated(){const t=a.default.formatValue(this.getInputData(0));this.setState(t),this.isRecentlyActive=!0}}e.UiLabelNode=r,n.Container.registerNodeType("dashboard/label",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(1),a=i(16),r=i(2);class o extends a.UiNode{constructor(t,e,i){super("Button","UiButtonNode",i),this.interval=null,this.description="Dashboard node which displays a push button on the dashboard.  When clicked it will send 'true' from the node 'output'.",this.title="Button",this.addOutput("output",n.Type.BOOLEAN),this.settings["button-text"]={description:"Button Text",value:"ON",type:r.SettingType.STRING},this.setState({buttonText:"ON"})}onAfterSettingsChange(){this.side,s.Side.server}onRemoved(){super.onRemoved()}onGetMessageToServerSide(){this.setOutputData(0,!0),this.sendIOValuesToEditor()}}e.UiButtonNode=o,s.Container.registerNodeType("dashboard/button",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(1),a=i(16);class r extends a.UiNode{constructor(t,e,i){super("Switch","UiSwitchNode",i),this.description="Dashboard node which displays a toggle switchon the dashboard.  When clicked it will switch the node 'output' between 'true' and 'false'.  The button text can be edited in settings.  The button can be overridden by wiring a Boolean into the node 'input'. ",this.title="Switch",this.setState(!1),this.addInput("input",n.Type.BOOLEAN),this.addOutput("output",n.Type.BOOLEAN)}onAdded(){super.onAdded(),this.side==s.Side.server&&this.setOutputData(0,this.getState())}onGetMessageToServerSide(t){this.setValue(t.state)}onInputUpdated(){let t=this.getInputData(0);this.setValue(t)}setValue(t){this.setOutputData(0,t),this.sendIOValuesToEditor(),this.isRecentlyActive=!0,this.getState()!=t&&this.setState(t)}}e.UiSwitchNode=r,s.Container.registerNodeType("dashboard/switch",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(1),n=i(16),a=i(0);class r extends n.UiNode{constructor(t,e,i){super("Progress","UiProgressNode",i),this.description="Dashboard node which displays 'input' value from 0-100 on a progress bar on the dashboard.",this.title="Progress",this.addInput("input",s.Type.NUMBER),this.UPDATE_INPUTS_INTERVAL=100,this.setState(0)}onInputUpdated(){let t=this.getInputData(0);t>100&&(t=100),t<0&&(t=0),this.setState(t),this.isRecentlyActive=!0}}e.UiProgressNode=r,a.Container.registerNodeType("dashboard/progress",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(1),n=i(16),a=i(0);class r extends n.UiNode{constructor(t,e,i){super("Slider","UiSliderNode",i),this.description="Dashboard node which displays an input slider bar on the dashboard.  The user can move the slider bar knob to adjust the output between 0 and 100.  The slider can be overridden by wiring a Numeric into the node 'input'. ",this.title="Slider",this.addInput("input",s.Type.NUMBER),this.addOutput("output",s.Type.NUMBER),this.UPDATE_INPUTS_INTERVAL=100,this.setState(0)}onAdded(){super.onAdded(),this.side==a.Side.server&&this.setOutputData(0,this.getState())}onGetMessageToServerSide(t){this.setValue(t.state)}onInputUpdated(){let t=this.getInputData(0);this.setValue(t)}setValue(t){t>100&&(t=100),t<0&&(t=0),this.setOutputData(0,t),this.sendIOValuesToEditor(),this.isRecentlyActive=!0,this.getState()!=t&&this.setState(t)}}e.UiSliderNode=r,a.Container.registerNodeType("dashboard/slider",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(1),a=i(16);class r extends a.UiNode{constructor(t,e,i){super("TextBox","UiTextBoxNode",i),this.description="Dashboard node which provides a user input text box on the dashboard.  The entered string is sent from the node 'output'.  The text-box can be overridden by wiring a String into the node 'input'. ",this.title="Text-Box",this.setState(""),this.addInput("input",n.Type.STRING),this.addOutput("output",n.Type.STRING)}onAdded(){super.onAdded(),this.side==s.Side.server&&this.setOutputData(0,this.getState())}onGetMessageToServerSide(t){this.setValue(t.state)}onInputUpdated(){let t=this.getInputData(0);this.setValue(t)}setValue(t){this.setOutputData(0,t),this.sendIOValuesToEditor(),this.isRecentlyActive=!0,this.getState()!=t&&this.setState(t)}}e.UiTextBoxNode=r,s.Container.registerNodeType("dashboard/text-box",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(16),a=i(2);class r extends n.UiNode{constructor(t,e,i){super("Log","UiLogNode",i),this.messagesPerSec=0,this.description="Dashboard node which displays a log of the values wired into 'input', these log entries have timestamps attached.  There is an option in settings to save the log entries to the Wires Database (DB). ",this.title="Log",this.properties.log=[],this.settings.maxRecords={description:"Max Records",value:10,type:a.SettingType.NUMBER},this.settings.maxRecordsPerSec={description:"Max records/sec limit",value:11,type:a.SettingType.NUMBER},this.settings.saveToDb={description:"Save log to DB",value:!1,type:a.SettingType.BOOLEAN},this.addInput("input")}onAdded(){super.onAdded(),this.side==s.Side.server&&this.updateMessPerSec()}onAfterSettingsChange(t){this.side==s.Side.server&&t.maxRecords!=this.settings.maxRecords&&(this.removeOldRecords(),this.sendMessageToDashboardSide({maxRecords:this.settings.maxRecords.value}))}onDbReaded(){let t=[];this.properties.log.forEach(e=>t.unshift(e)),this.properties.log=t}removeOldRecords(){let t=this.properties.log||[],e=this.settings.maxRecords.value,i=t.length-e;t.splice(t.length-i,i)}updateMessPerSec(){setInterval(()=>{if(this.messagesPerSec>this.settings.maxRecordsPerSec.value){let t=this.messagesPerSec-this.settings.maxRecordsPerSec.value,e={date:Date.now(),value:"Dropped "+t+" records (rec/sec limit)"};this.properties.log.unshift(e),this.sendMessageToDashboardSide({record:e})}this.messagesPerSec=0},1e3)}onInputUpdated(){if(!this.inputs[0].link)return;let t=this.getInputData(0);if(this.isRecentlyActive=!0,this.messagesPerSec++,this.messagesPerSec<=this.settings.maxRecordsPerSec.value){let e={date:Date.now(),value:t};this.properties.log&&this.properties.log.unshift(e),this.removeOldRecords(),this.sendMessageToDashboardSide({record:e});let i=this.settings.maxRecords.value;this.container.db&&this.settings.saveToDb.value&&this.container.db.updateNode(this.id,this.container.id,{$push:{"properties.log":{$each:[e],$slice:-i}}})}}onGetMessageToServerSide(t){"getLog"==t?this.sendMessageToDashboardSide({log:this.properties.log,maxRecords:this.settings.maxRecords.value}):"clearLog"==t&&(this.isRecentlyActive=!0,this.properties.log=[],this.sendMessageToDashboardSide({log:[]}),this.container.db&&this.container.db.updateNode(this.id,this.container.id,{$unset:{"properties.log":!0}}))}}e.UiLogNode=r,s.Container.registerNodeType("dashboard/log",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(16);class r extends a.UiNode{constructor(t,e,i){super("Chart","UiChartNode",i),this.UPDATE_INPUTS_INTERVAL=100,this.title="Button",this.description="Dashboard node which displays a chart of the values wired into 'input'.  Chart properties and types can be modified in settings.  There is an option in settings to save the chart entries to the Wires Database (DB). ",this.properties.log=[],this.settings.maxRecords={description:"Max Records",value:100,type:s.SettingType.NUMBER},this.settings.saveToDb={description:"Save data to DB",value:!1,type:s.SettingType.BOOLEAN},this.settings.style={description:"Style",value:"bars",type:s.SettingType.STRING},this.settings.autoscroll={description:"Auto scroll",value:"continuous",type:s.SettingType.STRING},this.addInput("input")}onInputUpdated(){let t=this.getInputData(0),e=this.properties.log,i={x:Date.now(),y:t};e.push(i);let s=this.settings.maxRecords.value;e.splice(0,e.length-s),this.sendMessageToDashboardSide({record:i}),this.container.db&&this.settings.saveToDb.value&&this.container.db.updateNode(this.id,this.container.id,{$push:{"properties.log":{$each:[i],$slice:-s}}})}onGetMessageToServerSide(t){"clear"==t&&(this.isRecentlyActive=!0,this.properties.log=[],this.sendMessageToDashboardSide({log:[]}),this.container.db&&this.settings.saveToDb.value&&this.container.db.updateNode(this.id,this.container.id,{$unset:{"properties.log":!0}})),t.style&&(this.settings.style.value=t.style,this.sendMessageToDashboardSide({style:t.style})),"getLog"==t&&this.sendMessageToDashboardSide({log:this.properties.log,maxRecords:this.settings.maxRecords.value})}}e.UiChartNode=r,n.Container.registerNodeType("dashboard/chart",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(7).create("node",{color:5});class o extends s.Node{constructor(){super(),this.MAX_MESS_PER_SEC=11,this.messagesPerSec=0,this.title="Console",this.description="Show value inside the console",this.addInput("input",a.Type.ANY)}onAdded(){this.side==n.Side.server&&this.updateMessPerSec()}updateMessPerSec(){let t=this;this.timer=setInterval((function(){if(t.messagesPerSec>t.MAX_MESS_PER_SEC){let e=t.messagesPerSec-t.MAX_MESS_PER_SEC;r.info("CONSOLE NODE ["+t.container.id+"/"+t.id+"]: dropped "+e+" messages (data rate limitation)"),t.sendMessageToEditorSide({dropped:e})}t.messagesPerSec=0}),1e3)}onInputUpdated(){if(!this.inputs[0].link)return;let t=this.getInputData(0);this.isRecentlyActive=!0,this.messagesPerSec++,this.messagesPerSec<=this.MAX_MESS_PER_SEC&&(r.info("CONSOLE NODE ["+this.container.id+"/"+this.id+"]: "+t),this.sendMessageToEditorSide({value:t}))}onRemoved(){this.timer&&clearInterval(this.timer)}onGetMessageToEditorSide(t){null!=t.value&&r.info("CONSOLE NODE ["+this.container.id+"/"+this.id+"]: "+t.value),t.dropped&&r.info("CONSOLE NODE ["+this.container.id+"/"+this.id+"]: dropped "+t.dropped+" messages (data rate limitation)")}}e.ConsoleNode=o,n.Container.registerNodeType("debug/console",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2);class n extends s.Node{constructor(){super(),this.title="Comments",this.description="This node is simply for adding some code comments"}onAdded(){this.nodeColour()}nodeColour(){this.setNodeState(s.NodeState.INFO)}}i(0).Container.registerNodeType("debug/comments",n)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.dataUpdated=!1,this.UPDATE_INTERVAL=300,this.title="Watch",this.description="Show value of input",this.addInput("input",a.Type.ANY)}onAdded(){this.side==n.Side.server&&this.startSending()}startSending(){let t=this;this.timer=setInterval((function(){t.dataUpdated&&(t.dataUpdated=!1,t.sendMessageToEditorSide({value:t.lastData}))}),this.UPDATE_INTERVAL)}onInputUpdated(){this.lastData=this.getInputData(0),this.dataUpdated=!0}onRemoved(){this.timer&&clearInterval(this.timer)}onGetMessageToEditorSide(t){this.lastData=t.value,this.showValueOnInput(t.value)}showValueOnInput(t){this.inputs[0].label=t,this.setDirtyCanvas(!0,!1)}updateInputsLabels(){this.showValueOnInput(this.lastData)}}e.WatchNode=r,n.Container.registerNodeType("debug/watch",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(2),a=i(1);class r extends n.Node{constructor(){super(),this.title="Link Error Check",this.description="This node is designed to check that links have the same value on both ends",this.addInput("trigger",a.Type.BOOLEAN),this.addOutput("errorsCount",a.Type.NUMBER),this.addOutput("errorsJSON",a.Type.STRING),this.settings.allContainer={description:"Search All Containers?",value:!0,type:n.SettingType.BOOLEAN},this.settings.subContainers={description:"Search Sub-Containers?",value:!0,type:n.SettingType.BOOLEAN},this.setSettingsConfig({groups:[],conditions:{subContainers:t=>!t.allContainer.value}})}init(){}onCreated(){this.properties.errors={},this.properties.errorsCount=0,this.lastTrigger=!1,this.setOutputData(0,null),this.setOutputData(1,null),this.setOutputData(2,null)}onAdded(){}onInputUpdated(){let t=this.getInputData(0);if(t&&!this.lastTrigger){this.properties.errors={},this.properties.errorsCount=0;const t=this.settings.allContainer.value?s.Container.containers[0]:s.Container.containers[`${this.cid}`],e=!!this.settings.allContainer.value||this.settings.subContainers.value;this.checkLinksForInputOutputData(t,e)}this.lastTrigger=t}onAfterSettingsChange(){}checkLinksForInputOutputData(t,e=!1,i=!0){const n=t.id;let a=[],r=0;const o=t.getAllNodes(),u=o.length;for(let e=0;e<u;e++){if(console.log(e,o[e]),o[e].isContainer){a.push(o[e].id);continue}const i=t.getNodeById(Number(o[e].id));if(!i.hasOwnProperty("outputs"))continue;let s=i.outputs,u=[];for(const t in s)if(null!=s[t].links){console.log("links",t,s[t].links);let e=[];s[t].links.forEach(t=>{e.push(t)}),u.push([t,s[t].data,e])}console.log("outputLinks",u),u.forEach(s=>{console.log("linkInfo",s),s[2].forEach(a=>{try{let u=!1;const d=t.getNodeById(a.target_node_id);console.log("receiver.inputs",d.inputs),d.inputs[a.target_slot].data!=s[1]&&(console.log("LINK ERROR: output data does not match input data."),u=!0),d.inputs[a.target_slot].link.target_slot!=s[0]&&d.inputs[a.target_slot].link.target_node_id!=o[e].id&&(console.log("LINK ERROR: output link reference does not match input link reference."),u=!0),u&&(r++,console.log("ERROR"),this.properties.errors.hasOwnProperty(n)||(this.properties.errors[n]={containerName:t.name,containerErrors:{}}),this.properties.errors[n].containerErrors.hasOwnProperty(o[e].id)||(this.properties.errors[n].containerErrors[o[e].id]={nodeName:o[e].name,nodeErrors:{}}),this.properties.errors[n].containerErrors[o[e].id].nodeErrors[s[0]]={outputName:i.outputs[s[0]].name,outputNum:s[0],inputNode:d.id,inputNodeName:d.name,inputNodeSlot:d.inputs[a.target_slot].link.target_slot})}catch(i){r++,console.log("UNKNOWN ERROR"),this.properties.errors.hasOwnProperty(n)||(this.properties.errors[n]={containerName:t.name,containerErrors:{}}),this.properties.errors[n].containerErrors.hasOwnProperty(o[e].id)||(this.properties.errors[n].containerErrors[o[e].id]={nodeName:o[e].name,nodeErrors:{}})}})})}this.properties.errorsCount+=r,this.properties.errors.hasOwnProperty(n)&&(this.properties.errors[n].errorsCount=r),e&&a.forEach(t=>{this.checkLinksForInputOutputData(s.Container.containers[t],e,!1)}),i&&(this.setOutputData(0,this.properties.errorsCount),this.properties.errors.totalErrors=this.properties.errorsCount,this.setOutputData(1,JSON.stringify(this.properties.errors)))}}e.LinkErrorCheckNode=r,s.Container.registerNodeType("error/link-check",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(2),a=i(1);class r extends n.Node{constructor(){super(),this.title="Output Error Check",this.description="This node is designed to check that outputs have a 'data' value",this.addInput("trigger",a.Type.BOOLEAN),this.addOutput("errorsCount",a.Type.NUMBER),this.addOutput("errorsJSON",a.Type.STRING),this.settings.allContainer={description:"Search All Containers?",value:!0,type:n.SettingType.BOOLEAN},this.settings.subContainers={description:"Search Sub-Containers?",value:!0,type:n.SettingType.BOOLEAN},this.setSettingsConfig({groups:[],conditions:{subContainers:t=>!t.allContainer.value}})}init(){}onCreated(){this.properties.errors={},this.properties.errorsCount=0,this.lastTrigger=!1,this.setOutputData(0,null),this.setOutputData(1,null)}onAdded(){}onInputUpdated(){let t=this.getInputData(0);if(t&&!this.lastTrigger){this.properties.errors={},this.properties.errorsCount=0;const t=this.settings.allContainer.value?s.Container.containers[0]:s.Container.containers[`${this.cid}`],e=!!this.settings.allContainer.value||this.settings.subContainers.value;this.checkForOutputsWithNoData(t,e)}this.lastTrigger=t}onAfterSettingsChange(){}checkForOutputsWithNoData(t,e=!1,i=!0){const n=t.id;let a=[],r=0;const o=t.getAllNodes(),u=o.length;for(let e=0;e<u;e++){if(o[e].isContainer){a.push(o[e].id);continue}const i=t.getNodeById(Number(o[e].id)).outputs;for(const s in i)i[s].hasOwnProperty("data")&&void 0!==i[s].data||(r++,this.properties.errors.hasOwnProperty(n)||(this.properties.errors[n]={containerName:t.name,containerErrors:{}}),this.properties.errors[n].containerErrors.hasOwnProperty(o[e].id)||(this.properties.errors[n].containerErrors[o[e].id]={nodeName:o[e].name,nodeErrors:{}}),this.properties.errors[n].containerErrors[o[e].id].nodeErrors[s]={outputName:i[s].name,outputNum:s})}this.properties.errorsCount+=r,this.properties.errors.hasOwnProperty(n)&&(this.properties.errors[n].errorsCount=r),e&&a.forEach(t=>{this.checkForOutputsWithNoData(s.Container.containers[t],e,!1)}),i&&(this.setOutputData(0,this.properties.errorsCount),this.properties.errors.totalErrors=this.properties.errorsCount,this.setOutputData(1,JSON.stringify(this.properties.errors)))}}e.OutputErrorCheckNode=r,s.Container.registerNodeType("error/output-check",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Only True",this.description="This node filters 'input' values.  Only 'true' values are passed to 'output'.",this.addInput("input",a.Type.BOOLEAN),this.addOutput("output",a.Type.BOOLEAN)}onAdded(){this.onInputUpdated()}onInputUpdated(){!0===this.getInputData(0)&&this.setOutputData(0,!0)}}n.Container.registerNodeType("filter/only-true",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Only False",this.description="This node filters 'input' values.  Only 'false' values are passed to 'output'.",this.addInput("input",a.Type.BOOLEAN),this.addOutput("output",a.Type.BOOLEAN)}onAdded(){this.onInputUpdated()}onInputUpdated(){!1===this.getInputData(0)&&this.setOutputData(0,!1)}}n.Container.registerNodeType("filter/only-false",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Only Between",this.description="This node filters 'input' values.  Only Numeric 'input' values between 'min' and 'max' are passed to 'output'.",this.addInput("value",a.Type.NUMBER),this.addInputWithSettings("min",a.Type.NUMBER,0,"min",!1),this.addInputWithSettings("max",a.Type.NUMBER,10,"max",!1),this.addOutput("value",a.Type.NUMBER),this.properties.value}onAdded(){this.setOutputData(0,this.properties.value),this.onInputUpdated()}onAfterSettingsChange(){this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(0),e=this.getInputData(1),i=this.getInputData(2);null==t||null==e||null==i?this.setOutputData(0,null):t>=e&&t<=i&&(this.setOutputData(0,t),this.properties.value=t,this.persistProperties(!1,!0))}}n.Container.registerNodeType("filter/only-between",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Only Greater",this.description="This node filters 'input' values.  Only Numeric 'input' values greater than 'threshold' are passed to 'output'.",this.addInput("input",a.Type.NUMBER),this.addInputWithSettings("threshold",a.Type.NUMBER,0,"threshold",!1),this.addOutput("output",a.Type.NUMBER),this.properties.value}onAdded(){this.setOutputData(0,this.properties.value),this.onInputUpdated()}onAfterSettingsChange(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0),e=this.getInputData(1);null==t||null==e?this.setOutputData(0,null):t>e&&(this.setOutputData(0,t),this.properties.value=t,this.persistProperties(!1,!0))}}n.Container.registerNodeType("filter/only-greater",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Only Lower",this.description="This node filters 'input' values.  Only Numeric 'input' values less than 'threshold' are passed to 'output'.",this.addInput("input",a.Type.NUMBER),this.addInputWithSettings("threshold",a.Type.NUMBER,0,"threshold",!1),this.addOutput("output",a.Type.NUMBER),this.properties.value}onAdded(){this.setOutputData(0,this.properties.value),this.onInputUpdated()}onAfterSettingsChange(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0),e=this.getInputData(1);null==t||null==e?this.setOutputData(0,null):t<e&&(this.setOutputData(0,t),this.properties.value=t,this.persistProperties(!1,!0))}}n.Container.registerNodeType("filter/only-lower",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Only Equal",this.description="This node filters 'input' values.  Only 'input' values equal to 'match' are passed to 'output'.",this.addInput("input",a.Type.ANY),this.addInputWithSettings("match",a.Type.ANY,"","Match Value"),this.addOutput("output",a.Type.ANY),this.properties.value}onAdded(){this.setOutputData(0,this.properties.value),this.onInputUpdated()}onAfterSettingsChange(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);t=(t||"").toString(),"false"==t?t=!1:"true"==t&&(t=!0);let e=(this.getInputData(1)||"").toString();"false"==e?e=!1:"true"==e&&(e=!0),t==e&&(this.setOutputData(0,t),this.properties.value=t,this.persistProperties(!1,!0))}}n.Container.registerNodeType("filter/only-equal",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(4);class r extends s.Node{constructor(){super(),this.title="Prevent Null",this.description="This node filters 'input' values.  All 'input' values are passed to 'output' EXCEPT 'null'.",this.addInput("input"),this.addOutput("output"),this.properties.value}onAdded(){this.setOutputData(0,this.properties.value),this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);a.isNotNull(t)&&""!==t&&(this.setOutputData(0,t),this.properties.value=t,this.persistProperties(!1,!0))}}n.Container.registerNodeType("filter/prevent-null",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Prevent Equal",this.description="This node filters 'input' values.  All 'input' values are passed to 'output' EXCEPT 'input' values which are equal to 'match'.",this.addInput("input",a.Type.ANY),this.addInputWithSettings("match",a.Type.ANY,null,"Match Value"),this.addOutput("output",a.Type.ANY),this.properties.value}onAdded(){this.setOutputData(0,this.properties.value),this.onInputUpdated()}onAfterSettingsChange(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);t=(t||"").toString();let e=(this.getInputData(1)||"").toString();"false"==e?e=!1:"true"==e&&(e=!0),t!=e&&(this.setOutputData(0,t),this.properties.value=t,this.persistProperties(!1,!0))}}n.Container.registerNodeType("filter/prevent-equal",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2);class n extends s.Node{constructor(){super(),this.title="Prevent Duplicates",this.description="This node filters 'input' values.  All 'input' values are passed to 'output' EXCEPT 'input' values which are equal to the previous 'input' value.",this.addInput("input"),this.addOutput("output"),this.properties.value}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);""===t&&(t=null),this.lastVal!=t&&(this.lastVal=t,this.setOutputData(0,t,!0),this.properties.value=t,this.persistProperties(!1,!0))}}i(0).Container.registerNodeType("filter/prevent-duplicates",n)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3),o=i(5),u=i(12);class d extends s.Node{constructor(){super(),this.title="Data Store",this.description="The data-store node is used to store history log data locally.  The data-store node has limited memory so the capacity is limited to 50 log entries; beware of using too many data-store nodes as it could affect the operation of Wires.  The history logs can be configured to log in UTC or local timezone, and the output format can be set to ‘Array’, ‘CSV’, or ‘JSON’.  If ‘Round up in increments of’ setting is used (not zero), then the timestamp will be rounded up to the nearest increment value step.",this.addInput("input",a.Type.ANY),this.addInput("clear",a.Type.BOOLEAN),this.addOutput("output",a.Type.ANY),this.addOutput("storedCount",a.Type.NUMBER),this.settings["time-conversation-enable"]={description:"Timestamp in system timezone?",value:!1,type:s.SettingType.BOOLEAN},this.settings["storage-limit"]={description:"Storage Limit (Max 50)",value:25,type:s.SettingType.NUMBER},this.settings["date-iso"]={description:"Typestamp Format",type:s.SettingType.DROPDOWN,config:{items:[{value:0,text:"YYYY-MM-DD HH:mm:ss TZ (ISO8601)"},{value:1,text:"YYYY-MM-DD HH:mm:ss"},{value:2,text:"MM-DD-YYYY HH:mm:ss"},{value:3,text:"DD-MM-YYYY HH:mm:ss"},{value:4,text:"DAY, Month DD, YYYY HH:MM AM/PM"},{value:5,text:"Month DD, YYYY HH:MM AM/PM"},{value:6,text:"Unix timestamp in Milliseconds"}]},value:0},this.settings.outputFormat={description:"Output Format",type:s.SettingType.DROPDOWN,config:{items:[{value:"Array",text:"Array"},{value:"CSV",text:"CSV"},{value:"JSON",text:"JSON"}]},value:"Array"},this.settings.pointName={description:"Point Name",value:"",type:s.SettingType.STRING},this.settings.minuteRoundValue={description:"Round minutes up in increments of",value:0,type:s.SettingType.NUMBER},this.setSettingsConfig({conditions:{pointName:t=>"Array"!=t.outputFormat.value}})}onCreated(){this.properties.historyLog=[]}onAdded(){this.setOutputData(0,this.properties.historyLog),this.setOutputData(1,this.properties.historyLog?this.properties.historyLog.length:0)}nearestFutureMinutes(t,e){const i=Math.ceil(e.minute()/t)*t;return e.clone().minute(i).second(0)}formatOutputs(){const t=this.settings["time-conversation-enable"].value?Intl.DateTimeFormat().resolvedOptions().timeZone:"Etc/UTC";let e=null;const i=this.settings.pointName.value;let s=this.properties.historyLog.map(t=>t);switch(s=s.reverse().map(i=>{switch(this.settings["date-iso"].value){case 0:e=u(i.timestamp).tz(t).format();break;case 1:e=u(i.timestamp).tz(t).format("YYYY-MM-DD HH:mm:ss");break;case 2:e=u(i.timestamp).tz(t).format("MM-DD-YYYY HH:mm:ss");break;case 3:e=u(i.timestamp).tz(t).format("DD-MM-YYYY HH:mm:ss");break;case 4:e=u(i.timestamp).tz(t).format("LLLL");break;case 5:e=u(i.timestamp).tz(t).format("LLL");break;case 6:e=u(i.timestamp).tz(t).valueOf();break;default:e=u(i.timestamp).tz(t).format()}return{payload:i.payload,timestamp:e}}),this.settings.outputFormat.value){case"Array":return s;case"CSV":let t="name, timestamp, payload\n";return s.forEach(e=>{t+=`${i}, ${e.timestamp}, ${e.payload} \n`}),t;case"JSON":return JSON.stringify({[i]:s})}}onInputUpdated(){if(this.side!==n.Side.server)return;if(this.getInputData(1)&&this.inputs[1].updated&&(this.properties.historyLog=[],this.setOutputData(0,this.properties.historyLog.reverse()),this.setOutputData(1,this.properties.historyLog.length)),null==this.getInputData(0)||!this.inputs[0].updated)return;const t=r.default.clamp(this.settings["storage-limit"].value,0,50),e=r.default.clamp(this.settings.minuteRoundValue.value,0,60),i=e?o.default.nearestFutureMinutes(e,u()):u();let s={payload:this.getInputData(0),timestamp:i._d};for(this.properties.historyLog.push(s);this.properties.historyLog.length>t;)this.properties.historyLog.shift();this.persistProperties(!0,!0);const a=this.formatOutputs()||[];this.setOutputData(0,a),this.setOutputData(1,this.properties.historyLog.length)}onAfterSettingsChange(){this.outputs[0].name=`output (${this.settings.outputFormat.value})`,this.broadcastOutputsToClients();const t=this.formatOutputs()||[];this.setOutputData(0,t),this.setOutputData(1,this.properties.historyLog.length)}}n.Container.registerNodeType("history/data-store",d)},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(2),a=i(0),r=i(1),o=i(4);let u=i(12);const d=i(45),p=i(8);class l extends n.Node{constructor(){super(),this.title="Influx-DB",this.description="A node for sending data to influxDB",this.addInput("[name]",r.Type.STRING),this.addInput("json-input",r.Type.JSON),this.addOutput("error",r.Type.BOOLEAN),this.addOutput("lastExport",r.Type.STRING),this.settings.enable={description:"Enable",value:!1,type:n.SettingType.BOOLEAN},this.settings.useEnv={description:"Dont use env settings",value:!1,type:n.SettingType.BOOLEAN},this.settings.host={description:"Host",value:"0.0.0.0",type:n.SettingType.STRING},this.settings.port={description:"Port",value:"8086",type:n.SettingType.STRING},this.settings.authentication={description:"Use Authentication",value:!1,type:n.SettingType.BOOLEAN},this.settings.user={description:"Username",value:"",type:n.SettingType.STRING},this.settings.password={description:"Password",value:"",type:n.SettingType.STRING},this.settings.databaseName={description:"Database Name",value:"",type:n.SettingType.STRING},this.setSettingsConfig({groups:[{host:{weight:3},port:{weight:1}},{user:{},password:{}},{period:{weight:2},periodUnits:{}}],conditions:{host:t=>!!t.useEnv.value,port:t=>!!t.useEnv.value,authentication:t=>!!t.useEnv.value,databaseName:t=>!!t.useEnv.value,user:t=>!!t.authentication.value,password:t=>!!t.authentication.value}})}onAdded(){this.createClient()}createClient(){return s(this,void 0,void 0,(function*(){let{protocol:t,host:e,port:i,databaseName:s,username:n,password:a}=p.default.influxDb;this.settings.useEnv.value?(e=this.settings.host.value,i=this.settings.port.value,this.client=new d.InfluxDB({host:this.settings.host.value||"localhost",port:this.settings.port.value||8086,protocol:"http",database:this.settings.databaseName.value||"undefined",username:this.settings.authentication.value?this.settings.user.value:"",password:this.settings.authentication.value?this.settings.password.value:""})):this.client=new d.InfluxDB({host:e,port:i,protocol:"https"===t?"https":"http",database:s,username:n,password:a})}))}onInputUpdated(){if(this.side!==a.Side.server)return;if(!this.client)return;if(!this.settings.enable.value)return;if(this.inputs[0].updated){let t=this.getInputData(0);o.isNull(t)||(this.name=t,this.broadcastNameToClients())}const t=this.getInputData(1);if(o.isNull(t))return;const e=t.hasOwnProperty("measurement"),i=t.hasOwnProperty("tags"),s=t.hasOwnProperty("fields");if(!t)return;if(t===!o.isJSON)return void this.debugInfo("INFLUX-DB NODE: input isn't JSON");let n;try{if(o.isNull(t))return;n=JSON.parse(t.tags)}catch(t){this.debugInfo(`INFLUX-DB NODE: try/catch  json parse of tags, ${t}`)}o.isNull(t)||e&&i&&s&&(this.setOutputData(0,!1),this.setOutputData(1,u().format()),this.client.writePoints([{measurement:t.measurement,tags:n,fields:t.fields}]).catch(t=>{this.debugInfo(`INFLUX-DB NODE: error on influx write, ${t}`),this.setOutputData(0,!0)}))}onAfterSettingsChange(){this.side===a.Side.server&&(this.createClient(),this.onInputUpdated())}}a.Container.registerNodeType("history/influx-db",l)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(1),a=i(31);class r extends a.default{constructor(){super(),this.title="History",this.description="The History node is used to store values to an external database.   History logs (when enabled) are pushed to either the Nube DB or an Influx DB instance.  A ‘Point Name’ should be entered (under ‘History’ settings) to identify the history by name. History logging options are ‘Change Of Value (COV)’, ‘Periodic’, and ‘Trigger Only’.  When set to COV, a log will be saved when the value changes by the ‘COV Threshold’ from the last saved history value.  When set to ‘Periodic’ a log will be saved at every ‘Logging Interval’ period. When set to either ‘COV’ or ‘Periodic’ a log entry can be saved by transitioning the ‘histTrigger’ input from ‘false’ to ‘true’.  If only the ‘histTrigger’ action is required, set the ‘History Logging Mode’ to ‘Trigger Only’.   If the history/history node is unable to send the history logs to the configured database (network connection issues, or incorrect configuration) then they will be stored locally, and ‘storedHistCount’ will increase.  Currently the local storage limit is set to 50 logs. The history/history node has limited memory so the capacity is limited to 50 log entries; beware of using too many history/history nodes as it could affect the operation of Wires.  If ‘Round up in increments of’ setting is used (not zero), then the timestamp will be rounded up to the nearest increment value step.  If the input value is a Number, the ‘Decimal Places’ setting will round the input value to the specified number of decimal places.",this.addInput("input",n.Type.ANY),this.addHistorySettingsConfig()}}s.Container.registerNodeType("history/history",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(5),o=i(4);class u extends s.Node{constructor(){super(),this.lastInterval=1e3,this.runState=!0,this.title="Point Persistance",this.description="This node is used when you want to store the node output on a restart and also to not pass to the output any null values. While 'enable' is 'true', ‘output’ will send 'input' value at every 'interval' period. When 'enable' is 'false', ‘output’ will be 'null'.  ‘interval’ units can be configured from settings. Maximum ‘interval’ setting is 587 hours. On a trigger input the output will be sent even if the enable is set to false",this.addInputWithSettings("enable",a.Type.BOOLEAN,!0,"Enable"),this.addInput("input",a.Type.ANY),this.addInputWithSettings("interval",a.Type.NUMBER,30,"Interval"),this.addInput("trigger",a.Type.BOOLEAN),this.addOutput("output",a.Type.ANY),this.properties.output=null,this.settings.time={description:"Units",type:s.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"seconds"},this.setSettingsConfig({groups:[{interval:{weight:2},time:{}}]})}onAdded(){if(clearInterval(this.timeoutFunc),this.inputs[2].name=`[interval] (${this.settings.time.value})`,!this.getInputData(0))return this.setOutputData(0,this.properties.output),void(this.runState=!1);let t=this.getInputData(2);t=r.default.timeConvert(t,this.settings.time.value),this.timeoutFunc=setInterval(()=>{this.getInputData(1);this.setOutputData(0,this.properties.output)},t),this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(3);const e=this.getInputData(1);null!=e&&e.length&&(this.properties.output=e,this.setOutputData(0,this.properties.output)),t&&void 0!==this.properties.output&&null!==this.properties.output&&this.properties.output.length&&this.setOutputData(0,this.properties.output),this.inputs[1].updated&&(o.isNull(e)||(this.properties.output=e,this.setOutputData(0,this.properties.output)));const i=this.getInputData(0);if(!i&&this.runState)return clearInterval(this.timeoutFunc),this.setOutputData(0,this.properties.output),void(this.runState=!1);if(!i&&!this.runState)return this.setOutputData(0,this.properties.output),void(this.runState=!1);if(i){let t=this.getInputData(2);if(t=r.default.timeConvert(t,this.settings.time.value),this.runState)return void(t!=this.lastInterval&&(this.lastInterval=t,clearInterval(this.timeoutFunc),this.timeoutFunc=setInterval(()=>{this.setOutputData(0,this.properties.output)},t)));this.runState||(this.runState=!0,this.timeoutFunc=setInterval(()=>{this.setOutputData(0,this.properties.output)},t))}}onAfterSettingsChange(){this.inputs[2].name=`[interval] (${this.settings.time.value})`,this.onInputUpdated()}}e.PointPersistence=u,n.Container.registerNodeType("history/persistence",u)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(1),a=i(0),r=i(69),o=i(4);class u extends s.Node{constructor(){super(),this.deviceId=0,this.pointId=1,this.clientId=2,this.siteId=3,this.clientName=4,this.siteName=5,this.siteAddress=6,this.state=7,this.country=8,this.lat=9,this.lon=10,this.equipRef=11,this.manualTags=12,this.title="Point Tag Node",this.description="A node generating HVAC tags",this.settings.tags_group={description:"Tag builder settings",value:"",type:s.SettingType.GROUP},this.settings.equipType={description:"Equipment Type",type:s.SettingType.DROPDOWN,config:{items:r.default.tagCategory}},this.settings.tags={description:"Point Type",value:null,type:s.SettingType.DROPDOWN},this.settings.tags_values={description:"Auto generated tags values",value:null,type:s.SettingType.READONLY},this.settings.manualSettings={description:"Enter manual (optional)",value:!1,type:s.SettingType.BOOLEAN},this.settings.manualEquip={description:"User equip (optional)",value:"CHILLER",type:s.SettingType.STRING},this.settings.manualSensor={description:"User sensor (optional)",value:"Supply Air Zone Sensor",type:s.SettingType.STRING},this.settings.point_group={description:"Device details",value:"",type:s.SettingType.GROUP},this.addInputWithSettings("deviceId",n.Type.STRING,"device id","device id",!1),this.addInputWithSettings("pointId",n.Type.STRING,"point id","point id/name",!1),this.settings.site_group={description:"Site details",value:"",type:s.SettingType.GROUP},this.addInputWithSettings("clientId",n.Type.STRING,"client id","client id",!1),this.addInputWithSettings("clientName",n.Type.STRING,"client name","Client Name",!1),this.addInputWithSettings("siteId",n.Type.STRING,"site id","site id",!1),this.addInputWithSettings("siteName",n.Type.STRING,"site name","Site/Building Name",!1),this.addInputWithSettings("siteAddress",n.Type.STRING,"123 my street","Site/Building Address",!1),this.addInputWithSettings("state",n.Type.STRING,"NSW","State",!1),this.addInputWithSettings("country",n.Type.STRING,"Australia","Country",!1),this.addInputWithSettings("lat",n.Type.STRING,"","Site/Building Latitude",!1),this.addInputWithSettings("lon",n.Type.STRING,"","Site/Building Longitude",!1),this.addInputWithSettings("equipRef",n.Type.STRING,"FCU123","Equipment Reference",!1),this.addInputWithSettings("manualTags",n.Type.JSON,"sensor, ahu","manual Tags",!1),this.addOutput("output",n.Type.JSON)}onAdded(){this.onAfterSettingsChange()}onInputUpdated(){if(this.side!==a.Side.server)return;const t=this.getInputData(this.deviceId),e=this.getInputData(this.pointId),i=this.getInputData(this.clientId),s=this.getInputData(this.clientName),n=this.getInputData(this.siteId),u=this.getInputData(this.siteName),d=this.getInputData(this.siteAddress),p=this.getInputData(this.state),l=this.getInputData(this.country),h=this.getInputData(this.lat),c=this.getInputData(this.lon),g=this.getInputData(this.equipRef);let y=this.settings.equipType.value;const m=this.settings.manualSettings.value,f=this.settings.manualEquip.value,v=this.settings.manualSensor.value,T=this.getInputData(this.manualTags);let O=r.default.tagType(y);if(o.isNull(O))return;this.settings.tags.config={items:Object.keys(O)};let I,S=this.settings.tags.value;if(m)S=v,y=f,I=T;else for(var b in O)b==S&&(I=O[b]);let N={pointType:S,equipRef:g,equipType:y,deviceId:t,pointId:e,clientId:i,clientName:s,siteId:n,siteName:u,siteAddress:d,state:p,country:l,lat:h,lon:c};if(I){m||(this.settings.tags_values.value=I.tags,this.broadcastSettingsToClients(),I=I.tags);let t={};if(o.isJSON(I)&&Object.keys(I).length>0){I.forEach(e=>{t[e]=e});const e=Object.assign(Object.assign({},N),t);this.setOutputData(0,e)}}}onAfterSettingsChange(){this.onInputUpdated()}}a.Container.registerNodeType("history/point-tags",u)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Deadband",this.description="This node applies a Hysteresis function (see hysteresis node), with a deadband centered at 'setpoint'.  The ON direction can be reversed from settings.",this.addInput("input",a.Type.NUMBER),this.addInputWithSettings("setpoint",a.Type.NUMBER,0,"Setpoint"),this.addInputWithSettings("deadband",a.Type.NUMBER,0,"Deadband"),this.addOutput("out",a.Type.BOOLEAN),this.addOutput("out not",a.Type.BOOLEAN),this.settings.invert={description:"Reverses ON direction when true",value:!1,type:s.SettingType.BOOLEAN}}onAdded(){this.setOutputData(0,!1)}onInputUpdated(){const t=this.getInputData(0),e=this.getInputData(1);let i=this.getInputData(2);1==this.settings.invert.value&&(i*=-1);const s=e+i/2,n=e-i/2;s>n?(t<=n&&this.setOutputData(0,!1,!0),t>=s&&this.setOutputData(0,!0,!0)):s<n&&(t>=n&&this.setOutputData(0,!1,!0),t<=s&&this.setOutputData(0,!0,!0))}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("hvac/deadband",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Heat/Cool Thermostat",this.description="This node functions as a Heat/Cool thermostat. While 'enable' is set to 'true', the node will function as follows: 'CLG Mode' will be set to 'true' if 'input' is greater than 'setpoint' + 'CLG offset', 'CLG Mode' will be set to 'false' if 'input' is less than 'setpoint'.  'HTG Mode' will be set to 'true' if 'input' is less than 'setpoint' - 'HTG offset', 'HTG Mode' will be set to 'false' if 'input' is greater than 'setpoint'.  If 'enable' is 'false', 'CLG Mode' and 'HTG Mode' will both be set to 'false'. ",this.addInput("input",a.Type.NUMBER),this.addInputWithSettings("enable",a.Type.BOOLEAN,!0,"Enable"),this.addInputWithSettings("setpoint",a.Type.NUMBER,20,"Setpoint"),this.addInputWithSettings("CLG offset",a.Type.NUMBER,1,"CLG offset"),this.addInputWithSettings("HTG offset",a.Type.NUMBER,1,"HTG offset"),this.addOutput("CLG Mode",a.Type.BOOLEAN),this.addOutput("HTG Mode",a.Type.BOOLEAN),this.setOutputData(0,!1),this.setOutputData(1,!1),this.clgMode=!1,this.htgMode=!1}onAdded(){this.setOutputData(0,!1),this.setOutputData(1,!1),this.onInputUpdated()}onExecute(){}onInputUpdated(){if(!this.getInputData(1))return this.setOutputData(0,!1),this.setOutputData(1,!1),this.clgMode=!1,void(this.htgMode=!1);const t=this.getInputData(0),e=this.getInputData(2),i=e+this.getInputData(3);t<e-this.getInputData(4)?(this.setOutputData(0,!1),this.setOutputData(1,!0),this.htgMode=!0,this.clgMode=!1):t>i?(this.setOutputData(0,!0),this.setOutputData(1,!1),this.clgMode=!0,this.htgMode=!1):(this.clgMode&&t<e||this.htgMode&&t>e)&&(this.setOutputData(0,!1),this.setOutputData(1,!1),this.clgMode=!1,this.htgMode=!1)}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("hvac/thermostat",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(5),o=i(206);class u extends s.Node{constructor(){super(),this.lastResetVal=!1,this.pid=new o(1,1,1,0,0,"reverse"),this.title="PID",this.description="This node generates a PID ‘output’ based on input parameter settings. Inputs: Enable, Setpoint, Process Variable, inP (Proportional), inI (Integral), inD (Derivative), Direction, Interval, MaxOut, MinOut, Manual, and Bias. If 'direction' is 'true' the PID will be a Direct loop ('output' increases when 'processVariable' > 'setpoint'), if 'direction' is 'false' the PID will be a Reverse loop ('output' increases when 'processVariable' < 'setpoint'). 'interval' is the period that the PID output is re-calculated. 'bias' value is added to 'output'. 'manual' will be the 'output' value when 'enable' is 'false'. PID integral factor will be reset to 0 when 'reset' transitions from 'false' to 'true'.  'interval’ units can be configured from settings.  Maximum ‘interval’ setting is 587 hours.",this.addInput("enable",a.Type.BOOLEAN),this.addInput("processVariable",a.Type.NUMBER),this.addInputWithSettings("setpoint",a.Type.NUMBER,1,"setpoint"),this.addInputWithSettings("minOut",a.Type.NUMBER,0,"minOut"),this.addInputWithSettings("maxOut",a.Type.NUMBER,100,"maxOut"),this.addInputWithSettings("inP",a.Type.NUMBER,1,"P"),this.addInputWithSettings("inI",a.Type.NUMBER,0,"I"),this.addInputWithSettings("inD",a.Type.NUMBER,0,"D"),this.addInputWithSettings("direction",a.Type.BOOLEAN,!0,"Direction (OFF = Reverse, ON = Direct)"),this.addInputWithSettings("interval",a.Type.NUMBER,1,"Interval (min 500ms)"),this.addInputWithSettings("bias",a.Type.NUMBER,0,"Bias"),this.addInputWithSettings("manual",a.Type.NUMBER,0,"Manual ('output' value on disabled)"),this.addInput("reset",a.Type.BOOLEAN),this.addOutput("output",a.Type.NUMBER),this.settings.time={description:"Time",type:s.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"seconds"},this.setSettingsConfig({groups:[{minOut:{},maxOut:{}},{inP:{},inI:{},inD:{}},{time:{},interval:{weight:2}}]}),this.startTime=Date.now(),this.pid.setSampleTime(1e3),this.pid.setOutputLimits(0,100),this.pid.setMode("MANUAL"),this.pid.setOutput(0),this.pid.setBias(0)}onAdded(){this.inputs[9].name=`[interval] (${this.settings.time.value})`,this.onInputUpdated()}onExecute(){this.pid.compute()&&this.setOutputData(0,this.pid.getOutput().toFixed(1),!0)}onInputUpdated(){const t=this.getInputData(12);if(t&&!this.lastResetVal&&this.pid.initialize(),this.lastResetVal=t,!this.getInputData(0)){this.pid.setMode("MANUAL");const t=this.getInputData(11)||0;return this.setOutputData(0,t.toFixed(1)),void this.pid.setOutput(t)}let e=this.getInputData(1);if(null==e||typeof e!==a.Type.NUMBER){this.pid.setMode("MANUAL");const t=this.getInputData(11)||0;return this.setOutputData(0,t.toFixed(1),!0),void this.pid.setOutput(t)}const i=this.getInputData(2),s=this.getInputData(3),n=this.getInputData(4),o=this.getInputData(5),u=this.getInputData(6),d=this.getInputData(7);let p=this.getInputData(8);p=1==p?"direct":"reverse";let l=this.getInputData(9);l=r.default.timeConvert(l,this.settings.time.value),l=Math.max(500,l);const h=this.getInputData(10);this.pid.setBias(h),this.pid.setSampleTime(l),this.pid.setOutputLimits(s,n),this.pid.setPoint(i),this.pid.setTunings(o,u,d),this.pid.setControllerDirection(p),this.pid.setMode("auto"),this.pid.setInput(e),this.pid.compute(),this.setOutputData(0,this.calculatePidOutput(),!0)}onAfterSettingsChange(){this.inputs[9].name=`[interval] (${this.settings.time.value})`,this.onInputUpdated()}calculatePidOutput(){return this.pid.getOutput().toFixed(1)}}n.Container.registerNodeType("hvac/PID",u)},function(t,e,i){"use strict";var s=function(t,e,i,s,n,a){this.input=t,this.mySetpoint=e,this.inAuto=!1,this.setOutputLimits(0,255),this.SampleTime=100,this.setTunings(i,s,n),this.setControllerDirection(a),this.lastTime=this.millis()-this.SampleTime,this.myBias=0,this.ITerm=0,this.myOutput=0};s.prototype.setInput=function(t){this.input=Number(t)},s.prototype.setPoint=function(t){this.mySetpoint=Number(t)},s.prototype.setBias=function(t){t>this.outMax?t=this.outMax:t<this.outMin&&(t=this.outMin),this.myBias=Number(t)},s.prototype.millis=function(){return(new Date).getTime()},s.prototype.compute=function(){if(!this.inAuto)return!1;var t=this.millis();if(t-this.lastTime>=this.SampleTime){var e=this.input,i=e-this.mySetpoint;i*=this.setDirection,this.ITerm+=this.ki*i,this.ITerm>this.outMax-this.myBias?this.ITerm=this.outMax-this.myBias:this.ITerm<this.outMin-this.myBias&&(this.ITerm=this.outMin-this.myBias);var s=e-this.lastInput,n=this.kp*i+this.ITerm-this.kd*s+this.myBias;return n>this.outMax?n=this.outMax:n<this.outMin&&(n=this.outMin),this.myOutput=n,this.lastInput=e,this.lastTime=t,!0}return!1},s.prototype.setTunings=function(t,e,i){t<0||e<0||i<0||(this.dispKp=t,this.dispKi=e,this.dispKd=i,this.SampleTimeInSec=this.SampleTime/1e3,this.kp=t,this.ki=e*this.SampleTimeInSec,this.kd=i/this.SampleTimeInSec)},s.prototype.setSampleTime=function(t){if(t>0){var e=t/(1*this.SampleTime);this.ki*=e,this.kd/=e,this.SampleTime=Math.round(t)}},s.prototype.setOutput=function(t){t>this.outMax?t=this.outMax:t<this.outMin&&(t=this.outMin),this.myOutput=t},s.prototype.setOutputLimits=function(t,e){t>=e||(this.outMin=t,this.outMax=e,this.inAuto&&(this.myOutput>this.outMax?this.myOutput=this.outMax:this.myOutput<this.outMin&&(this.myOutput=this.outMin),this.ITerm>this.outMax-this.myBias?this.ITerm=this.outMax-this.myBias:this.ITerm<this.outMin-this.myBias&&(this.ITerm=this.outMin-this.myBias)))},s.prototype.setMode=function(t){var e;if(0==t||"automatic"==t.toString().toLowerCase()||"auto"==t.toString().toLowerCase())e=1;else{if(1!=t&&"manual"!=t.toString().toLowerCase())throw new Error("Incorrect Mode Chosen");e=0}this.inAuto=e},s.prototype.initialize=function(){this.ITerm=0,this.myOutput=this.myBias,this.lastInput=this.input},s.prototype.setControllerDirection=function(t){if(0==t||"direct"==t.toString().toLowerCase())this.setDirection=1;else{if(1!=t&&"reverse"!=t.toString().toLowerCase())throw new Error("Incorrect Controller Direction Chosen");this.setDirection=-1}},s.prototype.getKp=function(){return this.dispKp},s.prototype.getKd=function(){return this.dispKd},s.prototype.getKi=function(){return this.dispKi},s.prototype.getMode=function(){return this.inAuto?"Auto":"Manual"},s.prototype.getDirection=function(){return this.controllerDirection},s.prototype.getOutput=function(){return this.myOutput},s.prototype.getInput=function(){return this.input},s.prototype.getSetPoint=function(){return this.mySetpoint},s.prototype.getBias=function(){return this.myBias},t.exports=s},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(5);class o extends s.Node{constructor(){super(),this.title="Toggle Duration",this.description="This node accepts a 'pushButton' input which triggers 'output' to 'true' for the 'runtime', or until 'pushButton' transitions from 'false' to 'true' within the 'runtime' period",this.addInput("pushButton",a.Type.BOOLEAN),this.addInputWithSettings("runtime",a.Type.NUMBER,120,"Runtime"),this.addOutput("output",a.Type.BOOLEAN),this.addOutput("remainingRuntime",a.Type.NUMBER),this.settings.time={description:"Units",type:s.SettingType.DROPDOWN,config:{items:[{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"minutes"},this.setSettingsConfig({groups:[{runtime:{weight:2},time:{}}]})}onCreated(){this.setOutputData(0,!1),this.lastTrigger=!1,this.onAfterSettingsChange()}onAdded(){this.inputs[1].name=`[runtime] (${this.settings.time.value})`,this.EXECUTE_INTERVAL=1e4,this.onAfterSettingsChange()}onExecute(){if(this.runState){const t=16667e-9*(this.runtimeVal-((new Date).valueOf()-this.startTime));this.setOutputData(1,t.toFixed(1)),t<=0&&this.stop()}}onInputUpdated(){let t=this.getInputData(0);if(null==t)this.lastTrigger=!1;else if(t&&!this.lastTrigger){let t=this.getInputData(1);t=r.default.timeConvert(t,this.settings.time.value),this.runState?this.stop():this.start(t)}this.lastTrigger=t}start(t){this.runState=!0,this.runtimeVal=t,this.EXECUTE_INTERVAL=Math.max(Math.min(1e4,t/10),250),this.startTime=(new Date).valueOf(),this.setOutputData(0,!0),this.onExecute()}stop(){this.runState=!1,this.setOutputData(0,!1),this.setOutputData(1,0)}onAfterSettingsChange(){this.inputs[1].name=`[runtime] (${this.settings.time.value})`,this.onInputUpdated()}}n.Container.registerNodeType("hvac/toggle-duration",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3),o=i(46);class u extends s.Node{constructor(){super(),this.psychro=new o,this.title="Psychrometric Calcs (Metric/SI)",this.description="This node provides psychrometric calculations based on a selection of: Dry Bulb Temp, Wet Bulb Temp, Dew Point, Relative Humidity, and Pressure.  Inputs and Outputs as follows: (i) Dry bulb temperature in °F [IP] or °C [SI]; (i) Wet bulb temperature in °F [IP] or °C [SI];  (i) Atmospheric pressure in Psi [IP] or Pa [SI];  (o) Humidity ratio in lb_H₂O lb_Air⁻¹ [IP] or kg_H₂O kg_Air⁻¹ [SI];  (o) Dew point temperature in °F [IP] or °C [SI]; \n (o) Relative humidity [0-1];  (o) Partial pressure of water vapor in moist air in Psi [IP] or Pa [SI];  (o) Moist air enthalpy in Btu lb⁻¹ [IP] or J kg⁻¹ [SI];  (o) Specific volume ft³ lb⁻¹ [IP] or in m³ kg⁻¹ [SI].  Input types can be selected from settings. Outputs will change based on selected input type.   Unit system can be set from settings to be in:  Metric/SI or Imperial/IP.",this.addInput("DryBulb",a.Type.NUMBER),this.addInput("RelHum(0-1)",a.Type.NUMBER),this.addInput("Pressure",a.Type.NUMBER),this.addOutput("HumRatio",a.Type.NUMBER),this.addOutput("TWetBulb",a.Type.NUMBER),this.addOutput("TDewPoint",a.Type.NUMBER),this.addOutput("VapPres",a.Type.NUMBER),this.addOutput("MoistAirEnthalpy",a.Type.NUMBER),this.addOutput("MoistAirVolume",a.Type.NUMBER),this.addOutput("DegreeOfSaturation",a.Type.NUMBER),this.addOutput("error",a.Type.STRING),this.settings.units={description:"Select Units",type:s.SettingType.DROPDOWN,config:{items:[{value:"SI",text:"Metric/SI"},{value:"IP",text:"Imperial/IP"}]},value:"SI"},this.settings.inputsSelect={description:"Select Inputs",type:s.SettingType.DROPDOWN,config:{items:[{value:"DB_RH_P",text:"Dry Bulb, Rel. Humidity, Pressure"},{value:"DB_WB_P",text:"Dry Bulb, Wet Bulb, Pressure"},{value:"DB_DP_P",text:"Dry Bulb, Dew Point, Pressure "}]},value:"DB_RH_P"},this.settings.precision={description:"Precision",type:s.SettingType.NUMBER,value:4},this.psychro.SetUnitSystem(this.psychro.SI)}onAdded(){this.setConversionFunction()}onInputUpdated(){this.onInputOrSettingsChange()}onAfterSettingsChange(){this.setConversionFunction(),this.onInputOrSettingsChange()}onInputOrSettingsChange(){const t=this.getInputData(0),e=this.getInputData(1),i=this.getInputData(2);if(!r.default.hasInput(t)||!r.default.hasInput(e)||!r.default.hasInput(i))return this.clearOutputs(),void this.setOutputData(7,null);let s;try{s=this.conversionFunction(t,e,i)}catch(t){return this.clearOutputs(),void this.setOutputData(7,String(t))}const n=Math.abs(this.settings.precision.value);this.setOutputData(0,Number(s[0]).toFixed(n)),this.setOutputData(1,Number(s[1]).toFixed(n)),this.setOutputData(2,Number(s[2]).toFixed(n)),this.setOutputData(3,Number(s[3]).toFixed(n)),this.setOutputData(4,Number(s[4]).toFixed(n)),this.setOutputData(5,Number(s[5]).toFixed(n)),this.setOutputData(6,Number(s[6]).toFixed(n)),this.setOutputData(7,null)}clearOutputs(){this.setOutputData(0,null),this.setOutputData(1,null),this.setOutputData(2,null),this.setOutputData(3,null),this.setOutputData(4,null),this.setOutputData(5,null),this.setOutputData(6,null)}setConversionFunction(){switch("IP"==this.settings.units.value?(this.psychro.SetUnitSystem(this.psychro.IP),this.title="Psychrometric Calcs (Imperial/IP)"):(this.psychro.SetUnitSystem(this.psychro.SI),this.title="Psychrometric Calcs (Metric/SI)"),this.settings.inputsSelect.value){case"DB_RH_P":this.inputs[0].name="DryBulb",this.inputs[1].name="RelHum(0-1)",this.inputs[2].name="Pressure",this.outputs[0].name="HumRatio",this.outputs[1].name="TWetBulb",this.outputs[2].name="TDewPoint",this.conversionFunction=(t,e,i)=>this.psychro.CalcPsychrometricsFromRelHum(t,e,i);break;case"DB_WB_P":this.inputs[0].name="DryBulb",this.inputs[1].name="TWetBulb",this.inputs[2].name="Pressure",this.outputs[0].name="HumRatio",this.outputs[1].name="TDewPoint",this.outputs[2].name="RelHum",this.conversionFunction=(t,e,i)=>this.psychro.CalcPsychrometricsFromTWetBulb(t,e,i);break;case"DB_DP_P":this.inputs[0].name="DryBulb",this.inputs[1].name="TDewPoint",this.inputs[2].name="Pressure",this.outputs[0].name="HumRatio",this.outputs[1].name="TWetBulb",this.outputs[2].name="RelHum",this.conversionFunction=(t,e,i)=>this.psychro.CalcPsychrometricsFromTDewPoint(t,e,i);break;default:this.inputs[0].name="DryBulb",this.inputs[1].name="RelHum(0-1)",this.inputs[2].name="Pressure",this.outputs[0].name="HumRatio",this.outputs[1].name="TWetBulb",this.outputs[2].name="TDewPoint",this.conversionFunction=(t,e,i)=>this.psychro.CalcPsychrometricsFromRelHum(t,e,i)}}}n.Container.registerNodeType("hvac/psychrometrics",u)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3);class o extends s.Node{constructor(){super(),this.title="Energy Conversion (W·h)",this.description="This node converts between Energy units watt-hour (W·h), kilowatt-hour (kW·h), British Thermal Unit (Btu), calorie (cal), joule(J), and joule(kJ).  Input type can be selected from settings. Outputs will change based on selected input type.",this.addInput("W·h",a.Type.NUMBER),this.addOutput("kW·h",a.Type.NUMBER),this.addOutput("Btu",a.Type.NUMBER),this.addOutput("cal",a.Type.NUMBER),this.addOutput("J",a.Type.NUMBER),this.addOutput("kJ",a.Type.NUMBER),this.settings.inputType={description:"Input Type",type:s.SettingType.DROPDOWN,config:{items:[{value:"W·h",text:"watt-hour (W·h)"},{value:"kW·h",text:"kilowatt-hour (kW·h)"},{value:"Btu",text:"British Thermal Unit (Btu)"},{value:"cal",text:"calorie (cal)"},{value:"J",text:"joule(J)"},{value:"kJ",text:"kilojoule(kJ)"}]},value:"W·h"},this.settings.precision={description:"Precision",type:s.SettingType.NUMBER,value:"4"}}onAdded(){this.setConversionFunction()}onInputUpdated(){this.onInputOrSettingsChange()}onAfterSettingsChange(){this.setConversionFunction(),this.onInputOrSettingsChange()}onInputOrSettingsChange(){const t=this.getInputData(0);if(!r.default.hasInput(t))return this.setOutputData(0,null),this.setOutputData(1,null),this.setOutputData(2,null),this.setOutputData(3,null),void this.setOutputData(4,null);const e=this.conversionFunction(t),i=Math.abs(this.settings.precision.value);this.setOutputData(0,Number(e[0]).toFixed(i)),this.setOutputData(1,Number(e[1]).toFixed(i)),this.setOutputData(2,Number(e[2]).toFixed(i)),this.setOutputData(3,Number(e[3]).toFixed(i)),this.setOutputData(4,Number(e[4]).toFixed(i))}setConversionFunction(){switch(this.settings.inputType.value){case"W·h":this.title="Energy Conversion (W·h)",this.inputs[0].name="W·h",this.outputs[0].name="kW·h",this.outputs[1].name="Btu",this.outputs[2].name="cal",this.outputs[3].name="J",this.outputs[4].name="kJ",this.conversionFunction=t=>{let e=[null,null,null,null,null];return e[0]=.001*t,e[1]=3.4121416331*t,e[2]=859.8456*t,e[3]=3600*t,e[4]=3.6*t,e};break;case"kW·h":this.title="Energy Conversion (kW·h)",this.inputs[0].name="kW·h",this.outputs[0].name="W·h",this.outputs[1].name="Btu",this.outputs[2].name="cal",this.outputs[3].name="J",this.outputs[4].name="kJ",this.conversionFunction=t=>{let e=[null,null,null,null,null];return e[0]=1e3*t,e[1]=3412.1416331279*t,e[2]=859845.6*t,e[3]=36e5*t,e[4]=3600*t,e};break;case"Btu":this.title="Energy Conversion (Btu)",this.inputs[0].name="Btu",this.outputs[0].name="W·h",this.outputs[1].name="kW·h",this.outputs[2].name="cal",this.outputs[3].name="J",this.outputs[4].name="kJ",this.conversionFunction=t=>{let e=[null,null,null,null,null];return e[0]=.2930710702*t,e[1]=.0002930711*t,e[2]=251.99587*t,e[3]=1055.05585262*t,e[4]=1.0550558526*t,e};break;case"cal":this.title="Energy Conversion (cal)",this.inputs[0].name="cal",this.outputs[0].name="W·h",this.outputs[1].name="kW·h",this.outputs[2].name="Btu",this.outputs[3].name="J",this.outputs[4].name="kJ",this.conversionFunction=t=>{let e=[null,null,null,null,null];return e[0]=.0011629995*t,e[1]=1163e-9*t,e[2]=.003968319*t,e[3]=4.1867982*t,e[4]=.0041867982*t,e};break;case"J":this.title="Energy Conversion (J)",this.inputs[0].name="J",this.outputs[0].name="W·h",this.outputs[1].name="kW·h",this.outputs[2].name="Btu",this.outputs[3].name="cal",this.outputs[4].name="kJ",this.conversionFunction=t=>{let e=[null,null,null,null,null];return e[0]=.0002777778*t,e[1]=2.777778e-7*t,e[2]=.0009478171*t,e[3]=.238846*t,e[4]=.001*t,e};break;case"kJ":this.title="Energy Conversion (kJ)",this.inputs[0].name="kJ",this.outputs[0].name="W·h",this.outputs[1].name="kW·h",this.outputs[2].name="Btu",this.outputs[3].name="cal",this.outputs[4].name="J",this.conversionFunction=t=>{let e=[null,null,null,null,null];return e[0]=.2777777778*t,e[1]=.0002777778*t,e[2]=.9478171203*t,e[3]=238.846*t,e[4]=1e3*t,e};break;default:this.title="Energy Conversion (W·h)",this.inputs[0].name="W·h",this.outputs[0].name="kW·h",this.outputs[1].name="Btu",this.outputs[2].name="cal",this.outputs[3].name="J",this.outputs[4].name="kJ",this.conversionFunction=t=>{let e=[null,null,null,null,null];return e[0]=.001*t,e[1]=3.4121416331*t,e[2]=859.8456*t,e[3]=3600*t,e[4]=3.6*t,e}}}}n.Container.registerNodeType("hvac/energy-conversion",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3);class o extends s.Node{constructor(){super(),this.title="Power Conversion (kW)",this.description="This node converts between Power units kilowatt (kW), Tons of Refrigeration (tons),  British Thermal Unit per hour (Btu/h), and Electrical Horsepower (hp).  Input type can be selected from settings. Outputs will change based on selected input type.",this.addInput("kW",a.Type.NUMBER),this.addOutput("tons",a.Type.NUMBER),this.addOutput("Btu/h",a.Type.NUMBER),this.addOutput("hp",a.Type.NUMBER),this.settings.inputType={description:"Input Type",type:s.SettingType.DROPDOWN,config:{items:[{value:"kW",text:"kilowatt (kW)"},{value:"tons",text:"Tons of Refrigeration (tons)"},{value:"Btu/h",text:"British Thermal Unit per hour (Btu/h)"},{value:"hp",text:"Electrical Horsepower (hp)"}]},value:"kW"},this.settings.precision={description:"Precision",type:s.SettingType.NUMBER,value:"4"}}onAdded(){this.setConversionFunction()}onInputUpdated(){this.onInputOrSettingsChange()}onAfterSettingsChange(){this.setConversionFunction(),this.onInputOrSettingsChange()}onInputOrSettingsChange(){const t=this.getInputData(0);if(!r.default.hasInput(t))return this.setOutputData(0,null),this.setOutputData(1,null),void this.setOutputData(2,null);const e=this.conversionFunction(t),i=Math.abs(this.settings.precision.value);this.setOutputData(0,Number(e[0]).toFixed(i)),this.setOutputData(1,Number(e[1]).toFixed(i)),this.setOutputData(2,Number(e[2]).toFixed(i))}setConversionFunction(){switch(this.settings.inputType.value){case"kW":this.title="Power Conversion (kW)",this.inputs[0].name="kW",this.outputs[0].name="tons",this.outputs[1].name="Btu/h",this.outputs[2].name="hp",this.conversionFunction=t=>{const e=[null,null,null];return e[0]=.284345*t,e[1]=3412.141635133076*t,e[2]=1.340482573727*t,e};break;case"tons":this.title="Power Conversion (tons)",this.inputs[0].name="tons",this.outputs[0].name="kW",this.outputs[1].name="Btu/h",this.outputs[2].name="hp",this.conversionFunction=t=>{const e=[null,null,null];return e[0]=3.51685*t,e[1]=12e3*t,e[2]=4.71427613941*t,e};break;case"Btu/h":this.title="Power Conversion (Btu/h)",this.inputs[0].name="Btu/h",this.outputs[0].name="kW",this.outputs[1].name="tons",this.outputs[2].name="hp",this.conversionFunction=t=>{const e=[null,null,null];return e[0]=.00029307107*t,e[1]=833333332843549e-19*t,e[2]=.000392856662*t,e};break;case"hp":this.title="Power Conversion (hp)",this.inputs[0].name="hp",this.outputs[0].name="kW",this.outputs[1].name="tons",this.outputs[2].name="Btu/h",this.conversionFunction=t=>{const e=[null,null,null];return e[0]=.746*t,e[1]=2545.457659809275*t,e[2]=.21212147*t,e};break;default:this.title="Power Conversion (kW)",this.inputs[0].name="kW",this.outputs[0].name="tons",this.outputs[1].name="Btu/h",this.outputs[2].name="hp",this.conversionFunction=t=>{const e=[null,null,null];return e[0]=.284345*t,e[1]=3412.141635133076*t,e[2]=1.340482573727*t,e}}}}n.Container.registerNodeType("hvac/power-conversion",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3);class o extends s.Node{constructor(){super(),this.title="Volume Conversion (L)",this.description="This node converts between Volume units Litre (L), Cubic Metre (m³), Cubic Foot (ft³), and Gallon (gal).  Input type can be selected from settings. Outputs will change based on selected input type.",this.addInput("L",a.Type.NUMBER),this.addOutput("M³",a.Type.NUMBER),this.addOutput("ft³",a.Type.NUMBER),this.addOutput("gal",a.Type.NUMBER),this.settings.inputType={description:"Input Type",type:s.SettingType.DROPDOWN,config:{items:[{value:"L",text:"Litre (L)"},{value:"m³",text:"Cubic Metre (m³)"},{value:"ft³",text:"Cubic Foot (ft³)"},{value:"gal",text:"Gallon (gal)"}]},value:"L"},this.settings.precision={description:"Precision",type:s.SettingType.NUMBER,value:"4"}}onAdded(){this.setConversionFunction()}onInputUpdated(){this.onInputOrSettingsChange()}onAfterSettingsChange(){this.setConversionFunction(),this.onInputOrSettingsChange()}onInputOrSettingsChange(){const t=this.getInputData(0);if(!r.default.hasInput(t))return this.setOutputData(0,null),this.setOutputData(1,null),void this.setOutputData(2,null);const e=this.conversionFunction(t),i=Math.abs(this.settings.precision.value);this.setOutputData(0,Number(e[0]).toFixed(i)),this.setOutputData(1,Number(e[1]).toFixed(i)),this.setOutputData(2,Number(e[2]).toFixed(i))}setConversionFunction(){switch(this.settings.inputType.value){case"L":this.title="Volume Conversion (L)",this.inputs[0].name="L",this.outputs[0].name="m³",this.outputs[1].name="ft³",this.outputs[2].name="gal",this.conversionFunction=t=>{const e=[null,null,null];return e[0]=.001*t,e[1]=.0353147*t,e[2]=.2642*t,e};break;case"m³":this.title="Volume Conversion (m³)",this.inputs[0].name="m³",this.outputs[0].name="L",this.outputs[1].name="ft³",this.outputs[2].name="gal",this.conversionFunction=t=>{const e=[null,null,null];return e[0]=1e3*t,e[1]=35.3147*t,e[2]=264.2*t,e};break;case"ft³":this.title="Volume Conversion (ft³)",this.inputs[0].name="ft³",this.outputs[0].name="m³",this.outputs[1].name="L",this.outputs[2].name="gal",this.conversionFunction=t=>{const e=[null,null,null];return e[0]=.0283168*t,e[1]=28.3168*t,e[2]=7.481*t,e};break;case"gal":this.title="Volume Conversion (gal)",this.inputs[0].name="gal",this.outputs[0].name="m³",this.outputs[1].name="L",this.outputs[2].name="ft³",this.conversionFunction=t=>{const e=[null,null,null];return e[0]=.00378541*t,e[1]=3.78541*t,e[2]=.133681*t,e};break;default:this.title="Volume Conversion (L)",this.inputs[0].name="L",this.outputs[0].name="m³",this.outputs[1].name="ft³",this.outputs[2].name="gal",this.conversionFunction=t=>{const e=[null,null,null];return e[0]=.001*t,e[1]=.0353147*t,e[2]=.2642*t,e}}}}n.Container.registerNodeType("hvac/volume-conversion",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3),o=i(46);class u extends s.Node{constructor(){super(),this.psychro=new o,this.title="Temperature Conversion (C-> F)",this.description="This node converts between Temperature units: Celsius, Fahrenheit, Kelvin, and Rankine .  Input type can be selected from settings. Outputs will change based on selected input type.",this.addInput("input",a.Type.NUMBER),this.addOutput("output",a.Type.NUMBER),this.settings.convertType={description:"Conversion Type",type:s.SettingType.DROPDOWN,config:{items:[{value:"C_to_F",text:"Celsius to Fahrenheit"},{value:"C_to_K",text:"Celsius to Kelvin"},{value:"C_to_R",text:"Celsius to Rankine"},{value:"F_to_C",text:"Fahrenheit to Celsius"},{value:"F_to_K",text:"Fahrenheit to Kelvin"},{value:"F_to_R",text:"Fahrenheit to Rankine"},{value:"K_to_C",text:"Kelvin to Celsius"},{value:"K_to_F",text:"Kelvin to Fahrenheit"},{value:"K_to_R",text:"Kelvin to Rankine"},{value:"R_to_C",text:"Rankine to Celsius"},{value:"R_to_F",text:"Rankine to Fahrenheit"},{value:"R_to_K",text:"Rankine to Kelvin"}]},value:"C_to_F"},this.settings.precision={description:"Precision",type:s.SettingType.NUMBER,value:2}}onAdded(){this.setConversionFunction()}onInputUpdated(){this.onInputOrSettingsChange()}onAfterSettingsChange(){this.setConversionFunction(),this.onInputOrSettingsChange()}onInputOrSettingsChange(){const t=Number(this.getInputData(0));if(!r.default.hasInput(t))return void this.setOutputData(0,null);const e=Math.abs(this.settings.precision.value),i=Number(this.conversionFunction(t)).toFixed(e);this.setOutputData(0,i)}setConversionFunction(){const t=this.settings.convertType.value;switch(console.log(t,": converstion"),t){case"C_to_F":this.title="Temperature Conversion (C-> F)",this.conversionFunction=this.psychro.GetTFahrenheitFromTCelsius;break;case"C_to_K":this.title="Temperature Conversion (C-> K)",console.log("C_to_K"),this.conversionFunction=this.psychro.GetTKelvinFromTCelsius;break;case"C_to_R":this.title="Temperature Conversion (C-> R)",this.conversionFunction=this.psychro.GetTRankineFromTCelsius;break;case"F_to_C":this.title="Temperature Conversion (F-> C)",this.conversionFunction=this.psychro.GetTCelsiusFromTFahrenheit;break;case"F_to_K":this.title="Temperature Conversion (F-> K)",this.conversionFunction=this.psychro.GetTKelvinFromTFahrenheit;break;case"F_to_R":this.title="Temperature Conversion (F-> R)",this.conversionFunction=this.psychro.GetTRankineFromTFahrenheit;break;case"K_to_C":this.title="Temperature Conversion (K-> C)",this.conversionFunction=this.psychro.GetTCelsiusFromTKelvin;break;case"K_to_F":this.title="Temperature Conversion (K-> F)",this.conversionFunction=this.psychro.GetTFahrenheitFromTKelvin;break;case"K_to_R":this.title="Temperature Conversion (K-> R)",this.conversionFunction=this.psychro.GetTRankineFromTKelvin;break;case"R_to_C":this.title="Temperature Conversion (R-> C)",this.conversionFunction=this.psychro.GetTCelsiusFromTRankine;break;case"R_to_F":this.title="Temperature Conversion (R-> F)",this.conversionFunction=this.psychro.GetTFahrenheitFromTRankine;break;case"R_to_K":this.title="Temperature Conversion (R-> K)",this.conversionFunction=this.psychro.GetTKelvinFromTRankine;break;default:this.title="Temperature Conversion (C-> F)",this.conversionFunction=this.psychro.GetTFahrenheitFromTCelsius}}}n.Container.registerNodeType("hvac/temperature-conversion",u)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3),o=i(46);class u extends s.Node{constructor(){super(),this.psychro=new o,this.title="Atmospheric Pressure (Meters-> Pa)",this.description="This node converts 'altitude' to Atmospheric Pressure in various units: Pascal (Pa), Standard Atmosphere (atm), Bar (bar), and Pound-force per square inch (lbf/in2) . 'altitude' units can be set from settings to be in:  Metric/SI (Meters-> Pa),  or Imperial/IP (Feet-> Psi).",this.addInput("altitude",a.Type.NUMBER),this.addOutput("pressure",a.Type.NUMBER),this.settings.units={description:"Select Units",type:s.SettingType.DROPDOWN,config:{items:[{value:"SI",text:"Metric/SI (Meters-> Pa)"},{value:"IP",text:"Imperial/IP (Feet-> Psi)"}]},value:"SI"},this.settings.precision={description:"Precision",type:s.SettingType.NUMBER,value:2},this.psychro.SetUnitSystem(this.psychro.SI)}onAdded(){this.updateTitleAndFunction(),this.onInputUpdated()}onInputUpdated(){this.onInputOrSettingsChange()}onAfterSettingsChange(){this.updateTitleAndFunction(),this.onInputOrSettingsChange()}updateTitleAndFunction(){"IP"==this.settings.units.value?(this.title="Atmospheric Pressure (Feet-> Psi)",this.psychro.SetUnitSystem(this.psychro.IP)):(this.title="Atmospheric Pressure (Meters-> Pa)",this.psychro.SetUnitSystem(this.psychro.SI))}onInputOrSettingsChange(){const t=this.getInputData(0);if(!r.default.hasInput(t))return void this.setOutputData(0,null);const e=this.psychro.GetStandardAtmPressure(t),i=Math.abs(this.settings.precision.value);this.setOutputData(0,Number(e).toFixed(i))}}n.Container.registerNodeType("hvac/atmospheric-pressure",u)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3);class o extends s.Node{constructor(){super(),this.title="Pressure Conversion (Pa)",this.description="This node converts between Pressure units: Pascal (Pa), Standard Atmosphere (atm), Bar (bar), and Pound-force per square inch (lbf/in2) .  Input type can be selected from settings. Outputs will change based on selected input type.",this.addInput("Pa",a.Type.NUMBER),this.addOutput("atm",a.Type.NUMBER),this.addOutput("bar",a.Type.NUMBER),this.addOutput("lbf/in2",a.Type.NUMBER),this.settings.inputType={description:"Input Type",type:s.SettingType.DROPDOWN,config:{items:[{value:"Pa",text:"Pascal (Pa)"},{value:"atm",text:"Standard Atmosphere (atm)"},{value:"bar",text:"Bar (bar)"},{value:"lbf/in2",text:"Pound-force per square inch (lbf/in2)"}]},value:"Pa"},this.settings.precision={description:"Precision",type:s.SettingType.NUMBER,value:"2"}}onAdded(){this.setConversionFunction()}onInputUpdated(){this.onInputOrSettingsChange()}onAfterSettingsChange(){this.setConversionFunction(),this.onInputOrSettingsChange()}onInputOrSettingsChange(){const t=this.getInputData(0);if(!r.default.hasInput(t))return this.setOutputData(0,null),this.setOutputData(1,null),void this.setOutputData(2,null);const e=this.conversionFunction(t),i=Math.abs(this.settings.precision.value);this.setOutputData(0,Number(e[0]).toFixed(i)),this.setOutputData(1,Number(e[1]).toFixed(i)),this.setOutputData(2,Number(e[2]).toFixed(i))}setConversionFunction(){switch(this.settings.inputType.value){case"Pa":this.title="Pressure Conversion (Pa)",this.inputs[0].name="Pa",this.outputs[0].name="atm",this.outputs[1].name="bar",this.outputs[2].name="lbf/in2",this.conversionFunction=t=>{let e=[null,null,null];return e[0]=98692e-10*t,e[1]=1e-5*t,e[2]=145038e-9*t,e};break;case"atm":this.title="Pressure Conversion (atm)",this.inputs[0].name="atm",this.outputs[0].name="Pa",this.outputs[1].name="bar",this.outputs[2].name="lbf/in2",this.conversionFunction=t=>{let e=[null,null,null];return e[0]=101325*t,e[1]=1.01325*t,e[2]=14.6959*t,e};break;case"bar":this.title="Pressure Conversion (bar)",this.inputs[0].name="bar",this.outputs[0].name="Pa",this.outputs[1].name="atm",this.outputs[2].name="lbf/in2",this.conversionFunction=t=>{let e=[null,null,null];return e[0]=1e5*t,e[1]=.986923*t,e[2]=14.5038*t,e};break;case"lbf/in2":this.title="Pressure Conversion (lbf/in2)",this.inputs[0].name="lbf/in2",this.outputs[0].name="Pa",this.outputs[1].name="atm",this.outputs[2].name="bar",this.conversionFunction=t=>{let e=[null,null,null];return e[0]=6894.76*t,e[1]=.068046*t,e[2]=.0689476*t,e};break;default:this.title="Pressure Conversion (Pa)",this.inputs[0].name="Pa",this.outputs[0].name="atm",this.outputs[1].name="bar",this.outputs[2].name="lbf/in2",this.conversionFunction=t=>{let e=[null,null,null];return e[0]=98692e-10*t,e[1]=1e-5*t,e[2]=145038e-9*t,e}}}}n.Container.registerNodeType("hvac/pressure-conversion",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(6),a=i(1);class r extends n.FlexibleNode{constructor(){super(),this.dynamicInputsType=a.Type.STRING,this.title="Array Builder",this.description="Outputs an array of values based on the input values",this.addOutput("out",a.Type.STRING)}onAdded(){this.size=this.computeSize(),this.onInputUpdated()}onInputUpdated(){let t=[];for(let e=this.dynamicInputStartPosition;e<this.getInputsCount();e++)t.push(this.getInputData(e));this.setOutputData(0,t)}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("json/array-builder",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(13),r=i(1);class o extends s.Node{constructor(){super(),this.filterKeys=[],this.title="JSON builder",this.description="JSON builder",this.settings.definition={description:"payload definition (JSON)",type:s.SettingType.STRING,value:""},this.addInput("trigger",r.Type.BOOLEAN),this.addOutput("output",r.Type.JSON)}init(){this.addInputs()}onAdded(){this.filterKeys=this.getFilterKeys()}onInputUpdated(){let t={};for(let e=this.dynamicOutputStartPosition();e<this.getInputsCount();e++)t=Object.assign(Object.assign({},t),{[this.filterKeys[e-1]]:this.inputs[e].data});this.setOutputData(0,t)}onAfterSettingsChange(){this.updateInputs(),this.onInputUpdated()}updateInputs(){const t=this.getFilterKeys();if(a.isEqual(a.sortBy(t),a.sortBy(this.filterKeys)))return;const e=this.getInputsCount();for(let t=this.dynamicOutputStartPosition();t<e;t++)this.removeInput(t);this.addInputs()}addInputs(){this.filterKeys=this.getFilterKeys();for(let t=0;t<this.filterKeys.length;t++){let e=this.filterKeys[t];this.addInput(e.toString(),r.Type.ANY)}}getFilterKeys(){return this.settings.definition.value.replace(/\s+/g,"").split(",").filter(t=>!!t)}dynamicOutputStartPosition(){return 1}}e.JSONBuilderNode=o,n.Container.registerNodeType("json/json-builder",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(4);class o extends s.Node{constructor(){super(),this.filterKeys=[],this.title="JSON enum builder",this.description="JSON ENUM builder",this.addInput("trigger",a.Type.BOOLEAN),this.addInputWithSettings("definition",a.Type.JSON,'{"pointOne":22, "pointTwo":33}',"JSON value"),this.addOutput("output",a.Type.ANY),this.addOutput("valid-json",a.Type.BOOLEAN),this.settings.json={description:"Select output",type:s.SettingType.DROPDOWN,value:""}}onAdded(){this.onAfterSettingsChange()}onInputUpdated(){this.getInputData(0),this.onAfterSettingsChange()}onAfterSettingsChange(){const t=this.getInputData(1);if(!r.isNull(t))if(r.isJSON(t)&&!r.isEmpty(t)){const e=Object.entries(t).map(t=>({value:t[1],text:t[0]}));if(e){this.settings.json.config={items:e};const t=this.settings.json.value;this.setOutputData(0,t),this.setOutputData(1,!0),this.broadcastSettingsToClients()}}else this.setOutputData(1,!1)}}e.JSONEnumBuilderNode=o,n.Container.registerNodeType("json/json-enum-builder",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(47);class o extends s.Node{constructor(){super(),this.title="Json Filter",this.description="Filter a json object Example: msg.myKey",this.addInput("input",a.Type.STRING),this.addOutput("output",a.Type.STRING),this.addOutput("output-key",a.Type.STRING),this.settings.filter={description:"Example: msg.myKey",value:"myKey",type:s.SettingType.STRING}}onInputUpdated(){let t=this.getInputData(0);if(null===t)return this.setOutputData(0,null),void this.setOutputData(1,null);try{const e=JSON.parse(t),i=this.settings.filter.value;let s=r.default.findVal(e,i);this.setOutputData(0,s.value),this.setOutputData(1,s.valueWithKey)}catch(t){this.setOutputData(0,null),this.setOutputData(1,null)}}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("json/json-filter",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(47);var o;!function(t){t.Equals="Equals",t.NotEquals="Not Equal",t.GreaterThanEqual="Greater Than Equal",t.GreaterThan="Greater Than",t.LessThanEqual="Less Than Equal",t.LessThan="Less Than",t.Includes="Includes",t.startsWith="Starts With",t.endsWith="Ends With"}(o||(o={}));class u extends s.Node{constructor(){super(),this.title="Json Filter",this.description="This node provides several functions to compare a JSON object input, with a Boolean 'output'.  Available comparison functions are: Equals, Includes, Starts With, and Ends With.  The comparison function is selected from settings.",this.addInput("input",a.Type.STRING),this.addInputWithSettings("comparison-to",a.Type.STRING,"","Comparison Value"),this.addOutput("output",a.Type.STRING),this.addOutput("output-key",a.Type.STRING),this.addOutput("match",a.Type.BOOLEAN),this.settings.filter={description:"Example: msg.myKey",value:"myKey",type:s.SettingType.STRING},this.settings.function={description:"Comparison Type",type:s.SettingType.DROPDOWN,config:{items:[{value:o.Equals,text:o.Equals},{value:o.NotEquals,text:o.NotEquals},{value:o.GreaterThanEqual,text:o.GreaterThanEqual},{value:o.GreaterThan,text:o.GreaterThan},{value:o.LessThanEqual,text:o.LessThanEqual},{value:o.LessThan,text:o.LessThan},{value:o.Includes,text:o.Includes},{value:o.startsWith,text:o.startsWith},{value:o.endsWith,text:o.endsWith}]},value:o.Equals},this.settings.isNumber={description:"Comparison value is a number",value:!1,type:s.SettingType.BOOLEAN},this.settings.passNull={description:"Send null if not a match",value:!1,type:s.SettingType.BOOLEAN}}onAdded(){this.onAfterSettingsChange()}onInputUpdated(){const t=this.getInputData(0);if(null==t)return this.setOutputData(0,null),this.setOutputData(1,null),void this.setOutputData(2,null);try{const e=JSON.parse(t),i=this.settings.filter.value;let s=r.default.findVal(e,i);const n=this.getInputData(1);r.default.compare(this,s.value,n)?(this.setOutputData(0,s.value),this.setOutputData(1,s.valueWithKey),this.setOutputData(2,!0)):!0===this.settings.passNull.value?(this.setOutputData(0,null),this.setOutputData(1,null),this.setOutputData(2,!1)):this.setOutputData(2,!1)}catch(t){this.setOutputData(0,null),this.setOutputData(1,null),this.setOutputData(2,!0)}}onAfterSettingsChange(){this.onInputUpdated();const t=this.settings.function.value;this.title=`Json Comparison Compare (${t})`,this.broadcastTitleToClients()}}n.Container.registerNodeType("json/json-filter-compare",u)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(13),n=i(2),a=i(0),r=i(1);class o extends n.Node{constructor(){super(),this.filterKeys=[],this.title="Json Filter Multiple",this.description="Filter a json object to multiple outputs. There are two Output Update options for whether you want to update all keys or not (ALL: update as `null` when the key value will not be on the JSON, FOUND: don't update values and leave as is when key key value doesn't exist",this.addInput("input",r.Type.STRING),this.addOutput("error",r.Type.STRING),this.settings.filter={description:"Example: key1.innerKey1, key2, key2.innerKey2",value:"",type:n.SettingType.STRING},this.settings.outputsUpdate={description:"Outputs Update",type:n.SettingType.DROPDOWN,config:{items:[{value:"ALL",text:"ALL"},{value:"FOUND",text:"FOUND"}]},value:"ALL"}}init(){this.addOutputs()}onAdded(){this.filterKeys=this.getFilterKeys(),this.onAfterSettingsChange()}onInputUpdated(){let t=this.getInputData(0);if(null!=t)try{t=JSON.parse(t);for(let e=0;e<this.filterKeys.length;e++){let i=s.get(t,this.filterKeys[e]);void 0!==i?this.setOutputData(e+this.dynamicOutputStartPosition(),i):"ALL"===this.settings.outputsUpdate.value&&this.setOutputData(e+this.dynamicOutputStartPosition(),null)}this.setOutputData(0,null)}catch(t){this.setOutputData(0,t.toString())}else this.setOutputData(0,null)}onAfterSettingsChange(){this.updateOutputs(),this.updateNodeOutput(),this.updateOutputsLabels(),this.broadcastOutputsToClients(),this.onInputUpdated()}updateOutputs(){const t=this.getFilterKeys();if(s.isEqual(s.sortBy(t),s.sortBy(this.filterKeys)))return;const e=this.getOutputsCount();for(let t=this.dynamicOutputStartPosition();t<e;t++)this.removeOutput(t);this.addOutputs()}addOutputs(){this.filterKeys=this.getFilterKeys();for(let t=0;t<this.filterKeys.length;t++)this.addOutput(this.filterKeys[t],r.Type.ANY)}getFilterKeys(){return this.settings.filter.value.replace(/\s+/g,"").split(",").filter(t=>!!t)}dynamicOutputStartPosition(){return 1}}a.Container.registerNodeType("json/json-filter-multiple",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="JSON Checker",this.description="Checks 'input' for valid JSON format string.",this.addInput("input",a.Type.STRING),this.addOutput("output",a.Type.BOOLEAN),this.addOutput("msg",a.Type.STRING)}onAdded(){this.onInputUpdated()}isJson(t){t="string"!=typeof t?JSON.stringify(t):t;try{t=JSON.parse(t)}catch(t){return!1}return"object"==typeof t&&null!==t}onInputUpdated(){const t=this.getInputData(0);try{this.isJson(t)?(this.setOutputData(0,!0),this.setOutputData(1,"valid JSON")):(this.setOutputData(0,!1),this.setOutputData(1,"invalid JSON"))}catch(t){this.setOutputData(0,!1),this.setOutputData(1,t)}}}n.Container.registerNodeType("json/json-checker",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(4);class o extends s.Node{constructor(){super(),this.title="Json Parse",this.description="Return JSON.stringify or a JSON.parse",this.addInput("json-input",a.Type.JSON),this.addOutput("output",a.Type.JSON)}onInputUpdated(){let t=this.getInputData(0);if(!r.isNull(t))try{this.setOutputData(0,t)}catch(t){this.debugInfo(`JSON PARSE: try/catch , ${t}`)}}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("json/json-parse",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3);class o extends s.Node{constructor(){super(),this.title="Any data type Latch",this.description="The 'input' value (Input value can be any data type) is passed to 'output' when 'latch' transitions from 'false' to 'true'; The 'output' value is maintained until the next 'false' to 'true' transition.",this.addInput("input",a.Type.ANY),this.addInput("latch",a.Type.BOOLEAN),this.addOutput("output",a.Type.ANY),this.settings.passOnly={description:"Only if input value is updated",value:!1,type:s.SettingType.BOOLEAN}}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){this.settings.passOnly.value;let t=this.getInputData(1);if(null!=t){if(t!=this.lastLatchValue&&(this.lastLatchValue=t,1==t)){let t=this.getInputData(0);if(!r.default.hasInput(t))return void this.setOutputData(0,null);""===t&&(t=null),this.setOutputData(0,t)}}else this.setOutputData(0,null)}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("latch/any-latch",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3);class o extends s.Node{constructor(){super(),this.title="Boolean Latch",this.description="The Boolean 'input' value is passed to 'output' when 'latch' transitions from 'false' to 'true'; The 'output' value is maintained until the next 'false' to 'true' transition.",this.addInput("input",a.Type.BOOLEAN),this.addInput("latch",a.Type.BOOLEAN),this.addOutput("output",a.Type.BOOLEAN),this.setOutputData(0,!1)}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){let t=this.getInputData(1);if(null!=t){if(t!=this.lastLatchValue&&(this.lastLatchValue=t,1==t)){let t=this.getInputData(0);if(!r.default.hasInput(t))return void this.setOutputData(0,null);this.setOutputData(0,t)}}else this.setOutputData(0,null)}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("latch/bool-latch",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3);class o extends s.Node{constructor(){super(),this.title="Numeric Latch",this.description="The Numeric 'input' value is passed to 'output' when 'latch' transitions from 'false' to 'true'; The 'output' value is maintained until the next 'false' to 'true' transition.",this.addInput("input",a.Type.NUMBER),this.addInput("latch",a.Type.BOOLEAN),this.addOutput("output",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){let t=this.getInputData(1);if(null!=t){if(t!=this.lastLatchValue&&(this.lastLatchValue=t,1==t)){let t=this.getInputData(0);if(!r.default.hasInput(t))return void this.setOutputData(0,null);""===t&&(t=null),this.setOutputData(0,t)}}else this.setOutputData(0,null)}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("latch/num-latch",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3);class o extends s.Node{constructor(){super(),this.title="String Latch",this.description="The String 'input' value is passed to 'output' when 'latch' transitions from 'false' to 'true'; The 'output' value is maintained until the next 'false' to 'true' transition.",this.addInput("input",a.Type.STRING),this.addInput("latch",a.Type.BOOLEAN),this.addOutput("output",a.Type.STRING)}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){let t=this.getInputData(1);if(null!=t){if(t!=this.lastLatchValue&&(this.lastLatchValue=t,1==t)){let t=this.getInputData(0);if(!r.default.hasInput(t))return void this.setOutputData(0,null);""===t&&(t=null),this.setOutputData(0,t)}}else this.setOutputData(0,null)}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("latch/string-latch",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.out=null,this.title="Set Reset",this.description="'output' will change to 'true' when 'set' is 'true', and 'reset' is 'false'.  There are 2 cases when 'output' will change to 'false': 1) 'reset' is 'true', and 'set is 'false'.  2) If the 'Reset when set=true' setting is turned ON (Default), and 'reset' and 'set' are both 'true' .  If this setting is turned OFF, 'output' will only change to 'false' under Case 1) conditions. ",this.addInput("set",a.Type.BOOLEAN),this.addInput("reset",a.Type.BOOLEAN),this.addOutput("output",a.Type.BOOLEAN),this.settings.lock={description:"Reset when set=true",value:!0,type:s.SettingType.BOOLEAN}}onAdded(){this.setOutputData(0,!1),this.onInputUpdated()}onExecute(){}onInputUpdated(){let t=this.inputs[0].data,e=this.inputs[1].data,i=this.settings.lock.value,s=this.out;t&&!e?(this.setOutputData(0,!0),this.out=!0):i&&e&&s&&t?(this.setOutputData(0,!1),this.out=!1):!t&&s&&e&&(this.setOutputData(0,!1),this.out=!1)}}n.Container.registerNodeType("latch/set-reset",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(6),a=i(1);class r extends n.FlexibleNode{constructor(){super(),this.dynamicInputsType=a.Type.NUMBER,this.title="Add",this.description="('output' = 'in 1' + 'in 2' + ...) 'output' is the result of adding of all Numeric inputs. Input values can be set from settings. The number of inputs is configurable from settings.",this.addOutput("output",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){const t=this.getInputsCount();let e=0;for(let i=this.dynamicInputStartPosition;i<t;i++)e+=this.getInputData(i);this.setOutputData(0,e)}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("math/add",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(6),a=i(1);class r extends n.FlexibleNode{constructor(){super(),this.dynamicInputsType=a.Type.NUMBER,this.title="Subtract",this.description="('output' = 'in 1' - 'in 2' - ...)  'output' is the result of subtracting each Numeric input in order. Input values can be set from settings. The number of inputs is configurable from settings.",this.addOutput("output",a.Type.NUMBER)}onAdded(){this.size=this.computeSize(),this.onInputUpdated()}onExecute(){}onInputUpdated(){const t=this.getInputsCount();let e=this.getInputData(0);for(let i=this.dynamicInputStartPosition+1;i<t;i++)e-=this.getInputData(i);this.setOutputData(0,e)}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("math/subtract",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(6),a=i(1);class r extends n.FlexibleNode{constructor(){super(),this.dynamicInputsType=a.Type.NUMBER,this.title="Multiply",this.description="('output' = 'in 1' * 'in 2' * ...)  'output' is the result of multiplying each Numeric input in order. Input values can be set from settings. The number of inputs is configurable from settings.",this.addOutput("output",a.Type.NUMBER)}onAdded(){this.size=this.computeSize(),this.onInputUpdated()}onExecute(){}onInputUpdated(){const t=this.getInputsCount();let e=1;for(let i=this.dynamicInputStartPosition;i<t;i++)e*=this.getInputData(i);this.setOutputData(0,e)}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("math/multiply",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(6),a=i(1);class r extends n.FlexibleNode{constructor(){super(),this.dynamicInputsType=a.Type.NUMBER,this.title="Divide",this.description="('output' = 'in 1' / 'in 2' / ...)  'output' is the result of dividing each Numeric input in order. Input values can be set from settings. The number of inputs is configurable from settings.",this.addOutput("output",a.Type.NUMBER)}onAdded(){this.size=this.computeSize(),this.onInputUpdated()}onExecute(){}onInputUpdated(){const t=this.getInputsCount();let e=1,i=0;for(let s=this.dynamicInputStartPosition;s<t;s++){if(i=this.getInputData(s),!i)return void this.setOutputData(0,0);s===this.dynamicInputStartPosition?e=i:e/=i}this.setOutputData(0,e)}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("math/divide",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(22),r=i(1);a.default.uiMainIcon,a.default.uiMainColour;class o extends s.Node{constructor(){super(),this.title="Absolute",this.description="('output' = |'in 1'|) 'output' is the absolute value (positive) of the Numeric input.",this.addInput("input",r.Type.NUMBER),this.addOutput("output",r.Type.NUMBER)}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){let t=this.getInputData(0);null!=t?this.setOutputData(0,Math.abs(t)):this.setOutputData(0,null)}}n.Container.registerNodeType("math/absolute",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Modulus",this.description="('output' = 'in 1' % 'in 2') 'output' is the modulus of the Numeric inputs. Input values can be set from settings.",this.addInputWithSettings("in 1",a.Type.NUMBER,0,"in 1"),this.addInputWithSettings("in 2",a.Type.NUMBER,1,"in 2"),this.addOutput("output",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){const t=this.getInputData(0),e=this.getInputData(1);null!=t&&null!=e?this.setOutputData(0,t%e):this.setOutputData(0,null)}}n.Container.registerNodeType("math/modulus",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Power",this.description="('output' = 'in 1' ^ 'in 2') 'output' is the result of 'in 1' to the power of 'in 2'. Input values can be set from settings.",this.addInputWithSettings("in 1",a.Type.NUMBER,0,"in 1"),this.addInputWithSettings("in 2",a.Type.NUMBER,1,"in 2"),this.addOutput("output",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){let t=this.getInputData(0),e=this.getInputData(1);null!=t&&null!=e?this.setOutputData(0,Math.pow(t,e)):this.setOutputData(0,null)}}n.Container.registerNodeType("math/power",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Acos",this.description="'acos(x)' is the result of arccos('x').  The Inverse Cosine function of input 'x'.",this.addInput("x",a.Type.NUMBER),this.addOutput("acos(x)",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);null!=t?this.setOutputData(0,Math.acos(t)):this.setOutputData(0,null)}}n.Container.registerNodeType("math-advanced/acos",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Asin",this.description="'asin(x)' is the result of arcsin('x').  The Inverse Sine function of input 'x'.",this.addInput("x",a.Type.NUMBER),this.addOutput("asin(x)",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);null!=t?this.setOutputData(0,Math.asin(t)):this.setOutputData(0,null)}}n.Container.registerNodeType("math-advanced/asin",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Atan",this.description="'atan(x)' is the result of arctan('x').  The Inverse Tangent function of input 'x'.",this.addInput("x",a.Type.NUMBER),this.addOutput("atan(x)",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);null!=t?this.setOutputData(0,Math.atan(t)):this.setOutputData(0,null)}}n.Container.registerNodeType("math-advanced/atan",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Cbrt",this.description="'cbrt(x)' is the Cubic Root of input 'x'.",this.addInput("x",a.Type.NUMBER),this.addOutput("cbrt(x)",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);null!=t?this.setOutputData(0,Math.cbrt(t)):this.setOutputData(0,null)}}n.Container.registerNodeType("math-advanced/cbrt",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Cos",this.description="'cos(x)' is the result of cos('x').  The Cosine function of input 'x'.",this.addInput("x",a.Type.NUMBER),this.addOutput("cos(x)",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);null!=t?this.setOutputData(0,Math.cos(t)):this.setOutputData(0,null)}}n.Container.registerNodeType("math-advanced/cos",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Exp",this.description="('exp(x)' = E^'x') 'exp(x)' is the result of raising E (Euler's Number 2.71828) to the power of 'x'.  The Natural Exponential function.",this.addInput("x",a.Type.NUMBER),this.addOutput("exp(x)",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);null!=t?this.setOutputData(0,Math.exp(t)):this.setOutputData(0,null)}}n.Container.registerNodeType("math-advanced/exp",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Logarithm (Base E)",this.description="'log(x)' is the result of log('x') with base E (Euler's Number 2.71828).  The Natural Logarithmic function of input 'x'.",this.addInput("x",a.Type.NUMBER),this.addOutput("log(x)",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);null!=t?this.setOutputData(0,Math.log(t)):this.setOutputData(0,null)}}n.Container.registerNodeType("math-advanced/log",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Logarithm (Base 10)",this.description="'log10(x)' is the result of log('x') with base 10.",this.addInput("x",a.Type.NUMBER),this.addOutput("log10(x)",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);null!=t?this.setOutputData(0,Math.log10(t)):this.setOutputData(0,null)}}n.Container.registerNodeType("math-advanced/log10",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Sin",this.description="'sin(x)' is the result of sin('x').  The Sine function of input 'x'.",this.addInput("x",a.Type.NUMBER),this.addOutput("sin(x)",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);null!=t?this.setOutputData(0,Math.sin(t)):this.setOutputData(0,null)}}n.Container.registerNodeType("math-advanced/sin",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Sqrt",this.description="'sqrt(x)' is the Square Root of input 'x'.",this.addInput("x",a.Type.NUMBER),this.addOutput("sqrt(x)",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);null!=t?this.setOutputData(0,Math.sqrt(t)):this.setOutputData(0,null)}}n.Container.registerNodeType("math-advanced/sqrt",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Tan",this.description="'tan(x)' is the result of tan('x').  The Tangent function of input 'x'.",this.addInput("x",a.Type.NUMBER),this.addOutput("tan(x)",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);null!=t?this.setOutputData(0,Math.tan(t)):this.setOutputData(0,null)}}n.Container.registerNodeType("math-advanced/tan",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(6),a=i(1);class r extends n.FlexibleNode{constructor(){super(),this.dynamicInputsType=a.Type.NUMBER,super.dynamicInputStartPosition=1,this.title="Trigger Add",this.description="When 'trigger' transitions from 'false' to 'true', 'output' is updated with the result of the addition of all inputs ('in 1' + 'in 2' + ...). Input values can be set from settings. The number of inputs is configurable from settings.",this.addInput("trigger",a.Type.BOOLEAN),this.addOutput("output",a.Type.NUMBER)}onAdded(){this.size=this.computeSize(),this.lastTrigger=!1,this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(0);if(t&&!this.lastTrigger){const t=this.getInputsCount();let e=0;for(let i=this.dynamicInputStartPosition;i<t;i++)e+=this.getInputData(i);this.setOutputData(0,e)}this.lastTrigger=t}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("math-trigger/trigger-add",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(6),a=i(1);class r extends n.FlexibleNode{constructor(){super(),this.dynamicInputsType=a.Type.NUMBER,super.dynamicInputStartPosition=1,this.title="Trigger Subtract",this.description="When 'trigger' transitions from 'false' to 'true', 'output' is updated with the result of the subtraction of all inputs ('in 1' - 'in 2' - ...). Input values can be set from settings. The number of inputs is configurable from settings.",this.addInput("trigger",a.Type.BOOLEAN),this.addOutput("output",a.Type.NUMBER)}onAdded(){this.lastTrigger=!1,this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(0);if(t&&!this.lastTrigger){const t=this.getInputsCount();let e=this.getInputData(1);for(let i=this.dynamicInputStartPosition+1;i<t;i++)e-=this.getInputData(i);this.setOutputData(0,e)}this.lastTrigger=t}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("math-trigger/trigger-subtract",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(6),a=i(1);class r extends n.FlexibleNode{constructor(){super(),this.dynamicInputsType=a.Type.NUMBER,super.dynamicInputStartPosition=1,this.title="Trigger Multiply",this.description="When 'trigger' transitions from 'false' to 'true', 'output' is updated with the result of the multiplication of all inputs ('in 1' * 'in 2' * ...). Input values can be set from settings. The number of inputs is configurable from settings.",this.addInput("trigger",a.Type.BOOLEAN),this.addOutput("output",a.Type.NUMBER)}onAdded(){this.size=this.computeSize(),this.lastTrigger=!1,this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(0);if(t&&!this.lastTrigger){const t=this.getInputsCount();let e=1;for(let i=this.dynamicInputStartPosition;i<t;i++)e*=this.getInputData(i);this.setOutputData(0,e)}this.lastTrigger=t}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("math-trigger/trigger-multiply",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(6),a=i(1);class r extends n.FlexibleNode{constructor(){super(),this.dynamicInputsType=a.Type.NUMBER,super.dynamicInputStartPosition=1,this.title="Trigger Divide",this.description="When 'trigger' transitions from 'false' to 'true', 'output' is updated with the result of the division of all inputs ('in 1' / 'in 2' / ...). Input values can be set from settings. The number of inputs is configurable from settings.",this.addInput("trigger",a.Type.BOOLEAN),this.addOutput("output",a.Type.NUMBER)}onAdded(){this.size=this.computeSize(),this.lastTrigger=!1,this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(0);if(t&&!this.lastTrigger){const t=this.getInputsCount();let e=1,i=0;for(let s=this.dynamicInputStartPosition;s<t;s++){if(i=this.getInputData(s),0===i)return void this.setOutputData(0,0);s===this.dynamicInputStartPosition?e=i:e/=i}this.setOutputData(0,e)}this.lastTrigger=t}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("math-trigger/trigger-divide",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Trigger Modulus",this.description="When 'trigger' transitions from 'false' to 'true', 'output' is updated with the result of the modulus of the inputs ('in 1' % 'in 2'). Input values can be set from settings. ",this.addInput("trigger",a.Type.BOOLEAN),this.addInputWithSettings("in 1",a.Type.NUMBER,0,"in 1"),this.addInputWithSettings("in 2",a.Type.NUMBER,2,"in 2"),this.addOutput("output",a.Type.NUMBER)}onAdded(){this.lastTrigger=!1,this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(0);if(t&&!this.lastTrigger){let t=this.getInputData(1),e=this.getInputData(2);null!=t&&null!=e?this.setOutputData(0,t%e):this.setOutputData(0,null)}this.lastTrigger=t}dynamicInputStartPosition(){return 1}}n.Container.registerNodeType("math-trigger/trigger-modulus",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Trigger Power",this.description="When 'trigger' transitions from 'false' to 'true', 'output' is updated with the result of 'in1' to the power of 'in2' ('in 1' ^ 'in 2'). Input values can be set from settings. ",this.addInput("trigger",a.Type.BOOLEAN),this.addInputWithSettings("in 1",a.Type.NUMBER,0,"in 1"),this.addInputWithSettings("in 2",a.Type.NUMBER,2,"in 2"),this.addOutput("output",a.Type.NUMBER)}onAdded(){this.lastTrigger=!1,this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(0);if(t&&!this.lastTrigger){const t=this.getInputData(1),e=this.getInputData(2);null!=t&&null!=e?this.setOutputData(0,Math.pow(t,e)):this.setOutputData(0,null)}this.lastTrigger=t}dynamicInputStartPosition(){return 1}}n.Container.registerNodeType("math-trigger/trigger-power",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(2),a=i(1),r=i(4),o=i(253);class u extends n.Node{constructor(){super(),this.outputsCount=0,this.title="Geohash decode/encode",this.description="A function that encodes lat,lon to and from a geo-hash",this.addInputWithSettings("encode",a.Type.JSON,"151.1677778, -34.0316667","Lon at Lat Values Encode"),this.addInputWithSettings("decode",a.Type.STRING,"ww8p1r4t8, ","Hash Decode"),this.addOutput("encode-out",a.Type.STRING),this.addOutput("decode-out",a.Type.JSON)}onAdded(){this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(0),e=this.getInputData(1);r.isNull(t)||this.setOutputData(0,o.encode(parseInt(t[0]),parseInt(t[1]))),r.isNull(e)||this.setOutputData(1,o.decode(e))}onAfterSettingsChange(){this.onInputUpdated()}}s.Container.registerNodeType("miscellaneous/geo-hash",u)},function(t,e){t.exports=require("ngeohash")},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(6),r=i(1);class o extends a.FlexibleNode{constructor(){super(),this.dynamicOutputsExist=!0,this.dynamicInputsExist=!1,this.dynamicSettingsExist=!0,super.dynamicOutputsType=r.Type.NUMBER,this.title="Numeric Series Generator",this.description="",this.addInputWithSettings("startVal",r.Type.NUMBER,0,"Start Value"),this.addInputWithSettings("addVal",r.Type.NUMBER,1,"Added Value "),this.settings.factor={description:"Multiply factor",value:0,type:s.SettingType.NUMBER}}onInputUpdated(){let t=this.getInputData(0),e=this.settings.factor.value;if(void 0!==t&&"number"==typeof t){const i=this.getOutputsCount();let s=this.getInputData(1);"number"!=typeof s&&(s=1);for(let n=0;n<i;n++)this.setOutputData(n,n+t*s+n*e)}}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}e.NumSeriesGenerator=o,n.Container.registerNodeType("miscellaneous/num-series-generator",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(2),a=i(1),r=i(3);class o extends n.Node{constructor(){super(),this.outputsCount=0,this.title="Append To Strings",this.description="",this.addInputWithSettings("prepend",a.Type.STRING,"","Prepend Value"),this.addInputWithSettings("append",a.Type.STRING,"","Append Value"),this.settings.outputs_count={description:"Number of Outputs",value:1,type:n.SettingType.NUMBER},this.setSettingsConfig({groups:[{outputs_count:{}}]})}init(){this.changeOutputsAndSettings()}onCreated(){this.renameInputsOutputs()}onAdded(){this.outputsCount=this.settings.outputs_count.value,this.onAfterSettingsChange()}onInputUpdated(){this.renameInputsOutputs()}onAfterSettingsChange(){this.changeOutputsAndSettings(),this.renameInputsOutputs(),this.container.db&&this.container.db.updateNode(this.id,this.container.id,{$set:{outputs:this.outputs,settings:this.settings}})}changeOutputsAndSettings(){let t=this.settings.outputs_count.value;t=r.default.clamp(t,1,100),this.settings.outputs_count.value=t,this.outputsCount!=t&&this.changeMyOutputsCount(t)}changeMyOutputsCount(t){const e=t-this.outputsCount;if(0!=e){if(this.changeOutputsCount(t+1,a.Type.STRING),e>0)for(let e=this.outputsCount+1;e<=t;e++){this.settings["output"+e]={description:"Output "+e,value:"",type:n.SettingType.STRING};for(let e=this.outputsCount+1;e<=t;e++)this.settingConfigs.groups.push({[`output${e}`]:{weight:5}})}else if(e<0)for(let e=this.outputsCount;e>t;e--)delete this.settings["output"+e],this.settingConfigs.groups.pop();this.outputsCount=t}}renameInputsOutputs(){const t=this.getInputData(0),e=this.getInputData(1);for(let i=1;i<=this.outputsCount;i++){const s=this.settings["output"+i].value||"";this.outputs[i].name=i+" | "+s,this.setOutputData(i,""+t+s+e)}}}s.Container.registerNodeType("miscellaneous/append-to-strings",o)},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(2),a=i(0),r=i(1),o=i(3),u=i(10),d=i(17),p=i(5);class l extends n.Node{constructor(){super(),this.title="Login",this.description="This node is used to authenticate with Nube devices.  Once successfully authenticated, the other Nube-API nodes will have their settings updated with values from the connected Nube devices. ‘Host’ setting is the IP address of the Nube controller to connect to.  ‘Port’ setting is the port at ‘Host’ (standard port is 4000). ‘Username’ setting is the username for the ‘Host’ (standard is ‘admin’).  ‘Password’ setting is the password for the ‘Host’; this password is supplied with each Nube controller.  ‘Interval’ is the authentication frequency (minimum 10 mins). 'interval’ units can be configured from settings.  Maximum ‘interval’ setting is 587 hours.",this.settings.host={description:"Host",value:"",type:n.SettingType.STRING},this.settings.port={description:"Port",value:"",type:n.SettingType.STRING},this.settings.username={description:"Username",value:"",type:n.SettingType.STRING},this.settings.password={description:"Password",value:"",type:n.SettingType.PASSWORD},this.addInput("trigger",r.Type.BOOLEAN),this.addInputWithSettings("interval",r.Type.NUMBER,10,"Interval(minimum 10 minutes)",!1),this.addOutput("jwt",r.Type.STRING),this.addOutput("error",r.Type.STRING),this.settings.time={description:"Units",type:n.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"minutes"},this.setSettingsConfig({groups:[{interval:{weight:2},time:{}}]})}onAdded(){this.setExecuteInterval(),this.inputs[1].name=`[interval] (${this.settings.time.value})`}onInputUpdated(){return s(this,void 0,void 0,(function*(){this.setExecuteInterval(),this.getInputData(0)&&this.inputs[0].updated&&(yield this.getJwtToken())}))}onExecute(){return s(this,void 0,void 0,(function*(){this.side===a.Side.server&&(yield this.getJwtToken())}))}onAfterSettingsChange(){return s(this,void 0,void 0,(function*(){this.inputs[1].name=`[interval] (${this.settings.time.value})`,this.setExecuteInterval(),yield this.getJwtToken()}))}setExecuteInterval(){let t=this.getInputData(1);t=p.default.timeConvert(t,this.settings.time.value),t=Math.max(t,6e5),this.EXECUTE_INTERVAL=t}onRemoved(){if(this.side===a.Side.server)return new Promise((t,e)=>{this.container&&this.container.db.removeUser({nodeId:this.id},i=>{i?e(i):t()})})}getJwtToken(){return s(this,void 0,void 0,(function*(){if(this.side!==a.Side.server)return;const t=this.settings.host.value,e=this.settings.port.value,i=`${o.default.buildUrl(t,e)}/user/login`,s=this.settings.username.value,n=this.settings.password.value,r={username:s,password:d.default.decrypt(n)};try{const s=yield u.default.post(i,r),n={nodeId:this.id},a={jwt:s.data.token,host:t,port:e,nodeId:this.id};yield this.container.db.addOrUpdateUser(n,a),this.setOutputData(0,s.data.token),this.setOutputData(1,null)}catch(t){this.setOutputData(0,null),this.setOutputData(1,t.message),yield this.onRemoved()}}))}}a.Container.registerNodeType("nube/login",l)},function(t,e){t.exports=require("crypto-js")},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(0),a=i(1),r=i(70),o=i(2),u=i(5);class d extends r.default{constructor(){super(),this.dynamicInputsExist=!1,this.dynamicOutputsExist=!1,this.dynamicSettingsExist=!1,this.title="Nube API Input",this.description="This node is used to fetch point values from Nube devices.  Once the nube/login node is successfully authenticated, the API-Input nodes will have their settings updated with values from the connected Nube devices. Connected Nube devices can be selected from the ‘Select URL‘ setting dropdown.  ‘Select Point’ setting dropdown will be populated with the available points from the selected URL.  Ticking the ‘Show Advanced Options’ setting will add outputs to the node with extra information about the selected point.   ‘Interval’ is the update frequency (minimum 1 second). 'interval’ units can be configured from settings.  Maximum ‘interval’ setting is 587 hours.",this.addInput("trigger",a.Type.BOOLEAN),this.addInputWithSettings("interval",a.Type.NUMBER,5,"Interval (minimum 1 second)",!1),this.addOutput("name",a.Type.STRING),this.addOutput("value",a.Type.STRING),this.addOutput("lastUpdate",a.Type.STRING),this.addOutput("error",a.Type.STRING),this.settings.time={description:"Units",type:o.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"seconds"},this.setSettingsConfig({groups:[{interval:{weight:2},time:{}}]}),this.settings.advancedSetting={description:"Show Advanced Options",value:this.advancedSetting,type:o.SettingType.BOOLEAN}}init(){super.init(),this.updateNodeOutputs()}onAdded(){super.onAdded(),this.inputs[1].name=`[interval] (${this.settings.time.value})`,this.setExecuteInterval()}reload(){return s(this,void 0,void 0,(function*(){try{const t=yield this.fetchConnection(),e=yield this.fetchPoints(t),i=yield this.fetchPointValue(t,e);this.setOutputs(i)}catch(t){this.setErrorOutputs(t.message)}return null}))}onExecute(){return s(this,void 0,void 0,(function*(){this.side===n.Side.server&&(yield this.reload())}))}onAfterSettingsChange(){const t=Object.create(null,{onInputUpdated:{get:()=>super.onInputUpdated}});return s(this,void 0,void 0,(function*(){this.inputs[1].name=`[interval] (${this.settings.time.value})`,this.side===n.Side.server&&(this.setExecuteInterval(),this.updateNodeOutputs(),this.updateNodeOutput(),this.broadcastOutputsToClients(),yield t.onInputUpdated.call(this))}))}onInputUpdated(){return s(this,void 0,void 0,(function*(){if(this.side!==n.Side.server)return;this.setExecuteInterval(),this.getInputData(0)&&this.inputs[0].updated&&(yield this.reload()),this.updateTitle(),this.broadcastTitleToClients()}))}setExecuteInterval(){let t=this.getInputData(1);t=u.default.timeConvert(t,this.settings.time.value),t=Math.max(t,1e3),this.EXECUTE_INTERVAL=t}updateTitle(){this.settings.point.value?this.title=`Nube API Input (${this.settings.point.value})`:this.title="Nube API Input (unconfigured)"}updateNodeOutputs(){this.advancedSetting=this.settings.advancedSetting.value,this.advancedSetting&&!this.previousAdvancedSetting?(this.removeOutput(3),this.addOutput("unit",a.Type.STRING),this.addOutput("kind",a.Type.STRING),this.addOutput("type",a.Type.STRING),this.addOutput("scale",a.Type.STRING),this.addOutput("historyType",a.Type.STRING),this.addOutput("asObject",a.Type.JSON),this.addOutput("error",a.Type.STRING)):!this.advancedSetting&&this.previousAdvancedSetting&&(this.removeOutput(3),this.removeOutput(4),this.removeOutput(5),this.removeOutput(6),this.removeOutput(7),this.removeOutput(8),this.removeOutput(9),this.addOutput("error",a.Type.STRING)),this.previousAdvancedSetting=this.advancedSetting}setOutputs(t){this.advancedSetting?(this.setOutputData(0,t.name,!0),this.setOutputData(1,t.value,!0),this.setOutputData(2,this.formattedExecutionTime()),this.setOutputData(3,t.unit,!0),this.setOutputData(4,t.kind,!0),this.setOutputData(5,t.type,!0),this.setOutputData(6,t.scale,!0),this.setOutputData(7,t.historySettings.type,!0),this.setOutputData(8,t,!0),this.setOutputData(9,null,!0)):(this.setOutputData(0,t.name,!0),this.setOutputData(1,t.value,!0),this.setOutputData(2,this.formattedExecutionTime()),this.setOutputData(3,null,!0))}setErrorOutputs(t){this.advancedSetting?(this.setOutputData(0,null,!0),this.setOutputData(1,null,!0),this.setOutputData(2,this.formattedExecutionTime()),this.setOutputData(3,null,!0),this.setOutputData(4,null,!0),this.setOutputData(5,null,!0),this.setOutputData(6,null,!0),this.setOutputData(7,null,!0),this.setOutputData(8,null,!0),this.setOutputData(9,t)):(this.setOutputData(0,null,!0),this.setOutputData(1,null,!0),this.setOutputData(2,this.formattedExecutionTime()),this.setOutputData(3,t))}}n.Container.registerNodeType("nube/api-input",d)},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(0),a=i(1),r=i(3),o=i(10),u=i(70),d=i(2);class p extends u.default{constructor(){super(),this.dynamicInputsType=a.Type.STRING,this.title="Nube API Output",this.description="This node is used to write to points on connected Nube devices.  Once the nube/login node is successfully authenticated, the API-Output nodes will have their settings updated with values from the connected Nube devices. Connected Nube devices can be selected from the ‘Select URL‘ setting dropdown.  ‘Select Point’ setting dropdown will be populated with the available points from the selected URL.  Nube points have 16 priority levels to write to.  The ‘Priority Level’ setting is the priority that the node will write on.  The ‘in #’ inputs act as a separate priority array; the highest non-null ‘in #’ input will be written to the Nube point on the ‘Priority Level’ setting’.  The number of inputs can be modified from the ‘Inputs Count’ setting. Ticking the ‘Show Advanced Options’ setting will add outputs to the node with extra information about the selected point.",this.addOutput("outValue",a.Type.STRING),this.addOutput("lastUpdate",a.Type.STRING),this.addOutput("error",a.Type.STRING),this.settings.priorityLevel={description:"Priority Level",type:d.SettingType.DROPDOWN,config:{items:this.getConfigItems()},value:16},this.settings.advancedSetting={description:"Show Advanced Options",value:this.advancedSetting,type:d.SettingType.BOOLEAN}}init(){super.init(),this.updateNodeOutputs()}reload(){return s(this,void 0,void 0,(function*(){try{const t=yield this.fetchConnection(),e=yield this.fetchPoints(t);yield this.writePointValue(t);const i=yield this.fetchPointValue(t,e);this.setOutputs(i)}catch(t){this.setErrorOutputs(t.message)}return null}))}onAfterSettingsChange(){const t=Object.create(null,{onAfterSettingsChange:{get:()=>super.onAfterSettingsChange},onInputUpdated:{get:()=>super.onInputUpdated}});return s(this,void 0,void 0,(function*(){t.onAfterSettingsChange.call(this),yield this.onInputUpdated(),this.updateNodeOutputs(),this.updateNodeOutput(),this.broadcastOutputsToClients(),yield t.onInputUpdated.call(this)}))}updateTitle(){this.settings.point.value?this.title=`Nube API Output (${this.settings.point.value})`:this.title="Nube API Output (unconfigured)"}filterPoint(t){return t.filter(t=>!new RegExp("^DI|UI").test(t))}setOutputs(t){this.advancedSetting?(this.setOutputData(0,t.value),this.setOutputData(1,this.formattedExecutionTime()),this.setOutputData(2,t),this.setOutputData(3,null)):(this.setOutputData(0,t.value),this.setOutputData(1,this.formattedExecutionTime()),this.setOutputData(2,null))}setErrorOutputs(t){this.advancedSetting?(this.setOutputData(0,null),this.setOutputData(1,this.formattedExecutionTime()),this.setOutputData(2,null),this.setOutputData(3,t)):(this.setOutputData(0,null),this.setOutputData(1,this.formattedExecutionTime()),this.setOutputData(2,t))}getConfigItems(){const t=[];return Array(16).fill(null).map((e,i)=>t.push({value:i+1,text:(i+1).toString()})),t}updateNodeOutputs(){this.advancedSetting=this.settings.advancedSetting.value,this.advancedSetting&&!this.previousAdvancedSetting?(this.removeOutput(2),this.addOutput("asObject",a.Type.JSON),this.addOutput("error",a.Type.STRING)):!this.advancedSetting&&this.previousAdvancedSetting&&(this.removeOutput(3),this.removeOutput(2),this.addOutput("error",a.Type.STRING)),this.previousAdvancedSetting=this.advancedSetting}writePointValue({jwt:t,host:e,port:i}){return s(this,void 0,void 0,(function*(){const s=this.settings.point.value,n=`${r.default.buildUrl(e,i)}/points/${s}/value`,a=this.getInputAsJsonString();return yield o.default.put(n,a,{headers:{Authorization:t,"Content-Type":"application/json"}}),null}))}getInputAsJsonString(){const t=this.settings.priorityLevel.value;for(let e=0;e<this.getInputsCount();e++){let i=this.getInputData(e);if(null!=i&&""!==i)return{value:i,priority:t}}return{value:null,priority:t}}}n.Container.registerNodeType("nube/api-output",p)},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(0),a=i(1),r=i(261),o=i(3),u=i(10),d=i(2),p=i(5);class l extends r.BaseEdge{constructor(){super(),this.suffixApi="/schedules",this.title="Api Schedule",this.description="This node is used to fetch schedules from Nube devices.  Once the nube/login node is successfully authenticated, the API-Schedule nodes will have their settings updated with values from the connected Nube devices.  API-Schedule node will output all schedules from the device; Specific schedule selection is done on the ‘Schedule-Checker’ node.  ‘interval’ is how often the node will re-check for schedule changes (minimum 30 seconds).  It is recommended that the API-Schedule node is used in conjunction with a filter/prevent-null node to maintain the last successful schedule read in the case that the API-Login node becomes disconnected. 'interval’ units can be configured from settings.  Maximum ‘interval’ setting is 587 hours.",this.addInput("trigger",a.Type.BOOLEAN),this.addInputWithSettings("interval",a.Type.NUMBER,60,"Interval (minimum 30 seconds)",!1),this.addOutput("data",a.Type.JSON),this.addOutput("error",a.Type.STRING),this.settings.time={description:"Units",type:d.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"seconds"},this.setSettingsConfig({groups:[{interval:{weight:2},time:{}}]})}onAdded(){this.inputs[1].name=`[interval] (${this.settings.time.value})`,this.setExecuteInterval()}onAfterSettingsChange(){this.inputs[1].name=`[interval] (${this.settings.time.value})`,this.setExecuteInterval()}onInputUpdated(){return s(this,void 0,void 0,(function*(){if(this.side!==n.Side.server)return;this.setExecuteInterval(),this.getInputData(0)&&this.inputs[0].updated&&(yield this.onExecute())}))}onExecute(){return s(this,void 0,void 0,(function*(){try{const t=yield this.fetchConnection(this.suffixApi),e=yield this.fetchSchedules(t);this.setOutputData(0,e),this.setOutputData(1,null)}catch(t){this.setOutputData(0,null),this.setOutputData(1,t.message)}}))}setExecuteInterval(){let t=this.getInputData(1);t=p.default.timeConvert(t,this.settings.time.value),t=Math.max(t,6e4),this.EXECUTE_INTERVAL=t}fetchSchedules({jwt:t,host:e,port:i}){return s(this,void 0,void 0,(function*(){const s=`${o.default.buildUrl(e,i)}${this.suffixApi}`;return(yield u.default.get(s,{headers:{Authorization:t}})).data}))}}n.Container.registerNodeType("nube/api-schedules",l)},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(2),a=i(3);class r extends n.Node{constructor(){super(),this.settings.url={description:"Select Url",value:"",type:n.SettingType.DROPDOWN,config:{items:[]}}}fetchConnection(t){return s(this,void 0,void 0,(function*(){let e=null;const i=(yield this.container.db.getAsyncUsers()).map(e=>({value:JSON.stringify(e),text:`${a.default.buildUrl(e.host,e.port)}${t} (${e.nodeId})`}));this.settings.url.config.items=i;const s=this.settings.url.value;return s&&i.map(t=>t.value).includes(s)?e=this.settings.url.value:(e=i.length&&i[0].value,this.settings.url.value=e),this.broadcastSettingsToClients(),e&&JSON.parse(e)||null}))}}e.BaseEdge=r},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(2),a=i(0),r=i(1),o=i(5),u=i(10),d=i(43),p=i(8),l=i(263);class h extends n.Node{constructor(){super(),this.title="Get-Schedules",this.description="This node is used to fetch schedules from the Nube dashboard.  The ‘Get-Schedules’ node will output all schedules from the device; Specific schedule selection is done on the ‘Schedule-Checker’ node.  ‘Interval’ (set from settings) is how often the node will re-check for schedule changes (minimum 10 seconds).  In order for the ‘get-schedules’ node to work, there must be a `system/platform’ node in the main container (default editor pane) and there must be a ‘deviceID’ in the ‘system/platform’ node settings, It is recommended that the API-Schedule node is used in conjunction with a filter/prevent-null node to maintain the last successful schedule read in the case that the API-Login node becomes disconnected. 'interval’ units can be configured from settings.  Maximum ‘interval’ setting is 587 hours.",this.addInputWithSettings("enable",r.Type.BOOLEAN,!0,"Enable"),this.addOutput("data",r.Type.JSON),this.addOutput("error",r.Type.BOOLEAN),this.settings.interval={description:"Update Interval (min 10 seconds)",type:n.SettingType.NUMBER,value:60},this.settings.time={description:"Units",type:n.SettingType.DROPDOWN,config:{items:[{value:o.TIME_TYPE.SECONDS,text:"Seconds"},{value:o.TIME_TYPE.MINUTES,text:"Minutes"},{value:o.TIME_TYPE.HOURS,text:"Hours"}]},value:o.TIME_TYPE.SECONDS},this.setSettingsConfig({groups:[{interval:{weight:2},time:{}}]})}onAdded(){return s(this,void 0,void 0,(function*(){this.properties.scheduleData&&this.setOutputData(0,this.properties.scheduleData),yield this.onAfterSettingsChange()}))}onAfterSettingsChange(){return s(this,void 0,void 0,(function*(){this.setExecuteInterval(),yield this.onInputUpdated()}))}onInputUpdated(){return s(this,void 0,void 0,(function*(){yield this.getDittoSchedules()}))}onExecute(){return s(this,void 0,void 0,(function*(){yield this.getDittoSchedules()}))}getDittoSchedules(){return s(this,void 0,void 0,(function*(){if(this.side===a.Side.server&&this.getInputData(0))try{const t=yield d.default.getDeviceID(this),{username:e,password:i}=p.default.ditto,s=p.default.ditto.baseURL,n=yield u.default({method:"get",url:s+t+"/features/schedules/properties",headers:{"Content-Type":"application/json",Authorization:`Basic ${l(`${e}:${i}`)}`}});this.setOutputData(0,n.data,!1),this.setOutputData(1,!1),this.properties.scheduleData=n.data,this.persistProperties(!1,!0)}catch(t){return this.setOutputData(0,null),this.setOutputData(1,t),void this.debugErr(t)}}))}setExecuteInterval(){let t=this.settings.interval.value;t=o.default.timeConvert(t,this.settings.time.value),t=Math.max(t,1e4),this.EXECUTE_INTERVAL=t}}a.Container.registerNodeType("nube/get-schedules",h)},function(t,e){t.exports=require("btoa")},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Round (Decimal Place)",this.description="'output' is the 'input' value rounded to the configured number of decimal places.  The number of decimal places can be configured from settings (limited to 5 decimal places).",this.addInput("input",a.Type.NUMBER),this.addOutput("output",a.Type.NUMBER),this.settings.decimals={description:"Decimal Places (Limit 5)",value:1,type:s.SettingType.NUMBER}}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){let t=this.settings.decimals.value;t>5&&(t=5),this.emitTransformedInput(e=>e.toFixed(t))}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("num-transform/round",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Floor",this.description="'output' is the 'input' value rounded DOWN to the nearest integer.",this.addInput("input",a.Type.NUMBER),this.addOutput("output",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){this.emitTransformedInput(t=>Math.floor(t))}}n.Container.registerNodeType("num-transform/floor",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Ceil",this.description="'output' is the 'input' value rounded UP to the nearest integer.",this.addInput("input",a.Type.NUMBER),this.addOutput("output",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){this.emitTransformedInput(t=>Math.ceil(t))}}n.Container.registerNodeType("num-transform/ceil",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Limit",this.description="'output' follows the 'input' value when it is between the 'min' and 'max' values.  If 'input' is greater than the 'max' value, 'output' will be the 'max' value.  If 'input' is less than the 'min' value, 'output' will be the 'min' value.  'max' and 'min' values can be configured from settings.",this.addInput("input",a.Type.NUMBER),this.addInputWithSettings("min",a.Type.NUMBER,0,"min",!1),this.addInputWithSettings("max",a.Type.NUMBER,5,"max",!1),this.addOutput("output",a.Type.NUMBER)}onCreated(){this.setOutputData(0,this.settings.min.value)}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){const t=this.getInputData(0),e=this.getInputData(1),i=this.getInputData(2);t>=i?this.setOutputData(0,i):t<=e?this.setOutputData(0,e):this.setOutputData(0,t)}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("num-transform/limit",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3);class o extends s.Node{constructor(){super(),this.interval=250,this.title="Scale",this.description="Performs a linear interpolation of the 'input' value based configured settings.  When 'input' value is between 'in-min' and 'in-max' it is linearly interpolated between 'out-min' and 'out-max'.  If 'input' is greater than the 'in-max' value, 'output' will be the 'out-max' value.  If 'input' is less than the 'in-min' value, 'output' will be the 'out-min' value.  'in-max', 'in-min', 'out-max', and 'out-min' values can be configured from settings.",this.addInput("input",a.Type.NUMBER),this.addInputWithSettings("in-min",a.Type.NUMBER,0,"Minimum Input",!1),this.addInputWithSettings("in-max",a.Type.NUMBER,100,"Maximum Input",!1),this.addInputWithSettings("out-min",a.Type.NUMBER,0,"Minimum Output",!1),this.addInputWithSettings("out-max",a.Type.NUMBER,10,"Maximum Output",!1),this.addOutput("output",a.Type.NUMBER),this.lastTime=Date.now()}onAdded(){this.onInputUpdated()}onExecute(){}onAfterSettingsChange(){this.onInputUpdated()}onInputUpdated(){let t=Date.now();if(t-this.lastTime>=this.interval){this.lastTime=t;let e=this.getInputData(0);const i=this.getInputData(1),s=this.getInputData(2),n=this.getInputData(3),a=this.getInputData(4);null==e?this.setOutputData(0,0):(e=r.default.remap(e,i,s,n,a),this.setOutputData(0,e.toFixed(1)))}}}n.Container.registerNodeType("num-transform/scale",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3);class o extends s.Node{constructor(){super(),this.title="Linear shaper",this.description="Performs a linear interpolation of the 'input' value between configured inflection points.  The number of inflection points can be configured in settings.  The inflection points will be evenly distributed from 0-100.  Values for each inflection point can be wired in, or set from settings.  When the 'input' value is between 0 and 100 the 'output' value will be the linear interpolation of the 'input' value between the surrounding inflection point values. ",this.addInput("input",a.Type.NUMBER),this.settings.inputs={description:"Inflection Points Count",value:3,type:s.SettingType.NUMBER},this.settings.in1={description:"output value @ input = 0",value:0,type:s.SettingType.NUMBER},this.settings.in2={description:"output value @ input = 50",value:0,type:s.SettingType.NUMBER},this.settings.in3={description:"output value @ input = 100",value:0,type:s.SettingType.NUMBER},this.addInput("[0]",a.Type.NUMBER),this.addInput("[50]",a.Type.NUMBER),this.addInput("[100]",a.Type.NUMBER),this.addOutput("output",a.Type.NUMBER)}onAfterSettingsChange(){const t=this.getInputsCount();let e=this.settings.inputs.value;if(e=r.default.clamp(e,3,100),e+=1,e!=t){if(this.changeInputsCount(e,a.Type.NUMBER),e>4)for(let t=4;t<e;t++)this.settings["in"+t]||(this.settings["in"+t]={description:"in "+t,value:0,type:s.SettingType.NUMBER});for(let i=e;i<t;i++)delete this.settings["in"+i];this.renameInputsAndSettings(e),this.side==n.Side.editor&&this.updateInputsLabels(),this.onInputUpdated()}}renameInputsAndSettings(t){t-=1,this.inputs[1].name="[0]";for(let e=1;e<t;e++){let i=(100/(t-1)*e).toFixed(2).replace(/[.,]00$/,"");this.inputs[e+1].name="["+i+"]",this.settings["in"+(e+1)]={description:"output value @ input = "+i,value:0,type:s.SettingType.NUMBER}}this.updateNodeInput()}onInputUpdated(){const t=this.getInputData(0);if(null==t)return void this.setOutputData(0,null,!0);const e=r.default.clamp(t,0,100),i=100/(this.getInputsCount()-1-1),s=e/i;if(e%i==0){let t=this.getInputData(s+1);return r.default.hasInput(t)||(t=this.settings["in"+(s+1)].value),t=Number(t),void this.setOutputData(0,t)}const n=s-Math.floor(s),a=Math.floor(s);console.log(s,"stepIndex"),console.log(a,"startValueIndex"),console.log("in"+(a+1),"'in' + (startValueIndex + 1)");let o=this.getInputData(a+1);r.default.hasInput(o)||(o=this.settings["in"+(a+1)].value);let u=this.getInputData(a+2);r.default.hasInput(u)||(u=this.settings["in"+(a+2)].value);let d=r.default.remap(n,0,1,o,u);this.setOutputData(0,d,!0)}}n.Container.registerNodeType("num-transform/linear-shaper",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(5);class o extends s.Node{constructor(){super(),this.updateInterval=500,this.title="Fade",this.description="This node makes a smooth transition from 'from' to 'to' over the 'interval' period when 'enable' transitions from 'false' to 'true'; after this 'interval' period 'output' will match the 'to' value while 'enable' is 'true'.  During the 'interval' period, the rate of 'output' change cannot be changed.  Once the 'interval' period is complete 'out=to' becomes 'true' until 'enable' becomes 'false' again.",this.addInput("enable",a.Type.BOOLEAN),this.addInputWithSettings("interval",a.Type.NUMBER,1,"Interval",!1),this.settings.time={description:"Units",type:s.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"seconds"},this.setSettingsConfig({groups:[{interval:{weight:2},time:{}}]}),this.addInputWithSettings("from",a.Type.NUMBER,0,"To Value",!1),this.addInputWithSettings("to",a.Type.NUMBER,100,"From Value",!1),this.addOutput("output"),this.addOutput("out=to"),this.updateInterval=250}onAdded(){this.lastEnable=!1,this.timerFinished=!1,this.setOutputData(1,!1),this.inputs[1].name=`[interval] (${this.settings.time.value})`,this.onInputUpdated()}onExecute(){}onAfterSettingsChange(){this.inputs[1].name=`[interval] (${this.settings.time.value})`}onInputUpdated(){const t=this.getInputData(0);if(!t&&this.lastEnable)return clearInterval(this.timeoutFunc),this.setOutputData(0,0),this.setOutputData(1,!1),this.timerFinished=!1,void(this.lastEnable=t);if(!t)return this.setOutputData(0,0),void this.setOutputData(1,!1);const e=this.getInputData(3);if(t&&this.timerFinished)return this.setOutputData(0,e),void this.setOutputData(1,!0);const i=this.getInputData(2);let s=this.getInputData(1);s=r.default.timeConvert(s,this.settings.time.value),t&&!this.lastEnable?(this.stepSize=(e-i)/(s/this.updateInterval),this.currentVal=i,this.timeoutFunc=setInterval(()=>{this.update()},this.updateInterval)):!t&&this.lastEnable&&(clearInterval(this.timeoutFunc),this.setOutputData(0,0),this.timerFinished=!1),this.lastEnable=t}update(){let t=this.getInputData(3);const e=this.currentVal+this.stepSize;if(e>=t)return clearInterval(this.timeoutFunc),this.setOutputData(0,t),this.setOutputData(1,!0),this.timerFinished=!0,void(this.currentVal=0);this.currentVal=e,this.setOutputData(0,e)}}n.Container.registerNodeType("num-transform/fade",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(5);class o extends s.Node{constructor(){super(),this.title="Rate-Limit",this.description="This node makes a rate limited transition from its current output value to the ‘input’ value.  When ‘enable’ is ‘true’,  ‘output’ is permitted to change towards the ‘input’ value based on settings values.  ‘output’ can change by ‘step’ size every ‘interval’ period.  ‘output’ will be ‘null’ when ‘enable’ is ‘false’.",this.addInput("input",a.Type.NUMBER),this.addInputWithSettings("enable",a.Type.BOOLEAN,!0,"Enable",!1),this.addInputWithSettings("step",a.Type.NUMBER,1,"Step Size",!1),this.addInputWithSettings("interval",a.Type.NUMBER,1,"Update Interval",!1),this.settings.time={description:"Units",type:s.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"seconds"},this.setSettingsConfig({groups:[{interval:{weight:2},time:{}}]}),this.addOutput("output",a.Type.NUMBER),this.lastInterval=1e3,this.lastEnable=!0,this.currentVal=0}onAdded(){this.lastInterval=1e3,this.lastEnable=!0,this.currentVal=0,this.setOutputData(0,null),this.inputs[3].name=`[interval] (${this.settings.time.value})`,this.timeoutFunc=setInterval(()=>{this.step()},this.lastInterval)}onExecute(){}onInputUpdated(){if(null==this.getInputData(0))return clearInterval(this.timeoutFunc),this.setOutputData(0,null),void(this.lastEnable=!1);let t=this.getInputData(3);t=r.default.timeConvert(t,this.settings.time.value);const e=this.getInputData(1);e&&!this.lastEnable?(this.currentVal=0,this.timeoutFunc=setInterval(()=>{this.step()},t)):!e&&this.lastEnable?(clearInterval(this.timeoutFunc),this.setOutputData(0,null)):e&&this.lastEnable&&t!==this.lastInterval&&(clearInterval(this.timeoutFunc),this.timeoutFunc=setInterval(()=>{this.step()},t)),this.lastInterval=t,this.lastEnable=e}step(){const t=this.getInputData(2);let e=this.getInputData(0);e>=this.currentVal?(this.currentVal=this.currentVal+t,this.currentVal>e&&(this.currentVal=e),this.setOutputData(0,this.currentVal)):e<this.currentVal&&(this.currentVal=this.currentVal-t,this.currentVal<e&&(this.currentVal=e),this.setOutputData(0,this.currentVal))}onAfterSettingsChange(){this.inputs[3].name=`[interval] (${this.settings.time.value})`,this.onInputUpdated()}}n.Container.registerNodeType("num-transform/rate-limit",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Boolean Constant",this.description="Outputs a Boolean value set from settings.  Can also output null.",this.settings.value={description:"Payload",type:s.SettingType.DROPDOWN,config:{items:[{value:!1,text:"false"},{value:!0,text:"true"},{value:null,text:"null"}]},value:null},this.addOutput("output",a.Type.BOOLEAN)}onAdded(){if(this.side!=n.Side.server)return;let t=this.settings.value.value;this.setOutputData(0,t)}onExecute(){}onAfterSettingsChange(){let t=this.settings.value.value;this.setOutputData(0,t)}}n.Container.registerNodeType("point/bool-constant",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3);class o extends s.Node{constructor(){super(),this.title="Numeric Constant",this.description="Outputs a Numeric value set from settings. Can also output null by leaving the settings field blank.",this.settings.value={description:"Value",value:null,type:s.SettingType.NUMBER},this.addOutput("output",a.Type.NUMBER)}onAdded(){this.onAfterSettingsChange()}onExecute(){}onAfterSettingsChange(){const t=this.settings.value.value;this.setOutputData(0,r.default.parseValue(t,a.Type.NUMBER))}}n.Container.registerNodeType("point/num-constant",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3);class o extends s.Node{constructor(){super(),this.title="String Constant",this.description="Outputs a String value set from settings. Can also output null by leaving the settings field blank.",this.settings.value={description:"Value",value:"",type:s.SettingType.STRING},this.addOutput("output",a.Type.STRING)}onAdded(){this.onAfterSettingsChange()}onExecute(){}onAfterSettingsChange(){const t=this.settings.value.value;this.setOutputData(0,r.default.parseValue(t,a.Type.STRING))}}n.Container.registerNodeType("point/string-constant",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(4);class o extends s.Node{constructor(){super(),this.title="Json Constant",this.description='Outputs a JSON value set from settings. Can also output null by leaving the settings field blank. Example {"name":"John Hill", "age":31} or [1,2,3,4]',this.addInputWithSettings("value",a.Type.JSON,'{ "measurement": 22 }',"JSON value"),this.settings.passNull={description:"Send null if not a match",value:!1,type:s.SettingType.BOOLEAN},this.addOutput("output",a.Type.JSON),this.addOutput("valid-json",a.Type.BOOLEAN),this.addOutput("msg",a.Type.STRING)}onAdded(){this.onAfterSettingsChange()}onInputUpdated(){let t=this.getInputData(0);const e=this.settings.passNull.value;try{r.isJSON(t)&&!r.isEmpty(t)?(this.setOutputData(0,t),this.setOutputData(1,!0),this.setOutputData(2,"valid JSON")):e?(this.setOutputData(0,null),this.setOutputData(1,!1),this.setOutputData(2,"invalid JSON")):(this.setOutputData(1,!1),this.setOutputData(2,"invalid JSON"))}catch(t){this.setOutputData(1,!1),this.setOutputData(2,t)}}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("point/json-constant",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(6),a=i(1);class r extends n.FlexibleNode{constructor(){super(),this.dynamicInputsType=a.Type.BOOLEAN,this.title="Boolean Writable (Priority)",this.description="Outputs the highest priority, non-null, Boolean input. Highest priority is 'in 1' then 'in 2' and so on. Input values can also be wired in, or set from settings. The number of inputs can be modified from settings.",this.addOutput("out",a.Type.BOOLEAN)}onAdded(){this.size=this.computeSize(),this.onInputUpdated()}onInputUpdated(){const t=this.getInputsCount();for(let e=this.dynamicInputStartPosition;e<t;e++){let t=this.getInputData(e);if(null!=t)return void this.setOutputData(0,t)}this.setOutputData(0,null)}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("point/bool-writable",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(6),a=i(1);class r extends n.FlexibleNode{constructor(){super(),this.dynamicInputsType=a.Type.NUMBER,this.title="Numeric Writable (Priority)",this.description="Outputs the highest priority, non-null, Numeric input.  Highest priority is 'in 1' then 'in 2' and so on.  Input values can also be wired in, or set from settings. The number of inputs can be modified from settings.",this.addOutput("out",a.Type.NUMBER)}onAdded(){this.onInputUpdated(),this.size=this.computeSize()}onInputUpdated(){const t=this.getInputsCount();for(let e=this.dynamicInputStartPosition;e<t;e++){let t=this.getInputData(e);if(null!=t)return void this.setOutputData(0,t)}this.setOutputData(0,null)}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("point/num-writable",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(6),a=i(1);class r extends n.FlexibleNode{constructor(){super(),this.dynamicInputsType=a.Type.STRING,this.title="String Writable (Priority)",this.description="Outputs the highest priority, non-null, String input.  Highest priority is 'in 1' then 'in 2' and so on.   Input values can also be wired in, or set from settings. The number of inputs can be modified from settings.",this.addOutput("out",a.Type.STRING)}onAdded(){this.size=this.computeSize(),this.onInputUpdated()}onInputUpdated(){for(let t=this.dynamicInputStartPosition;t<this.getInputsCount();t++){let e=this.getInputData(t);if(e)return void this.setOutputData(0,e)}this.setOutputData(0,"")}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("point/string-writable",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(2),a=i(280),r=i(281);class o extends n.Node{constructor(){super(),this.title="Generic Point",this.description="This node is to test the generic point input types",r.default.addPrioritySettings(this),a.default.addHistorySettings(this),this.setSettingsConfig({groups:[],conditions:{}}),r.default.addPrioritySettingsConfig(this),a.default.addHistorySettingsConfig(this,0,!1)}onCreated(){r.default.priorityOnCreated(this),a.default.historyOnCreated(this)}onAdded(){this.onAfterSettingsChange()}onInputUpdated(){r.default.doPriorityFunctions(this),this.side===s.Side.server&&a.default.doHistoryFunctions(this)}onAfterSettingsChange(){r.default.priorityFunctionsForAfterSettingsChange(this),a.default.historyFunctionsForAfterSettingsChange(this,this.settings.pointName.value),r.default.doPriorityFunctions(this),this.side===s.Side.server&&a.default.doHistoryFunctions(this)}}s.Container.registerNodeType("point/generic-point",o)},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(2),a=i(0),r=i(1),o=i(3),u=i(5),d=i(68),p=i(17),l=i(71),h=i(10),c=i(8),g=i(45),y=i(12);class m{static addHistorySettings(t){t.addInput("histTrigger",r.Type.BOOLEAN),t.addOutput("histError",r.Type.ANY),t.addOutput("storedHistCount",r.Type.NUMBER),t.addOutput("lastHistExport",r.Type.STRING);for(let e in t.inputs)t.inputs.hasOwnProperty(e)&&"histTrigger"==t.inputs[e].name&&(t.histTriggerInput=e);for(let e in t.outputs)t.outputs.hasOwnProperty(e)&&("histError"==t.outputs[e].name?t.histErrorOutput=e:"storedHistCount"==t.outputs[e].name?t.storedHistCountOutput=e:"lastHistExport"==t.outputs[e].name&&(t.lastHistExportOutput=e));t.settings.history_group={description:"History Settings",value:"",type:n.SettingType.GROUP},t.settings.databaseType={description:"Database Type",type:n.SettingType.DROPDOWN,config:{items:[{value:0,text:"Nube DB (Postgres)"},{value:1,text:"InfluxDB"}]},value:0},t.settings.enable={description:"History Enable",value:!1,type:n.SettingType.BOOLEAN},t.settings.host={description:"Host",value:"",type:n.SettingType.STRING},t.settings.port={description:"Port",value:"",type:n.SettingType.STRING},t.settings.authentication={description:"Use Authentication",value:!1,type:n.SettingType.BOOLEAN},t.settings.user={description:"Username",value:"",type:n.SettingType.STRING},t.settings.password={description:"Password",value:"",type:n.SettingType.STRING},t.settings.databaseName={description:"Database Name",value:"",type:n.SettingType.STRING},t.settings.tableName={description:"Measurement Name",value:"",type:n.SettingType.STRING},t.settings.pointName={description:"Point Name",value:"",type:n.SettingType.STRING},t.settings.historyMode={description:"History Logging Mode",type:n.SettingType.DROPDOWN,config:{items:[{value:0,text:"Change Of Value (COV)"},{value:1,text:"Periodic"},{value:2,text:"Trigger Only"}]},value:0},t.settings.threshold={description:"COV Threshold",value:0,type:n.SettingType.NUMBER},t.settings.period={description:"Logging Interval",value:15,type:n.SettingType.NUMBER},t.settings.periodUnits={description:"Units",type:n.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"minutes"},t.settings["storage-limit"]={description:"Local Storage Limit (Max 50)",value:25,type:n.SettingType.NUMBER},t.settings.minuteRoundValue={description:"Round minutes up in increments of",value:0,type:n.SettingType.NUMBER},t.settings.decimals={description:"Decimal Places (Limit 5)",value:3,type:n.SettingType.NUMBER},t.settings.timeAsString={description:"Display Timestamp as:",type:n.SettingType.DROPDOWN,config:{items:[{value:!1,text:"Numeric"},{value:!0,text:"String"}]},value:!0},t.settings.alarm_group={description:"Alarm Settings",value:"",type:n.SettingType.GROUP},t.settings.alarms_count={description:"Alarms Count (Max 10)",value:0,type:n.SettingType.NUMBER},t.settings.tags_group={description:"Tag Settings",value:"",type:n.SettingType.GROUP},t.settings.tags_count={description:"Tag Count (Max 10)",value:0,type:n.SettingType.NUMBER}}static addHistorySettingsConfig(t,e=0,i=!0){t.settingConfigs.hasOwnProperty("groups")||t.settingConfigs.hasOwnProperty("conditions")||t.setSettingsConfig({groups:[],conditions:{}}),t.settingConfigs.groups.push({history_group:{}}),t.settingConfigs.groups.push({databaseType:{}}),t.settingConfigs.groups.push({host:{weight:3},port:{weight:1}}),t.settingConfigs.groups.push({user:{},password:{}}),t.settingConfigs.groups.push({period:{weight:2},periodUnits:{}}),t.settingConfigs.conditions.authentication=t=>1==t.databaseType.value,t.settingConfigs.conditions.host=t=>1==t.databaseType.value,t.settingConfigs.conditions.port=t=>1==t.databaseType.value,t.settingConfigs.conditions.databaseName=t=>1==t.databaseType.value,t.settingConfigs.conditions.tableName=t=>1==t.databaseType.value,t.settingConfigs.conditions.user=t=>!!t.authentication.value&&1==t.databaseType.value,t.settingConfigs.conditions.password=t=>!!t.authentication.value&&1==t.databaseType.value,t.settingConfigs.conditions.threshold=t=>!t.historyMode.value,t.settingConfigs.conditions.period=t=>1==t.historyMode.value,t.settingConfigs.conditions.periodUnits=t=>1==t.historyMode.value,t.settingConfigs.conditions.alarm_group=t=>1==t.databaseType.value,t.settingConfigs.conditions.alarms_count=t=>1==t.databaseType.value,t.settingConfigs.conditions.tags_group=t=>1==t.databaseType.value,t.settingConfigs.conditions.tags_count=t=>1==t.databaseType.value,t.settings.authentication&&(t.settingConfigs.groups.push({host:{weight:3},port:{weight:1}}),t.settingConfigs.groups.push({user:{},password:{}}),t.settingConfigs.conditions.user=t=>!!t.authentication.value,t.settingConfigs.conditions.password=t=>!!t.authentication.value),t.properties.alarmsCount=t.settings.alarms_count.value,t.properties.tagsCount=t.settings.tags_count.value,t.properties.valueInput=e||0,t.properties.isOutput=i}static historyOnCreated(t){t.useInterval=!1,t.properties.alarmsCount=0,t.properties.tagsCount=0,t.properties.valueInput=0,t.properties.isOutput=!0,t.properties.pointName="undefined",t.properties.obj=[],t.properties.lastHistoryValue=null,t.properties.dynamicInputStartPosition=2}static doHistoryFunctions(t){return s(this,void 0,void 0,(function*(){let e=null;e=t.properties.isOutput?t.getInputData(t.properties.valueInput):t.outputs[t.properties.valueInput].data,t.getInputData(t.histTriggerInput)&&t.inputs[t.histTriggerInput].updated?yield m.storeLogEntry(t,e):null!=e&&(yield m.checkCOV(t,e))&&(yield m.storeLogEntry(t,e)),t.properties.obj.length>0&&(yield m.trySendStoredData(t)),t.setOutputData(t.storedHistCountOutput,t.properties.obj.length)}))}static trySendStoredData(t){return s(this,void 0,void 0,(function*(){let e=t.settings.decimals.value;e>5&&(e=5);var i=[];t.properties.obj.forEach(s=>{"number"==typeof s.payload&&(s.payload=s.payload.toFixed(e));var n={};n.point=t.properties.pointName||"undefined";for(var a=2;a<Object.keys(s).length-1;a++){var r=Object.keys(s)[a];n[r]=s[r]}for(var o=0;o<10;o++)n["tag"+(o+1)]=s.tags[o]||null;i.push({measurement:t.getInputData(2),fields:{val:s.payload},tags:n,time:s.timestamp})});var s=!1;if(0==t.settings.databaseType.value){var n=[];const e=yield m.getClientID(t),u=yield m.getDeviceID(t);let d=!1,p=!1;var a,r,o;"string"==typeof u&&(d=!0),"string"==typeof u&&(p=!0);const l=c.default.pg.baseURL;i.forEach(t=>{a=t.fields.val,o="string"===(r=typeof a)||"boolean"===r?Number(t.fields.val):a,n.push({deviceid:d?u:"unknownDeviceID",clientid:p?e:"unknownClientID",val:o,point:t.tags.point,ts:y(t.time)._d})}),h.default({method:"post",url:l,data:n}).then((function(){})).catch((function(e){t.setOutputData(t.histErrorOutput,String(e)),s=!0}))}if(1==t.settings.databaseType.value){t.settings.host.value,t.settings.port.value;var u=new g.InfluxDB({host:t.settings.host.value||"localhost",port:t.settings.port.value||8086,protocol:"http",database:t.settings.databaseName.value||"undefined",username:t.settings.authentication.value?t.settings.user.value:"",password:t.settings.authentication.value?p.default.decrypt(t.settings.password.value):""});yield u.writePoints(i,{}).catch(e=>{t.setOutputData(t.histErrorOutput,String(e.code)),s=!0})}s||(t.properties.obj=[],t.setOutputData(t.histErrorOutput,""),t.settings.timeAsString.value?t.setOutputData(t.lastHistExportOutput,y().format(),!0):t.setOutputData(t.lastHistExportOutput,y().valueOf(),!0))}))}static historyFunctionsForAfterSettingsChange(t,e,i=!0){t.properties.pointName=e,0==t.settings.databaseType.value&&(t.settings.alarms_count.value=0,t.settings.tags_count.value=0),m.changeAlarmsCount(t,t.settings.alarms_count.value),setTimeout(()=>{m.renameAlarmInputs(t)},100),m.changeTagsCount(t,t.settings.tags_count.value),m.setPeriodicLogging(t),i&&l.default.persistProperties(t,!0,!0,!0),t.properties.isOutput&&t.onInputUpdated()}static storeLogEntry(t,e){return s(this,void 0,void 0,(function*(){if(null==e)return-1;const i=o.default.clamp(t.settings["storage-limit"].value,0,50),s=o.default.clamp(t.settings.minuteRoundValue.value,0,60),n=s?yield t.nearestFutureMinutes(s,y()):y();let a={payload:e,timestamp:n._d};for(var r=t.properties.dynamicInputStartPosition;r<t.properties.dynamicInputStartPosition+Number(t.properties.alarmsCount);r++){let e=r-t.properties.dynamicInputStartPosition+1;a[t.settings["alarm"+e].value||"alarm"+e]=t.getInputData(r)||"null"}for(var u=[],d=1;d<=Number(t.properties.tagsCount);)t.settings["tag"+d].value&&u.push(t.settings["tag"+d].value),d++;for(a.tags=u,t.properties.obj.push(a);t.properties.obj.length>i;)t.properties.obj.shift();return t.properties.lastHistoryValue=e,l.default.persistProperties(t,!0,!0,!0),t.properties.obj.length}))}static checkCOV(t,e){return s(this,void 0,void 0,(function*(){if(!t.settings.historyMode.value){if(0===t.settings.threshold.value&&e!==t.properties.lastHistoryValue)return!0;const i="number"==typeof e;if(e!==t.properties.lastHistoryValue&&("number"!=typeof t.properties.lastHistoryValue||!i||i&&Math.abs(e-t.properties.lastHistoryValue)>=t.settings.threshold.value))return!0}return!1}))}static setPeriodicLogging(t){if(1!=t.settings.historyMode.value||t.useInterval)1!=t.settings.historyMode.value&&t.useInterval&&(t.useInterval=!1,clearInterval(t.timeoutFunc));else{t.useInterval=!0;let e=t.settings.period.value;e=u.default.timeConvert(e,t.settings.periodUnits.value),t.timeoutFunc=setInterval(()=>s(this,void 0,void 0,(function*(){let e=null;e=t.properties.isOutput?t.getInputData(t.properties.valueInput):t.outputs[t.properties.valueInput].data,yield m.storeLogEntry(t,e),t.properties.obj.length>0&&(yield m.trySendStoredData(t)),t.setOutputData(t.storedHistCountOutput,t.properties.obj.length)})),e)}}static nearestFutureMinutes(t,e){const i=Math.ceil(e.minute()/t)*t;return e.clone().minute(i).second(0)}static changeAlarmsCount(t,e){e>10?(e=10,t.settings.alarms_count.value=10):e<0&&(e=0,t.settings.alarms_count.value=0),t.properties.alarmsCount=Number(t.properties.alarmsCount);let i=e-t.properties.alarmsCount;if(0!=i){t.changeInputsCount(e+t.properties.dynamicInputStartPosition,r.Type.STRING);var s={};if(i>0){for(let i=t.properties.alarmsCount+1;i<=e;i++)s["alarm"+i]={description:"Alarm "+i,value:"",type:n.SettingType.STRING};t.properties.alarmsCount<=0?t.settings=d.default.insertIntoObjectAtPosition(t.settings,s,"alarms_count"):t.settings=d.default.insertIntoObjectAtPosition(t.settings,s,"alarm"+t.properties.alarmsCount)}else if(i<0)for(let i=t.properties.alarmsCount;i>e;i--)delete t.settings["alarm"+i];t.properties.alarmsCount=e}}static renameAlarmInputs(t){for(let e=1;e<=t.properties.alarmsCount;e++){let i=t.settings["alarm"+e].value;i.length>20&&(i="..."+i.substr(i.length-20,20)),t.inputs[t.properties.dynamicInputStartPosition+e-1].name="alarm"+e+" | "+i}if(t.side==a.Side.editor){for(let e=1;e<=t.properties.alarmsCount;e++)t.inputs[t.properties.dynamicInputStartPosition+e-1].label=t.inputs[t.properties.dynamicInputStartPosition+e-1].name;t.setDirtyCanvas(!0,!0)}}static changeTagsCount(t,e){e>10?(e=10,t.settings.tags_count.value=10):e<0&&(e=0,t.settings.tags_count.value=0),t.properties.tagsCount=Number(t.properties.tagsCount);let i=e-t.properties.tagsCount;if(0!=i){var s={};if(i>0){for(let i=t.properties.tagsCount+1;i<=e;i++)s["tag"+i]={description:"Tag "+i,value:"",type:n.SettingType.STRING};0==t.properties.tagsCount?t.settings=d.default.insertIntoObjectAtPosition(t.settings,s,"tags_count"):t.settings=d.default.insertIntoObjectAtPosition(t.settings,s,"tag"+t.properties.tagsCount)}else if(i<0)for(let i=t.properties.tagsCount;i>e;i--)delete t.settings["tag"+i];t.properties.tagsCount=e}}static getDeviceID(t){return new Promise((e,i)=>{try{m.findMainContainer(t).db.getNodeType("system/platform",(t,s)=>{if(!t){let t=[];return t.push(s),t[0]&&t[0][0]&&t[0][0].properties?(e(t[0][0].properties.deviceID.trim()),t[0][0].properties.deviceID.trim()):(e(t),t)}console.log(t),i(t)})}catch(t){console.log(t)}})}static getClientID(t){return new Promise((e,i)=>{try{m.findMainContainer(t).db.getNodeType("system/platform",(t,s)=>{if(!t){let t=[];return t.push(s),t[0]&&t[0][0]&&t[0][0].settings?(e(t[0][0].settings.clientID.value.trim()),t[0][0].settings.clientID.value.trim()):(e(t),t)}console.log(t),i(t)})}catch(t){console.log(t)}})}static findMainContainer(t){return t.hasOwnProperty("container")?m.findMainContainer(t.container):t}static persistProperties(t){t.container.db&&t.container.db.updateNode(t.id,t.container.id,{$set:{properties:t.properties,inputs:t.inputs,settings:t.settings}})}}e.default=m},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(2),a=i(1),r=i(71);class o{static addPrioritySettings(t){t.properties.priorityStartInput=t.getFreeInputId(),t.properties.priorityStartOutput=t.getFreeOutputId(),t.addInput("inputValue",a.Type.ANY),t.addInput("inputPriority",a.Type.NUMBER),t.addOutput("outputValue",a.Type.ANY),t.addOutput("outputPriority",a.Type.NUMBER),t.addOutput("outputJSON",a.Type.STRING);for(let e in t.inputs)"inputValue"==t.inputs[e].name?t.properties.valueInput=e:"inputPriority"==t.inputs[e].name&&(t.properties.priorityInput=e);for(let e in t.outputs)"outputValue"==t.outputs[e].name?t.properties.valueOutput=e:"outputPriority"==t.outputs[e].name?t.properties.priorityOutput=e:"outputJSON"==t.outputs[e].name&&(t.properties.jsonOutput=e);t.settings.input_group={description:"Input Settings",value:"",type:n.SettingType.GROUP},t.settings.decimals={description:"Decimal Places (Limit 5)",value:3,type:n.SettingType.NUMBER},t.settings.inputMethod={description:"Input Method",type:n.SettingType.DROPDOWN,config:{items:[{value:0,text:"Value and Priority"},{value:1,text:"Priority Array"},{value:2,text:"JSON"}]},value:0},t.properties.priorityLevelItems=Array(16).fill(null).map((t,e)=>({value:e+1,text:(e+1).toString()})),t.settings.priorityLevel={description:"Write Priority Level",type:n.SettingType.DROPDOWN,config:{items:t.properties.priorityLevelItems},value:16},t.settings.in1={description:"in1",value:!1,type:n.SettingType.BOOLEAN},t.settings.in2={description:"in2",value:!1,type:n.SettingType.BOOLEAN},t.settings.in3={description:"in3",value:!1,type:n.SettingType.BOOLEAN},t.settings.in4={description:"in4",value:!1,type:n.SettingType.BOOLEAN},t.settings.in5={description:"in5",value:!1,type:n.SettingType.BOOLEAN},t.settings.in6={description:"in6",value:!1,type:n.SettingType.BOOLEAN},t.settings.in7={description:"in7",value:!1,type:n.SettingType.BOOLEAN},t.settings.in8={description:"in8",value:!1,type:n.SettingType.BOOLEAN},t.settings.in9={description:"in9",value:!1,type:n.SettingType.BOOLEAN},t.settings.in10={description:"in10",value:!1,type:n.SettingType.BOOLEAN},t.settings.in11={description:"in11",value:!1,type:n.SettingType.BOOLEAN},t.settings.in12={description:"in12",value:!1,type:n.SettingType.BOOLEAN},t.settings.in13={description:"in13",value:!1,type:n.SettingType.BOOLEAN},t.settings.in14={description:"in14",value:!1,type:n.SettingType.BOOLEAN},t.settings.in15={description:"in15",value:!1,type:n.SettingType.BOOLEAN},t.settings.in16={description:"in16",value:!1,type:n.SettingType.BOOLEAN}}static addPrioritySettingsConfig(t){t.settingConfigs.hasOwnProperty("groups")||t.settingConfigs.hasOwnProperty("conditions")||t.setSettingsConfig({groups:[],conditions:{}}),t.settingConfigs.groups.push({input_group:{}}),t.settingConfigs.conditions.priorityLevel=t=>0==t.inputMethod.value,t.settingConfigs.conditions.in1=t=>1==t.inputMethod.value,t.settingConfigs.conditions.in2=t=>1==t.inputMethod.value,t.settingConfigs.conditions.in3=t=>1==t.inputMethod.value,t.settingConfigs.conditions.in4=t=>1==t.inputMethod.value,t.settingConfigs.conditions.in5=t=>1==t.inputMethod.value,t.settingConfigs.conditions.in6=t=>1==t.inputMethod.value,t.settingConfigs.conditions.in7=t=>1==t.inputMethod.value,t.settingConfigs.conditions.in8=t=>1==t.inputMethod.value,t.settingConfigs.conditions.in9=t=>1==t.inputMethod.value,t.settingConfigs.conditions.in10=t=>1==t.inputMethod.value,t.settingConfigs.conditions.in11=t=>1==t.inputMethod.value,t.settingConfigs.conditions.in12=t=>1==t.inputMethod.value,t.settingConfigs.conditions.in13=t=>1==t.inputMethod.value,t.settingConfigs.conditions.in14=t=>1==t.inputMethod.value,t.settingConfigs.conditions.in15=t=>1==t.inputMethod.value,t.settingConfigs.conditions.in16=t=>1==t.inputMethod.value,t.properties.priorityArray={};for(var e=1;e<16;e++)t.properties.priorityArray[String(e)]=null;t.properties.inputMethod=t.settings.inputMethod.value,t.properties.prioritySettingsArray=new Array(16).fill(!1)}static priorityOnCreated(t){t.properties.dynamicInputStartPosition=t.getInputsCount(),r.default.persistProperties(t,!0,!0,!0,!0)}static doPriorityFunctions(t){return s(this,void 0,void 0,(function*(){let e=null,i=null;switch(t.properties.inputMethod){case 0:e=t.getInputData(t.properties.priorityStartInput),null==e&&(e=null),i=t.getInputData(t.properties.priorityStartInput+1)||16,(i>16||null==i)&&(i=16),t.properties.priorityArray[String(i)]=e;break;case 1:var s=0;t.properties.prioritySettingsArray.forEach(t=>{t&&s++});for(var n=0;n<s;n++){e=t.getInputData(t.properties.priorityStartInput+n),null==e&&(e=null);const i=t.inputs[t.properties.priorityStartInput+n].name;if(i.startsWith("in")){const s=Number(i.replace(/\D/g,""));isNaN(s)||(t.properties.priorityArray[`${s}`]=e)}}break;case 2:if(e=t.getInputData(t.properties.priorityStartInput),"string"==typeof e)try{t.properties.priorityArray=JSON.parse(e)}catch(t){console.log("PRIORITY ARRAY JSON ERROR: ",t)}}const a=Object.values(t.properties.priorityArray).findIndex(t=>null!=t)+1;a<=0?(t.setOutputData(t.properties.priorityStartOutput,null),t.setOutputData(t.properties.priorityStartOutput+1,null),t.setOutputData(t.properties.priorityStartOutput+2,null)):(t.setOutputData(t.properties.priorityStartOutput,t.properties.priorityArray[String(a)]),t.setOutputData(t.properties.priorityStartOutput+1,a),t.setOutputData(t.properties.priorityStartOutput+2,t.properties.priorityArray))}))}static priorityFunctionsForAfterSettingsChange(t){return s(this,void 0,void 0,(function*(){if(t.properties.inputMethod!==t.settings.inputMethod.value)switch(o.initializePriorityArray(t),t.settings.inputMethod.value){case 0:2==t.properties.inputMethod?t.removeInputAtPosition(t.properties.priorityStartInput):1==t.properties.inputMethod&&o.updatePriorityInputsFromSettings(t,!0),t.addInputAtPosition(t.properties.priorityStartInput,"inputValue",a.Type.ANY),t.addInputAtPosition(t.properties.priorityStartInput+1,"inputPriority",a.Type.NUMBER);break;case 1:2==t.properties.inputMethod?t.removeInputAtPosition(t.properties.priorityStartInput):0==t.properties.inputMethod&&(t.removeInputAtPosition(t.properties.priorityStartInput),t.removeInputAtPosition(t.properties.priorityStartInput)),o.updatePriorityInputsFromSettings(t);break;case 2:1==t.properties.inputMethod?o.updatePriorityInputsFromSettings(t,!0):0==t.properties.inputMethod&&(t.removeInputAtPosition(t.properties.priorityStartInput),t.removeInputAtPosition(t.properties.priorityStartInput)),t.addInputAtPosition(t.properties.priorityStartInput,"inputJSON",a.Type.ANY)}else 1==t.properties.inputMethod&&o.updatePriorityInputsFromSettings(t);t.properties.inputMethod=t.settings.inputMethod.value,r.default.persistProperties(t,!0,!0,!0)}))}static updatePriorityInputsFromSettings(t,e=!1){return s(this,void 0,void 0,(function*(){const i=t.properties.priorityStartInput;for(var s=new Array(16).fill(!1),n=new Array(16).fill(-1),r=0;r<16;r++){if(s[r]=!e&&t.settings["in"+(r+1)].value,t.inputs.hasOwnProperty(`${i+r}`)){const e=t.inputs[`${i+r}`].name;if(e.startsWith("in")){const t=Number(e.replace(/\D/g,""));isNaN(t)||(n[r]=t)}}t.properties.prioritySettingsArray=s}for(var o=0;o<16;o++)if(s[o])for(var u=0;u<=o;u++){const e=n[u];if(e==o+1)break;if(-1==e||e>o+1){t.addInputAtPosition(i+u,"in"+(o+1),a.Type.ANY),n.splice(u,0,o+1),n.pop();break}}else if(!s[o])for(var d=0;d<=o;d++){const e=n[d];if(-1==e||e>o+1)break;if(n[d]==o+1){t.removeInputAtPosition(i+d),n.splice(d,1),n.push(-1);break}}}))}static initializePriorityArray(t){return s(this,void 0,void 0,(function*(){t.properties.priorityArray={};for(var e=1;e<16;e++)t.properties.priorityArray[String(e)]=null}))}}e.default=o},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(283),r=i(1),o=i(17),u=i(3);class d extends s.Node{constructor(){super(),this.services=["Gmail","Hotmail","Outlook365","Yahoo"].map(t=>({value:t,text:t})),this.title="Email",this.description="Once configured (in settings) with the sender email server details ('email' and 'password') for Gmail, Hotmail, Outlook365, or Yahoo accounts: This node will attempt to send a new email when 'trigger' transitions from 'false' to 'true'.   The String 'recipient' value will be the to: email address; The String 'subject' value will be the email subject; and the String 'message' value will be the email body.  The 'response' output will be 'true' if the email is sent successfully.  The 'error' output will be an error message String if there is an error sending the email. ",this.settings.service={description:"Service",value:this.services[0].value,type:s.SettingType.DROPDOWN,config:{items:this.services}},this.settings.user={description:"Email",value:"",type:s.SettingType.STRING},this.settings.pass={description:"Password",value:"",type:s.SettingType.PASSWORD},this.addInput("trigger",r.Type.BOOLEAN),this.addInputWithSettings("recipient",r.Type.STRING,"","To",!1),this.addInputWithSettings("subject",r.Type.STRING,"","Subject",!1),this.addInputWithSettings("message",r.Type.STRING,"","Message",!1),this.addOutput("response",r.Type.STRING),this.addOutput("error",r.Type.STRING)}onInputUpdated(){if(this.side!==n.Side.server)return;let t=this.getInputData(0);if(u.default.hasInput(t)||(t=!1),t==this.lastTrigger)return;if(this.lastTrigger=t,0==t)return;const e=this.settings.service.value,i=this.settings.user.value,s=i,r=this.settings.pass.value,d=this.getInputData(1),p=this.getInputData(2),l=this.getInputData(3);a.createTransport({service:e,auth:{user:i,pass:o.default.decrypt(r)}}).sendMail({from:s,to:d,subject:p,text:l},t=>{t?this.emitError(t.message):this.emitResult(!0)})}emitResult(t){this.setOutputData(0,t),this.setOutputData(1,null)}emitError(t){this.setOutputData(0,null),this.setOutputData(1,t)}}n.Container.registerNodeType("protocols/misc/email",d)},function(t,e){t.exports=require("nodemailer")},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(10),a=i(22),r=i(9),o=i(0),u=i(14),d=i(2),p=i(1),l=i(3),h=i(48),c=i(5),g=i(28),y=i(32);class m extends u.ContainerNode{constructor(t){super(t),this.pointNodes=[],this.inAlarmTrigger=0,this.inHistoryTrigger=1,this.inInput=2,this.outVal=0,this.outError=1,this.outMessageJson=2,this.outAlarm=3,this.lastInterval=1e3,this.runState=!0,this._ui="ui",this._di="di",this.title="Edge 28 Network",this.description=h.default.NetworkDesc,this.addInputWithSettings("enable",p.Type.BOOLEAN,!0,"Enable"),this.addInputWithSettings("interval",p.Type.NUMBER,2,"Polling Interval"),this.addOutput("connected",p.Type.BOOLEAN),this.addOutput("error",p.Type.STRING),this.side!==o.Side.server&&(this.iconImageUrl=a.default.frog),this.headerColor="#184840",this.settings.time={description:"Polling Interval Time Setting",type:d.SettingType.DROPDOWN,config:{items:[{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"seconds"},this.setSettingsConfig({groups:[{interval:{weight:2},time:{}}]})}fetchPointValue(t,e,i,a){return s(this,void 0,void 0,(function*(){const s=`${l.default.buildUrl(t,e)}/api/${i}/read/all/${a}`;return(yield n.default.get(s)).data}))}onAdded(){const t=Object.create(null,{onAdded:{get:()=>super.onAdded}});return s(this,void 0,void 0,(function*(){if(t.onAdded.call(this),this.inputs[1].name=`[interval] (${this.settings.time.value})`,clearInterval(this.UI_timeoutFunc),clearInterval(this.DI_timeoutFunc),!this.getInputData(0))return this.setOutputData(0,!1),void(this.runState=!1);let e=this.getInputData(1);e=c.default.timeConvert(e,this.settings.time.value),this.startInputPolling(e),yield this.onInputUpdated()}))}onRemoved(){const t=Object.create(null,{onRemoved:{get:()=>super.onRemoved}});return s(this,void 0,void 0,(function*(){t.onRemoved.call(this),clearInterval(this.UI_timeoutFunc),clearInterval(this.DI_timeoutFunc)}))}startInputPolling(t){this.side===o.Side.server&&(this.UI_timeoutFunc=setInterval(()=>s(this,void 0,void 0,(function*(){yield this.pollUIs(),this.sendPayloadToPointNodesFunc()})),t),this.DI_timeoutFunc=setInterval(()=>s(this,void 0,void 0,(function*(){yield this.pollDIs(),this.sendPayloadToPointNodesFunc()})),t+5))}pollUIs(){return s(this,void 0,void 0,(function*(){try{this.edgeReadUI_Store=yield this.fetchPointValue(g.edgeIp,g.edgePort,g.edgeApiVer,this._ui),this.setOutputData(0,!0),this.setOutputData(1,!1)}catch(t){this.debugInfo(`ERROR: getting edge point type: ${this._ui} ${t}`),this.setOutputData(0,!1),this.setOutputData(1,!0)}}))}pollDIs(){return s(this,void 0,void 0,(function*(){try{this.edgeReadDI_Store=yield this.fetchPointValue(g.edgeIp,g.edgePort,g.edgeApiVer,this._di),this.setOutputData(0,!0),this.setOutputData(1,!1)}catch(t){this.debugInfo(`ERROR: getting edge point type: ${this._di} ${t}`),this.setOutputData(0,!1),this.setOutputData(1,!0)}}))}pollInputsAndSend(){return s(this,void 0,void 0,(function*(){this.side===o.Side.server&&(yield this.pollUIs(),yield this.pollDIs(),this.sendPayloadToPointNodesFunc())}))}sendPayloadToPointNodesFunc(){if(this.side===o.Side.server)for(let t of this.pointNodes)y.default.sendPayloadToChild(t,{pointsDI:this.edgeReadDI_Store,pointsUI:this.edgeReadUI_Store})}subscribe({action:t,payload:e}){switch(t){case g.ADD_POINT:this.pointNodes.push(e);break;case g.REMOVE_POINT:this.pointNodes=this.pointNodes.filter(t=>t.id!==e.id);break;default:this.debugWarn("Request action doesn't match")}}onInputUpdated(){return s(this,void 0,void 0,(function*(){if(this.side!==o.Side.server)return;let t=this.getInputData(0);if(!t&&this.runState)return clearInterval(this.UI_timeoutFunc),clearInterval(this.DI_timeoutFunc),this.setOutputData(0,!1,!0),void(this.runState=!1);if(!t&&!this.runState)return this.setOutputData(0,!1,!0),void(this.runState=!1);if(t){let t=this.getInputData(1);if(t=c.default.timeConvert(t,this.settings.time.value),this.runState)return void(t!=this.lastInterval&&(this.lastInterval=t,clearInterval(this.UI_timeoutFunc),clearInterval(this.DI_timeoutFunc),this.startInputPolling(t)));if(!this.runState)return this.runState=!0,void this.startInputPolling(t);yield this.pollInputsAndSend()}}))}onAfterSettingsChange(t){const e=Object.create(null,{onAfterSettingsChange:{get:()=>super.onAfterSettingsChange}});return s(this,void 0,void 0,(function*(){e.onAfterSettingsChange.call(this,t),this.side===o.Side.server&&(yield this.onInputUpdated())}))}}o.Container.registerNodeType(r.EDGE_28_NETWORK,m)},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(2),a=i(0),r=i(1),o=i(28),u=i(32),d=i(72),p=i(286),l=i(49),h=i(3),c=i(9),g=i(73),y=i(31),m=i(48);var f,v;!function(t){t[t.DIGITAL=1]="DIGITAL",t[t.UI_DIGITAL=2]="UI_DIGITAL",t[t._0_10DC=3]="_0_10DC",t[t._0_20MA=4]="_0_20MA",t[t._4_20MA=5]="_4_20MA",t[t._10K_THERMISTOR=6]="_10K_THERMISTOR"}(f||(f={})),function(t){t.DIGITAL="Digital",t.UI_DIGITAL="UI-Digital",t._0_10DC="0-10dc",t._0_20MA="0-20ma",t._4_20MA="4-20ma",t._10K_THERMISTOR="10k-thermistor"}(v||(v={}));class T extends y.default{constructor(){super(),this.title="Edge IO 28 Input",this.description=m.default.inputsDesc,this.addOutput("output",r.Type.NUMBER),this.addOutput("output-json",r.Type.STRING),this.addOutput("error",r.Type.STRING),this.settings.pointEnable={description:"Point enable",value:!1,type:n.SettingType.BOOLEAN},this.settings.pointDebug={description:"Point Debug",value:!1,type:n.SettingType.BOOLEAN},this.settings.pointNumber={description:"Point",value:"DI1",type:n.SettingType.DROPDOWN,config:{items:[{value:"DI1",text:"DI1"},{value:"DI2",text:"DI2"},{value:"DI3",text:"DI3"},{value:"DI4",text:"DI4"},{value:"DI5",text:"DI5"},{value:"DI6",text:"DI6"},{value:"DI7",text:"DI7"},{value:"UI1",text:"UI1"},{value:"UI2",text:"UI2"},{value:"UI3",text:"UI3"},{value:"UI4",text:"UI4"},{value:"UI5",text:"UI5"},{value:"UI6",text:"UI6"},{value:"UI7",text:"UI7"}]}},this.settings.pointType={description:"Point Type",value:1,type:n.SettingType.DROPDOWN,config:{items:[{value:f.DIGITAL,text:"Digital"},{value:f.UI_DIGITAL,text:"UI-Digital"},{value:f._0_10DC,text:"0-10dc"},{value:f._0_20MA,text:"0-20ma"},{value:f._4_20MA,text:"4-20ma"},{value:f._10K_THERMISTOR,text:"10k-thermistor"}],value:f.DIGITAL}},this.settings.value_group={description:"Point Settings",value:"",type:n.SettingType.GROUP},this.settings.lowScale={description:"Low scale",value:0,type:n.SettingType.NUMBER},this.settings.highScale={description:"High scale",value:100,type:n.SettingType.NUMBER},this.settings.decimals={description:"Out value precision",value:2,type:n.SettingType.NUMBER},this.settings.offset={description:"Out value offset",value:0,type:n.SettingType.NUMBER},this.settings.mathFunc={description:"Math on output value (optional)",type:n.SettingType.DROPDOWN,config:{items:[{value:g.MATH_FUNC_TYPE.NA,text:"na"},{value:g.MATH_FUNC_TYPE.ADD,text:"add"},{value:g.MATH_FUNC_TYPE.SUBTRACT,text:"subtract"},{value:g.MATH_FUNC_TYPE.MULTIPLY,text:"multiply"},{value:g.MATH_FUNC_TYPE.DIVIDE,text:"divide"},{value:g.MATH_FUNC_TYPE.NUMBER_INVERT,text:"invert"}]},value:g.MATH_FUNC_TYPE.NA},this.settings.mathValue={description:"Enter a value",value:1,type:n.SettingType.NUMBER},this.settings.units_group={description:"Units (Save to get units)",type:n.SettingType.GROUP},this.settings.unitsType={description:"Units",type:n.SettingType.DROPDOWN,config:{items:l.default.unitCategory}},this.settings.units={description:"Units",value:l.default.COMMON_METRIC.NO_UNITS,type:n.SettingType.DROPDOWN};const t=[f.DIGITAL,f.UI_DIGITAL];this.setSettingsConfig({groups:[{pointEnable:{},pointDebug:{}},{pointNumber:{},pointType:{}},{decimals:{},offset:{}},{lowScale:{},highScale:{}},{mathFunc:{},mathValue:{}},{unitsType:{},units:{}}],conditions:{decimals:e=>{const i=e.pointType.value;return!t.includes(i)},offset:e=>{const i=e.pointType.value;return!t.includes(i)},lowScale:e=>{const i=e.pointType.value;return!t.includes(i)},highScale:e=>{const i=e.pointType.value;return!t.includes(i)},mathValue:t=>{const e=t.mathFunc.value;return![g.MATH_FUNC_TYPE.NUMBER_INVERT,g.MATH_FUNC_TYPE.NA].includes(e)}}}),this.addHistorySettingsConfig(0,!1)}onAdded(){const t=Object.create(null,{onAdded:{get:()=>super.onAdded}});return s(this,void 0,void 0,(function*(){this.updateTitle(),t.onAdded.call(this),this.side===a.Side.server&&(yield h.default.sleep(1e3),u.default.addPoint(this.getParentNode(),this))}))}onAfterSettingsChange(){const t=Object.create(null,{onAfterSettingsChange:{get:()=>super.onAfterSettingsChange}});return s(this,void 0,void 0,(function*(){if(yield t.onAfterSettingsChange.call(this),this.side!==a.Side.server)return;this.updateTitle();const e=this.settings.unitsType.value;this.settings.units.config={items:l.default.unitType(e)},this.sendPointValue(this.out),this.broadcastSettingsToClients(),setTimeout(()=>{this.settings.pointDebug.value=!1},12e4)}))}onRemoved(){super.onRemoved(),u.default.removePoint(this.getParentNode(),this)}sendJson(){return{name:this.name,pointValue:this.out,enable:this.settings.pointEnable.value,units:this.settings.units.value,pointNumber:this.settings.pointNumber.value,pointType:this.settings.pointType.value,pointOffset:this.settings.offset.value}}nodeColour(){!1===this.settings.pointEnable.value?this.setNodeState(n.NodeState.INFO):this.setNodeState(n.NodeState.NORMAL)}sendPointValue(t){this.settings.pointDebug.value;this.setOutputData(0,t),this.setOutputData(1,this.sendJson())}pointOffset(t){let e=this.settings.offset.value;return null===e&&(e=0),parseFloat(t)+parseFloat(e)}pointTypeText(t){switch(t){case f.DIGITAL:return v.DIGITAL;case f.UI_DIGITAL:return v.UI_DIGITAL;case f._0_10DC:return v._0_10DC;case f._0_20MA:return v._0_20MA;case f._4_20MA:return v._4_20MA;case f._10K_THERMISTOR:return v._10K_THERMISTOR;default:this.debugWarn("Unknown type of object")}}updateTitle(){const t=this.settings.pointNumber.value;this.title=`Edge-28-Input: (${t} as ${this.pointTypeText(this.settings.pointType.value)})`,this.broadcastTitleToClients()}pointCalcs(t){const e=this.settings.mathFunc.value,i=this.settings.mathValue.value,s=this.settings.decimals.value,n=this.settings.pointType.value,a=[f.DIGITAL,f.UI_DIGITAL];g.default.validateNumbers(t,i)&&(e!==g.MATH_FUNC_TYPE.NA?a.includes(n)?(this.out=g.default.mathSwitch(e,t,i),this.out=this.pointOffset(this.out),this.sendPointValue(this.out)):(this.out=g.default.mathSwitch(e,t,i),this.out=g.default.decimals(this.out,s),this.out=this.pointOffset(this.out),this.sendPointValue(this.out)):(a.includes(n)?this.out=t:(this.out=g.default.decimals(t,s),this.out=this.pointOffset(this.out)),this.sendPointValue(this.out)))}uiType(t,e,i,s){const n=this.settings.lowScale.value,a=this.settings.highScale.value;switch(t){case f.DIGITAL:this.pointCalcs(d.default.diInvert(e));break;case f.UI_DIGITAL:this.pointCalcs(d.default.uiAsDI(e));break;case f._0_10DC:const t=h.default.clamp(e,0,a);this.pointCalcs(d.default.scaleFromGPIOValue(t,n,a));break;case f._0_20MA:const r=h.default.clamp(e,0,a);this.pointCalcs(d.default.scaleFromGPIOValue(r,n,a));break;case f._4_20MA:const o=d.default.scaleUI420ma(e,i,s);this.pointCalcs(d.default.scale420maToRange(o,n,a));break;case f._10K_THERMISTOR:this.pointCalcs(p.default.calc10kThermistor(e))}}subscribe({action:t,payload:e}){switch(t){case o.SEND_PAYLOAD_TO_CHILD:if(!1===this.settings.pointEnable.value)return;const t=this.settings.pointType.value,i=this.settings.pointNumber.value;let s,n,a;if(t===f.DIGITAL){if(!["DI1","DI2","DI3","DI4","DI5","DI6","DI7"].includes(i))return;try{for(let t of[e])s=t.pointsDI["4_val"][this.settings.pointNumber.value].val;this.uiType(t,s,e)}catch(t){this.debugErr(t)}}else{if(!["UI1","UI2","UI3","UI4","UI5","UI6","UI7"].includes(i))return;try{for(let t of[e])s=t.pointsUI["4_val"][this.settings.pointNumber.value].val,n=t.pointsUI["6_min_range"][this.settings.pointNumber.value],a=t.pointsUI["7_max_range"][this.settings.pointNumber.value];this.uiType(t,s,n,a)}catch(t){this.debugErr(t)}}break;default:this.debugWarn("Request action doesn't match")}}}a.Container.registerNodeType(c.EDGE_28_INPUT,T,c.EDGE_28_NETWORK)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class s{}e.default=s,s.calc10kThermistor=t=>{const e=[.9556905617,.9540427367,.9523006917,.9504602339,.9485172744,.946467535,.944306865,.9420290739,.9396319594,.9371093311,.9344568928,.9316708217,.9287447039,.9256742939,.9224557261,.91908403,.9155539628,.9118616967,.9080003267,.9039690867,.8997620283,.8953731717,.8908015628,.8860418194,.8810918183,.8759457717,.8706035044,.8650596894,.8593146611,.8533643761,.8472041872,.8408402328,.8342674089,.8274824028,.8204910228,.8132897394,.8058858472,.7982715539,.7904548383,.7824349294,.7742229339,.7658146322,.7572185678,.7484302572,.7394743383,.73033582,.7210303644,.7115748456,.7019597739,.6922074256,.6823111222,.6722912061,.6621575094,.6519178717,.6415775039,.6311526306,.6206437806,.6100630156,.5994548717,.588779615,.5780593139,.5673369194,.5565970278,.5458604304,.5351246092,.5244065761,.513722581,.5030878249,.4924882451,.4819615594,.4714876446,.4611024332,.450811465,.4405833684,.4304850415,.4204801987,.4106001113,.4008382911,.3912252038,.3817085907,.3723569356,.3631557389,.3540861978,.3451724444,.3363907538,.3277628108,.3193109318,.3110054108,.3028656927,.2949116408,.2871070734,.2794687028,.272013505,.264698569,.2575375869,.2505444204,.2437330494,.2370527064,.2305799944,.2242619327,.2180410733,.2119941474,.2061319159,.2003937116,.1948594611,.1893929343,.1841473882,.1789825137,.1739791116,.1691445094,.1644078283,.1597735289,.1553259162,.1509105486,.1466923378,.1425957094,.1386248913,.1347001575,.1309926256,.1273378137,.1237375067,.1202802759,.116969961,.1137221844,.1105386486,.107421042,.1044610471,.1015715166,.09875404639,.09610194494,.09343384,.09084241711,.0884225005,.08598938206,.08363729444,.08136762256,.07918171356,.07698514917,.07497021833,.07294627961,.07091327239,.06906601989,.06721124833,.06544711883,.06367616028,.061997282,.06041153422,.05882030111,.05722355406,.05572157039,.05431530289,.05290475159,.05148989689,.05017223272,.04895260508,.04762772774,.04640141447,.045274458,.04414477874,.04301236682,.04187721228,.04084286529,.03980623591,.03887131178,.03793452726,.03699587678,.03605535477,.03511295563,.03427368709,.03343292697,.03269603518,.03185246761,.03111311315,.03037260522,.02963094111,.02888811812,.02825048826,.02761200327,.02697266141,.02633246097,.02569140021,.02504947741,.02451388196,.02397768566,.02333345552,.02279593374,.02236548142,.02182687151,.02128765566,.02085584601,.02042364737],i=[-40,-39,-38,-37,-36,-35,-34,-33,-32,-31,-30,-29,-28,-27,-26,-25,-24,-23,-22,-21,-20,-19,-18,-17,-16,-15,-14,-13,-12,-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150];let s=t;for(let t=0;t<190;t++)if(s<=e[t]&&s>e[t+1]){s=i[t+1]-(s-e[t+1])/(e[t]-e[t+1]);break}return s}},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(2),a=i(0),r=i(1),o=i(32),u=i(72),d=i(49),p=i(28),l=i(9),h=i(31),c=i(48),g=i(4);var y,m;!function(t){t[t.DO=1]="DO",t[t.UO_AS_DIGITAL=2]="UO_AS_DIGITAL",t[t.UO_AS_0_10DC=3]="UO_AS_0_10DC"}(y||(y={})),function(t){t.DO="DO",t.UO_AS_DIGITAL="UO As Digital",t.UO_AS_0_10DC="UO As 0-10dc"}(m||(m={}));class f extends h.default{constructor(t){super(t),this.uuid=null,this.deviceContainerID=null,this.topic=null,this.newSetting=!1,this.inInput=0,this.inAlarmTrigger=1,this.inHistoryTrigger=2,this.title="Edge IO 28 Output",this.description=c.default.NetworkDesc,this.addInput("input",r.Type.ANY),this.addOutput("output",r.Type.NUMBER),this.addOutput("output-json",r.Type.JSON),this.properties.pointVal=null,this.settings.pointEnable={description:"Point enable",value:!1,type:n.SettingType.BOOLEAN},this.settings.pointType={description:"Point Type",value:y.DO,type:n.SettingType.DROPDOWN,config:{items:[{value:y.DO,text:m.DO},{value:y.UO_AS_DIGITAL,text:m.UO_AS_DIGITAL},{value:y.UO_AS_0_10DC,text:m.UO_AS_0_10DC}]}},this.settings.pointNumber={description:"Point",value:"UO1",type:n.SettingType.DROPDOWN,config:{items:[{value:"UO1",text:"UO1"},{value:"UO2",text:"UO2"},{value:"UO3",text:"UO3"},{value:"UO4",text:"UO4"},{value:"UO5",text:"UO5"},{value:"UO6",text:"UO6"},{value:"UO7",text:"UO7"},{value:"DO1",text:"DO1"},{value:"DO2",text:"DO2"},{value:"DO3",text:"DO3"},{value:"DO4",text:"DO4"},{value:"DO5",text:"DO5"},{value:"R1",text:"R1"},{value:"R2",text:"R2"}]}},this.settings.units_group={description:"Units (Save to get units)",type:n.SettingType.GROUP},this.settings.unitsType={description:"Units Category",type:n.SettingType.DROPDOWN,config:{items:d.default.unitCategory}},this.settings.units={description:"Units Type",value:d.default.COMMON_METRIC.NO_UNITS,type:n.SettingType.DROPDOWN},this.setSettingsConfig({groups:[{pointNumber:{},pointType:{}},{mathFunc:{},mathValue:{}},{unitsType:{},units:{}}],conditions:{mathValue:t=>{const e=t.mathFunc.value;return![10,0].includes(e)}}}),this.addHistorySettingsConfig()}onAdded(){super.onAdded(),this.updateTitle(),this.side===a.Side.server&&(this.EXECUTE_INTERVAL=6e4,this.lastSendTime=(new Date).valueOf(),this.inputChange())}onExecute(){return s(this,void 0,void 0,(function*(){this.side===a.Side.server&&(new Date).valueOf()-1e3>this.lastSendTime&&(yield this.onInputUpdated())}))}pointType(t){switch(t){case y.DO:return"do";case y.UO_AS_DIGITAL:case y.UO_AS_0_10DC:return"uo";default:this.debugWarn("Unknown type of object")}}pointTypeText(t){switch(t){case y.DO:return m.DO;case y.UO_AS_DIGITAL:return m.UO_AS_DIGITAL;case y.UO_AS_0_10DC:return m.UO_AS_0_10DC;default:this.debugWarn("Unknown type of object")}}onInputUpdated(){const t=Object.create(null,{onInputUpdated:{get:()=>super.onInputUpdated}});return s(this,void 0,void 0,(function*(){yield t.onInputUpdated.call(this),this.inputChange()}))}onRemoved(){super.onRemoved()}onAfterSettingsChange(){const t=Object.create(null,{onAfterSettingsChange:{get:()=>super.onAfterSettingsChange}});return s(this,void 0,void 0,(function*(){yield t.onAfterSettingsChange.call(this),this.updateTitle();const e=this.settings.unitsType.value;this.settings.units.config={items:d.default.unitType(e)},this.broadcastSettingsToClients(),this.inputChange()}))}inputChange(){if(this.side!==a.Side.server)return;const t=this.getInputData(this.inInput);this.apiCall(t)}updateTitle(){const t=this.settings.pointNumber.value;this.title=`Edge-28-Output: (${t} as ${this.pointTypeText(this.settings.pointType.value)})`,this.broadcastTitleToClients()}sendJson(){return{name:this.name,pointValue:this.properties.pointVal,enable:this.settings.pointEnable.value,units:this.settings.units.value,pointNumber:this.settings.pointNumber.value,pointType:this.settings.pointType.value}}apiCall(t){if(this.side!==a.Side.server)return;if(!1===this.settings.pointEnable.value)return;const e=this.settings.pointNumber.value;let i=null;const s=t;if(null==t)return;if(this.settings.pointType.value===y.DO?"boolean"==typeof t?i=t?1:0:"string"==typeof t?"1"===t||"true"===t?i=1:"0"!==t&&"false"!==t||(i=0):"number"==typeof t?t>=1?i=1:t<1&&(i=0):this.debugInfo("ERROR: input value must be a int 1 or 0 or a bool"):this.settings.pointType.value===y.UO_AS_DIGITAL?"boolean"==typeof t?i=t?0:100:"string"==typeof t?"1"===t||"true"===t?i=0:"0"!==t&&"false"!==t||(i=100):"number"==typeof t?t>=1?i=0:t<1&&(i=100):this.debugInfo("ERROR: input value must be a int 1 or 0 or a bool"):this.settings.pointType.value===y.UO_AS_0_10DC&&("number"==typeof t?t>=100?i=u.default.scaleToGPIOValue(100,0,100):(t*=.9839,i=u.default.scaleToGPIOValue(t,0,100)):"string"==typeof t&&this.debugInfo("ERROR: input value must be a float")),g.isNull(i))return;const n=this.pointType(this.settings.pointType.value);o.default.writePointValue(p.edgeIp,p.edgePort,p.edgeApiVer,n,e,i,16).then(t=>{this.properties.pointVal=s,this.setOutputData(0,s),this.setOutputData(1,this.sendJson()),this.lastSendTime=(new Date).valueOf()}).catch(t=>{this.debugInfo(`ERROR: getting edge point type: ${n} ${t}`)})}}a.Container.registerNodeType(l.EDGE_28_OUTPUT,f,l.EDGE_28_NETWORK)},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(2),a=i(0),r=i(1),o=i(3),u=i(10),d=i(5),p=i(32),l=i(28);class h extends n.Node{constructor(){super(),this.title="Edge IO 28 LORA Connect Reset",this.description="## Description\n  The is node is used in conjunction with the ***edge-io-28*** when using the ***lora-connect***. This node uses an internal rest-api to rest a ***LORA Connect gateway*** connected to an ***edge-io-28*** controller\n    \n ## Description\n    \n  The reason for this nodes is to give the user more control over the nube hardware\n  When a ***trigger*** is activated on the node input or the ***interval*** timer is triggered the lora-modules will be reset\n  The reboot of the module only takes ***1000ms*** to restart\n "+this.addInputWithSettings("enableInterval",r.Type.BOOLEAN,!1,"Enable Interval Reset"),this.addInputWithSettings("interval",r.Type.NUMBER,15,"Interval"),this.addInput("trigger",r.Type.BOOLEAN),this.addOutput("lastReset"),this.settings.time={description:"Units",type:n.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"minutes"},this.setSettingsConfig({groups:[{interval:{weight:2},time:{}}]})}writePointValue(t,e,i,n,a,r,d){return s(this,void 0,void 0,(function*(){const s=`${o.default.buildUrl(t,e)}/api/${i}/write/${n}/${a}/${r}/${d}`;return(yield u.default.get(s)).data}))}onAdded(){if(this.inputs[1].name=`[interval] (${this.settings.time.value})`,this.side!==a.Side.server)return;let t=this.getInputData(1);t=d.default.timeConvert(t,this.settings.time.value),this.EXECUTE_INTERVAL=t;try{p.default.addPoint(this.getParentNode(),this)}catch(t){}}onExecute(){this.side===a.Side.server&&this.getInputData(0)&&this.resetLORAConnect()}onInputUpdated(){if(this.side!==a.Side.server)return;let t=this.getInputData(1);t=d.default.timeConvert(t,this.settings.time.value),this.EXECUTE_INTERVAL=t;let e=this.getInputData(2);e&&!this.lastTrigger&&this.resetLORAConnect(),this.lastTrigger=e}resetLORAConnect(){if(this.side!==a.Side.server)return;this.writePointValue(l.edgeIp,l.edgePort,l.edgeApiVer,"do","lc",0,16).then(t=>{this.setOutputData(0,(new Date).valueOf(),!0),this.timeoutFunc=setTimeout(()=>{this.writePointValue(l.edgeIp,l.edgePort,l.edgeApiVer,"do","lc",1,16)},2e3)}).catch(t=>this.debugInfo(`ERROR: LoRa Edge-28 Reset - ${t}`))}onAfterSettingsChange(){this.inputs[1].name=`[interval] (${this.settings.time.value})`,this.side===a.Side.server&&this.onInputUpdated()}}e.Edge28LORAResetNode=h,a.Container.registerNodeType("protocols/nube/edge-28-lora-reset",h)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(18),n=i(2),a=i(0),r=i(14),o=i(1),u=i(33),d=i(50),p=i(9);class l extends r.ContainerNode{constructor(t){super(t),this.bacnetClient=null,this.inputWhoIs=0,this.deviceNodes=[],this.outputOut=0,this.outputMsg=1,this.outputError=2,this.title="BACnet Network",this.description="This node acts as a container for bacnet-device nodes. All bacnet-device nodes should be added within the bacnet-network container.  IP configuration for the BACnet network connection are set from settings.  The bacnet-network node can also be used to perform a BACnet Discover (WhoIs).",this.addInput("discover",o.Type.BOOLEAN),this.addOutput("out",o.Type.STRING),this.addOutput("out msg",o.Type.STRING),this.addOutput("error",o.Type.BOOLEAN),this.settings.networkEnable={description:"Network enable",value:!1,type:n.SettingType.BOOLEAN},this.settings.interface={description:"interface",value:"0.0.0.0",type:n.SettingType.STRING},this.settings.port={description:"port",value:47808,type:n.SettingType.NUMBER},this.settings.broadcastAddress={description:"broadcastAddress",value:"255.255.255.255",type:n.SettingType.STRING},this.settings.apduTimeout={description:"BACnet apduTimeout",value:6e3,type:n.SettingType.NUMBER},this.settings.networkNumber={description:"BACnet network Number (Set to -1 to disable)",value:-1,type:n.SettingType.NUMBER},this.settings.networkNumberWhoIs={description:"BACnet Network Number for Discover",type:n.SettingType.DROPDOWN,config:{items:[{value:0,text:"This network number"},{value:1,text:"Global (0xFFFF)"},{value:2,text:"Blank"}]},value:0},this.settings.devicePolling={description:"Polling time setting in ms",value:2e3,type:n.SettingType.NUMBER}}onAdded(){super.onAdded(),this.initializeBacnetClient()}onAfterSettingsChange(t){super.onAfterSettingsChange(t),this.side===a.Side.server&&this.initializeBacnetClient()}onInputUpdated(){this.iAm(),this.whoIs()}whoIs(){if(this.side!==a.Side.server)return;const t=this.settings.interface.value,e=this.settings.networkNumber.value,i=this.settings.networkNumberWhoIs.value;this.bacnetClient?0===i?(this.bacnetClient.whoIs({net:e,interface:t}),this.setOutputData(this.outputMsg,`INFO: Send a WhoIs on net: ${e} interface: ${t}`)):1===i?(this.bacnetClient.whoIs({net:65535,interface:t}),this.setOutputData(this.outputMsg,`INFO: Send a WhoIs on net: 65535 interface: ${t}`)):2===i&&(this.bacnetClient.whoIs({interface:t}),this.setOutputData(this.outputMsg,`INFO: Send a WhoIs on net: BLANK interface: ${t}`)):this.setOutputData(this.outputMsg,"ERROR: Failed to send whoIs")}iAm(){this.side===a.Side.server&&(this.setOutputData(this.outputMsg,"INFO: On iAm replay"),this.bacnetClient.on("iAm",t=>{this.setOutputData(this.outputMsg,`INFO: On iAm replay from device: ${t.payload.deviceId}`)}))}subscribe({action:t,payload:e}){switch(t){case u.ADD_DEVICE:this.deviceNodes.push(e);break;case u.REMOVE_DEVICE:this.deviceNodes=this.deviceNodes.filter(t=>t.id!==e.id);break;case u.GET_BACNET_CLIENT:return this.bacnetClient;case u.GET_NETWORK_SETTINGS:return this.settings;default:this.debugWarn("Request action doesn't match")}}onRemoved(){super.onRemoved(),this.closeBacnetClient()}closeBacnetClient(){this.bacnetClient&&(this.setOutputData(this.outputMsg,"INFO: Closing BACnet client..."),this.bacnetClient.close())}initializeBacnetClient(){if(this.side===a.Side.server){this.closeBacnetClient(),this.setOutputData(this.outputMsg,"INFO: Initializing BACnet..."),this.bacnetClient=new s({apduTimeout:this.settings.apduTimeout.value,interface:this.settings.interface.value,port:this.settings.port.value,broadcastAddress:this.settings.broadcastAddress.value}),this.bacnetClient?this.setOutputData(this.outputMsg,"INFO: Started BACnet Stack :)"):this.setOutputData(this.outputMsg,"ERROR: Failed to started BACnet Stack :(");for(let t of this.deviceNodes)d.default.sendPayloadToChild(t,{bacnetClient:this.bacnetClient,networkSettings:this.settings})}}emitResult(t,e){this.setOutputData(t,e)}}e.BACnetNetwork=l,a.Container.registerNodeType(p.BACNET_NETWORK,l)},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(18),a=i(1),r=i(50),o=i(9),u=i(0),d=i(14),p=i(2),l=i(3),h=i(33);var c;!function(t){t[t.STOP=0]="STOP",t[t.START=1]="START"}(c||(c={}));class g extends d.ContainerNode{constructor(t){super(t),this.bacnetClient=null,this.networkSettings={},this.points=[],this.pointNodes=[],this.isFirst=!0,this.isPolling=!1,this.shouldPoll=!0,this.delayBetweenDevice=100,this.delayBetweenPoint=30,this.networkNumber=null,this.title="BACnet Device",this.description="This node acts as a container for bacnet-point nodes. All bacnet-device nodes should be added within the bacnet-network container.  All bacnet-point nodes should be added within a bacnet-device container node.  Configuration of BACnet device connections are set from settings.  Both IP and MSTP BACnet devices can be configured from the bacnet-device settings.",this.addInput("get-point-list",a.Type.BOOLEAN),this.addOutput("out",a.Type.STRING),this.addOutput("out msg",a.Type.STRING),this.addOutput("error",a.Type.STRING),this.addOutput("points-discovered",a.Type.STRING),this.addOutput("points-to-poll",a.Type.STRING),this.properties.pointsList=null,this.settings.deviceEnable={description:"Device enable",value:!1,type:p.SettingType.BOOLEAN},this.settings.ip={description:"ip",value:"192.168.13.13",type:p.SettingType.STRING},this.settings.deviceId={description:"deviceId",value:2508,type:p.SettingType.NUMBER},this.settings.port={description:"port",value:47808,type:p.SettingType.NUMBER},this.settings.deviceTypeMstp={description:"BACnet MS/TP device",value:!1,type:p.SettingType.BOOLEAN},this.settings.macAddress={description:"BACnet Mac address",value:1,type:p.SettingType.NUMBER},this.settings.networkNumber={description:"BACnet network number ",type:p.SettingType.READONLY}}onAdded(){const t=Object.create(null,{onAdded:{get:()=>super.onAdded}});return s(this,void 0,void 0,(function*(){t.onAdded.call(this),yield l.default.sleep(1e3),this.setBacnetClient(),this.setPayloadsToPointNodes(),this.side===u.Side.server&&(r.default.addDevice(this.getParentNode(),this),this.updateNetworkSettings(),yield this.requestPoll())}))}onAfterSettingsChange(t){super.onAfterSettingsChange(t),this.setPayloadsToPointNodes(),this.requestPoll().then()}onRemoved(){super.onRemoved(),this.shouldPoll=!1,r.default.removeDevice(this.getParentNode(),this)}updateNetworkSettings(){this.side===u.Side.server&&(this.networkSettings=r.default.getNetworkSettings(this.getParentNode()),this.networkNumber=this.networkSettings.networkNumber.value,this.settings.networkNumber.value=this.networkNumber,this.broadcastSettingsToClients(),this.persistSettings())}onInputUpdated(){let t=[];for(let e of this.pointNodes){const i=e.settings;let s={id:e.id,cid:e.id,name:e.name,settings:i};t.push(s)}this.setOutputData(4,JSON.stringify(t)),this.setOutputData(3,JSON.stringify(this.points))}requestPoll(){return s(this,void 0,void 0,(function*(){this.currentPollValue()!==c.START||this.isPolling||(this.isPolling=!0,yield this.polling())}))}currentPollValue(){return this.settings.deviceEnable.value&&this.networkSettings.networkEnable.value?c.START:c.STOP}setPayloadsToPointNodes(){this.side===u.Side.server&&(this.setOutputData(this.outputMsg,"INFO: Scan devices"),r.singleton.process(()=>this.scanDeviceFunc()).then(t=>{this.points=t,this.sendPayloadToPointNodesFunc()}),r.singleton.process(()=>s(this,void 0,void 0,(function*(){return yield l.default.sleep(this.delayBetweenDevice)}))).then())}sendPayloadToPointNodesFunc(){for(let t of this.pointNodes)r.default.sendPayloadToChild(t,{points:this.points,networkSettings:this.networkSettings})}setBacnetClient(){this.side===u.Side.server&&(this.bacnetClient=r.default.getBacnetClient(this.getParentNode()))}writePresentValue(t,e,i,s,n,a){this.bacnetClient&&(this.settings.deviceTypeMstp.value?this.bacnetClient.writeProperty({address:t,net:this.networkNumber,adr:[this.settings.macAddress.value]},{type:e,instance:i},85,[{type:a,value:s}],{priority:n},(t,e)=>{console.log(t,e)}):this.bacnetClient.writeProperty(t,{type:e,instance:i},85,[{type:a,value:s}],{priority:n},(t,e)=>{}))}readObjectList(t,e,i){const s=[{objectId:{type:n.enum.ObjectType.DEVICE,instance:e},properties:[{id:n.enum.PropertyIdentifier.OBJECT_LIST}]}];this.bacnetClient&&(this.settings.deviceTypeMstp.value?this.bacnetClient.readPropertyMultiple({address:t,net:this.networkNumber,adr:[this.settings.macAddress.value]},s,s,i):this.bacnetClient.readPropertyMultiple(t,s,i))}readObjectFull(t,e){return this.readObject(t,e,[{id:n.enum.PropertyIdentifier.OBJECT_IDENTIFIER},{id:n.enum.PropertyIdentifier.OBJECT_NAME},{id:n.enum.PropertyIdentifier.OBJECT_TYPE},{id:n.enum.PropertyIdentifier.DESCRIPTION},{id:n.enum.PropertyIdentifier.UNITS},{id:n.enum.PropertyIdentifier.PRESENT_VALUE}])}readObject(t,e,i){return new Promise(s=>{const n=[{objectId:{type:e.type,instance:e.instance},properties:i}];this.bacnetClient&&(this.settings.deviceTypeMstp.value?this.bacnetClient.readPropertyMultiple({address:t,net:this.networkNumber,adr:[this.settings.macAddress.value]},n,(t,e)=>{s({error:t,value:e})}):this.bacnetClient.readPropertyMultiple(t,n,(t,e)=>{s({error:t,value:e})}))})}readProperty(t,e){return new Promise(i=>{this.settings.deviceTypeMstp.value?this.bacnetClient.readProperty({address:t,net:this.networkNumber,adr:[this.settings.macAddress.value]},{type:e.type,instance:e.instance},n.enum.PropertyIdentifier.PRESENT_VALUE,(t,e)=>{i({error:t,value:e})}):this.bacnetClient.readProperty(t,{type:e.type,instance:e.instance},n.enum.PropertyIdentifier.PRESENT_VALUE,(t,e)=>{i({error:t,value:e})})})}readPresentValue(t){return this.readProperty(this.settings.ip.value,t)}findValueById(t,e){const i=t.find((function(t){return t.id===e}));return i&&i.value&&i.value.length>0?i.value[0].value.errorClass?null:i.value[0].value:null}mapToDeviceObject(t){if(!t||!t.values)return null;const e=t.values[0].objectId.instance,i=t.values[0].values;return{objectInfo:e,name:this.findValueById(i,n.enum.PropertyIdentifier.OBJECT_NAME),description:this.findValueById(i,n.enum.PropertyIdentifier.DESCRIPTION),type:this.findValueById(i,n.enum.PropertyIdentifier.OBJECT_TYPE),units:this.findValueById(i,n.enum.PropertyIdentifier.UNITS),presentValue:this.findValueById(i,n.enum.PropertyIdentifier.PRESENT_VALUE)}}scanDeviceFunc(){return s(this,void 0,void 0,(function*(){const t={deviceId:this.settings.deviceId.value,address:this.settings.ip.value};return this.setOutputData(1,`INFO: Scan device ID: ${t}`),this.setOutputData(2,""),new Promise((e,i)=>{this.readObjectList(t.address,t.deviceId,(n,a)=>s(this,void 0,void 0,(function*(){if(n)this.setOutputData(1,""),this.setOutputData(2,`ERROR: while fetching objects: ${JSON.stringify(n)}`),i(n);else{const s=a.values[0].values[0].value;this.setOutputData(1,`INFO: Scan device ID: ${t}`),this.setOutputData(2,"");const n=[];for(const e of s){try{const i=yield this.readObjectFull(t.address,{type:e.value.type,instance:e.value.instance});n.push(i)}catch(t){this.setOutputData(1,""),this.setOutputData(2,`ERROR: while fetching objects: ${JSON.stringify(t)}`),i(t)}yield l.default.sleep(this.delayBetweenDevice)}const r=n.filter(t=>!t.error).map(t=>this.mapToDeviceObject(t.value));e(r)}})))})}))}subscribe({action:t,payload:e}){switch(t){case h.ADD_POINT:this.pointNodes.push(e);break;case h.REMOVE_POINT:this.pointNodes=this.pointNodes.filter(t=>t.id!==e.id);break;case h.GET_NETWORK_SETTINGS:return r.default.getNetworkSettings(this.getParentNode());case h.GET_POINTS:return this.points;case h.GET_PRESENT_VALUE:return this.readPresentValue(e);case h.SEND_PAYLOAD_TO_CHILD:this.bacnetClient=e.bacnetClient,this.networkSettings=e.networkSettings,this.updateNetworkSettings(),this.isFirst||this.setPayloadsToPointNodes(),this.isFirst=!1,this.requestPoll().then();break;case h.WRITE_PRESENT_VALUE:this.writePresentValue(this.settings.ip.value,e[0],e[1],e[2],e[3],e[4]);break;default:this.debugWarn("Request action doesn't match")}}emitResult(t,e){this.setOutputData(t,e)}persistSettings(){this.container.db&&this.container.db.updateNode(this.id,this.container.id,{$set:{settings:this.settings,properties:this.properties}})}polling(){return s(this,void 0,void 0,(function*(){this.currentPollValue()===c.START&&this.shouldPoll?(yield r.singleton.process(()=>this.pollingFunc()),yield r.singleton.process(()=>s(this,void 0,void 0,(function*(){return yield l.default.sleep(this.delayBetweenDevice)}))),yield l.default.sleep(this.networkSettings.devicePolling.value),yield this.polling()):this.isPolling=!1}))}pollingFunc(){return s(this,void 0,void 0,(function*(){for(let t of this.pointNodes){let e=t.settings.pointsList.value;const i=t.settings.manualPoint.value,s=t.settings.objectType.value,n=t.settings.objectInstance.value;if(i&&(e={type:s,instance:n}),e){const i=yield this.readPresentValue(e);r.default.sendPointValue(t,i),yield l.default.sleep(this.delayBetweenPoint)}}}))}}u.Container.registerNodeType(o.BACNET_DEVICE,g,o.BACNET_NETWORK)},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(2),a=i(0),r=i(1),o=i(50),u=i(9),d=i(33),p=i(3),l=i(31),h=i(4);class c extends l.default{constructor(){super(),this.dynamicInputsExist=!1,this.dynamicSettingsExist=!1,this.dynamicInputStartPosition=2,this.dynamicMinInputs=0,this.nullableInputs=!0,this.dynamicOutputsExist=!1,this.dynamicInputsStartName="in",this.dynamicOutputsStartName="out",this.dynamicInputsType=r.Type.NUMBER,this.points=[],this.obj=[],this.title="BACnet Point",this.description="All bacnet-point nodes should be added within the bacnet-device container node. Configuration of BACnet points are set from settings.  If the bacnet-network, and bacnet-device are configured correctly, the BACnet points will be available to select from the ‘Select a point’ setting; otherwise the point can be set manually. For information on History settings, see History/History node. Configuration is the same for bacnet-point histories.",this.addInput("input",r.Type.ANY),this.addOutput("output",r.Type.STRING),this.addOutput("output json",r.Type.STRING),this.addOutput("error",r.Type.STRING),this.settings.pointEnable={description:"Point enable",value:!1,type:n.SettingType.BOOLEAN},this.settings.pointWriteEnable={description:"Point write enable",value:!1,type:n.SettingType.BOOLEAN},this.settings.manualPoint={description:"Add point manually",value:!1,type:n.SettingType.BOOLEAN},this.settings.pointsList={description:"Select a point",value:null,type:n.SettingType.DROPDOWN,config:{items:[]}},this.settings.objectType={description:"Output type",type:n.SettingType.DROPDOWN,config:{items:[{value:0,text:"analog-input"},{value:1,text:"analog-output"},{value:2,text:"analog-value"},{value:3,text:"binary-input"},{value:4,text:"binary-output"},{value:5,text:"binary-value"},{value:13,text:"multi-state-input"},{value:14,text:"multi-state-output"},{value:19,text:"multi-state-value"}]},value:0},this.settings.objectTag={description:"Data type value to be written",type:n.SettingType.DROPDOWN,config:{items:[{value:0,text:"NULL(0)"},{value:1,text:"BOOLEAN(1)"},{value:2,text:"UNSIGNED_INTEGER(2)"},{value:3,text:"SIGNED_INTEGER(3)"},{value:4,text:"REAL(4)"},{value:5,text:"DOUBLE(5)"},{value:6,text:"OCTET_STRING(6)"},{value:7,text:"CHARACTER_STRING(7)"},{value:8,text:"BIT_STRING(8)"},{value:9,text:"ENUMERATED(9)"},{value:10,text:"DATE(10)"},{value:11,text:"TIME(11)"},{value:12,text:"OBJECTIDENTIFIER(12)"}]},value:1},this.settings.objectInstance={description:"Point ID",value:1,type:n.SettingType.NUMBER},this.settings.priority={description:"Priority Number",value:16,type:n.SettingType.NUMBER},this.setSettingsConfig({conditions:{pointsList:t=>!t.manualPoint.value,objectType:t=>t.manualPoint.value}}),this.useInterval=!1,this.properties.lastHistoryValue=null,this.addHistorySettingsConfig(0,!1)}onAdded(){const t=Object.create(null,{onAdded:{get:()=>super.onAdded}});return s(this,void 0,void 0,(function*(){t.onAdded.call(this),this.side===a.Side.server&&(yield p.default.sleep(2e3),this.points=o.default.getPoints(this.getParentNode()),this.setPointsListItems(),this.getPresentValue(),o.default.addPoint(this.getParentNode(),this))}))}onInputUpdated(){const t=Object.create(null,{onInputUpdated:{get:()=>super.onInputUpdated}});return s(this,void 0,void 0,(function*(){if(yield t.onInputUpdated.call(this),this.side!==a.Side.server)return;let e,i;const s=this.getInputData(0),n=this.settings.priority.value,r=this.settings.manualPoint.value,u=this.settings.pointsList.value,d=this.settings.objectTag.value;let p=this.settings.pointWriteEnable.value;r&&(e=this.settings.objectType.value,i=this.settings.objectInstance.value),u&&(e=u.type,i=u.instance),h.isNull(s)||!1!==p&&o.default.writePresentValue(this.getParentNode(),[e,i,s,n,d])}))}onAfterSettingsChange(){const t=Object.create(null,{onAfterSettingsChange:{get:()=>super.onAfterSettingsChange}});return s(this,void 0,void 0,(function*(){yield t.onAfterSettingsChange.call(this),this.getPresentValue();const e=o.default.getNetworkSettings(this.getParentNode());e&&(isNaN(e.networkNumber.value)||(this.networkNumber=e.networkNumber.value))}))}onRemoved(){super.onRemoved(),o.default.removePoint(this.getParentNode(),this)}getPresentValue(){if(this.side!==a.Side.server)return;let t=this.settings.pointsList.value;const e=this.settings.manualPoint.value,i=this.settings.objectType.value,s=this.settings.objectInstance.value;e&&(t={type:i,instance:s}),t&&o.default.getPresentValue(this.getParentNode(),t).then(t=>{h.isNull(t)||this.setPointValue(t)})}setPointValue(t){if(h.isNull(t.value.values[0].value))return void this.setOutputData(2,!0,!0);let e,i,s=t.value.values[0].value,n=this.settings.pointEnable.value,a=this.settings.pointWriteEnable.value;const r=this.settings.priority.value,o=this.settings.manualPoint.value,u=this.settings.pointsList.value,d=this.settings.pointsList.config.items;let p;if(o&&(e=this.settings.objectType.value,i=this.settings.objectInstance.value),u&&(e=u.type,i=u.instance,!h.isNull(d))){let t=d;for(var l in t)t[l].value.type===u.type&&t[l].value.instance===u.instance&&(p=t[l])}const c={name:this.name,pointValue:s,enable:n,pointWriteEnable:a,objectType:e,objectInstance:i,priority:r,bacnetPointName:p};t.value?(this.setOutputData(0,s,!0),this.setOutputData(1,c,!0),this.setOutputData(2,null,!0)):(this.setOutputData(0,null,!0),this.setOutputData(1,null,!0),t.error&&this.setOutputData(2,"Error on reading value"))}setPointsListItems(){this.settings.pointsList.config.items=this.points.map(t=>({value:{type:t.type,instance:t.objectInfo},text:t.name})),this.persistConfiguration(),this.broadcastSettingsToClients()}subscribe({action:t,payload:e}){switch(t){case d.SEND_PAYLOAD_TO_CHILD:this.points=e.points,this.setPointsListItems();break;case d.SEND_POINT_VALUE:this.setPointValue(e);break;default:this.debugWarn("Request action doesn't match")}}readObjectName(t){switch(t){case 0:return"AI";case 1:return"AO";case 2:return"AV";case 3:return"BI";case 4:return"BO";case 5:return"BV";case 8:return"Device";case 13:return"MSI";case 14:return"MSO";case 19:return"MSV";default:this.debugWarn("Unknown type of object")}}}a.Container.registerNodeType(u.BACNET_POINT,c,u.BACNET_DEVICE)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(52);class n extends s.Enumify{constructor(t){super(),this.label=t}static items(){return n.enumKeys.map(t=>({value:t,text:n.enumValueOf(t).label}))}}e.InputMethod=n,n.VALUE_PRIORITY=new n("Value and Priority"),n.PRIORITY_ARRAY_LOT=new n("Priority Array"),n.PRIORITY_ARRAY_JSON=new n("JSON"),n._=n.closeEnum()},function(t,e,i){"use strict";i.r(e);const s=i(294),n=i(18),a=i(7).create("bacnet",{color:4}),r=n&&n.enum,o=r&&r.PropertyIdentifier,u=i(295),d=i(79),p=i(53);e.default=class extends u{constructor(t,e={},i){super(null,t.deviceId,r.ObjectType.DEVICE,t.name),this.dev=this,this.deviceInfo=t,this.hostInfo=e,this.client=null,this.covListener=i}getProperty(t){switch(t){case o.APDU_TIMEOUT:{const e=new d(this,t,void 0,!0);return e._value=this.client._settings.apduTimeout,e}default:return super.getProperty(t)}}onUnhandledEvent(t){if(t.header.expectingReply){t.header.sender.forwardedFrom&&(t.header.sender.forwardedFrom=this.ip);const e=t.header.confirmedService?r.ConfirmedServiceChoice:r.UnconfirmedServiceChoice;a.debug("Replying with error for unhandled service:"+r.getEnumName(e,t.service)),this.client.errorResponse(t.header.sender,t.service,t.invokeId,r.ErrorClass.SERVICES,r.ErrorCode.REJECT_UNRECOGNIZED_SERVICE)}}onRegisterForeignDevice(t){a.debug("[recv] Register foreign device:",t.header.sender.address,"for TTL",t.payload.ttl),this.bdt[t.header.sender.address]=t.payload.ttl,this.client.resultResponse(t.header.sender,r.BvlcResultFormat.SUCCESSFUL_COMPLETION)}onWhoIs(t){a.debug("onWhoIs"),(void 0===t.payload.lowLimit||void 0===t.payload.highLimit||t.payload.lowLimit<=this.instance&&t.payload.highLimit>=this.instance)&&(t.header.sender.forwardedFrom&&(t.header.sender.forwardedFrom=null),a.debug(t.header.sender,this.instance,this.getProperty(o.SEGMENTATION_SUPPORTED).value,this.getProperty(o.VENDOR_IDENTIFIER).value),a.debug(`[send] Replying to whoIs(${t.payload.lowLimit}..`+`${t.payload.highLimit}): iAm ${this.instance} -> `+`${t.header.sender.address}/${t.header.sender.forwardedFrom}`),this.client.iAmResponse(t.header.sender,this.instance,this.getProperty(o.SEGMENTATION_SUPPORTED).value,this.getProperty(o.VENDOR_IDENTIFIER).value))}onWriteProperty(t){a.debug(`onWriteProperty: ${JSON.stringify(t)}`);const e=this.getObject(t.payload.objectId.instance,t.payload.objectId.type);if(!e)return this.client.errorResponse(t.header.sender,t.service,t.invokeId,r.ErrorClass.OBJECT,r.ErrorCode.UNKNOWN_OBJECT);let i=e.getProperty(t.payload.value.property.id),s=e.getProperty(o.PRIORITY_ARRAY),n=this.encodePropValue(s);if(!i)return this.client.errorResponse(t.header.sender,t.service,t.invokeId,r.ErrorClass.PROPERTY,r.ErrorCode.UNKNOWN_PROPERTY);if(4294967295===t.payload.value.property.index){let i,s,a,u,d,p=function(t,e,i){let s;for(s in t){parseInt(s)+1===e&&(t[s].value=i)}return t}(n,t.payload.value.priority,t.payload.value.value[0].value),l=[];for(i in p)l.push(p[i].value);for(d in l)if(s=l[d],a=parseInt(d)+1,u={priorityNum:parseInt(d)+1,val:l[d]},null!=l[d])break;e.addProperty(o.PRIORITY_ARRAY,r.ApplicationTags.REAL).value=l,e.addProperty(o.PRESENT_VALUE,r.ApplicationTags.REAL).value=s,this.client.simpleAckResponse(t.header.sender,t.service,t.invokeId),this.covListener({objectType:t.payload.objectId.type,objectId:t.payload.objectId.instance,presentValue:s,priority:a,priorityArray:l})}else{if(!t.payload.value.property.index)return this.client.errorResponse(t.header.sender,t.service,t.invokeId,r.ErrorClass.PROPERTY,r.ErrorCode.INVALID_ARRAY_INDEX);this.client.simpleAckResponse(t.header.sender,t.service,t.invokeId)}}onReadProperty(t){a.debug("onReadProperty",t);const e=p.getEnumName(o,t.payload.property.id),i=p.getEnumName(r.ObjectType,t.payload.objectId.type)+":"+t.payload.objectId.instance;a.debug(`[recv/${t.header.sender.address}] readProperty: ${i}/${e}`);const s=this.getObject(t.payload.objectId.instance,t.payload.objectId.type);if(!s)return a.debug(`[send/${t.header.sender.address}] Requested non-existent `+`object ${i}, responding with error`),this.client.errorResponse(t.header.sender,r.ConfirmedServiceChoice.READ_PROPERTY,t.invokeId,r.ErrorClass.OBJECT,r.ErrorCode.UNKNOWN_OBJECT);let n=s.getProperty(t.payload.property.id);if(!n)return a.debug(`[send/${t.header.sender.address}] Requested non-existent `+`property ${e} for object ${i}, responding `+"with error"),this.client.errorResponse(t.header.sender,r.ConfirmedServiceChoice.READ_PROPERTY,t.invokeId,r.ErrorClass.PROPERTY,r.ErrorCode.UNKNOWN_PROPERTY);if(4294967295===t.payload.property.index){const s=this.encodePropValue(n);this.client.readPropertyResponse(t.header.sender,t.invokeId,t.payload.objectId,t.payload.property,s),a.debug(`[send/${t.header.sender.address}] readPropertyResponse@all: ${i}/${e} => %O`,s)}else{const s=n.value[t.payload.property.index];if(!s)return this.client.errorResponse(t.header.sender,r.ConfirmedServiceChoice.READ_PROPERTY,t.invokeId,r.ErrorClass.PROPERTY,r.ErrorCode.INVALID_ARRAY_INDEX);this.client.readPropertyResponse(t.header.sender,t.invokeId,t.payload.objectId,t.payload.property,this.encodePropValue(s)),a.debug(`[send/${t.header.sender.address}] readPropertyResponse@${t.payload.property.index}: ${i}/${e}`)}}onReadPropertyMultiple(t){a.debug(`onReadPropertyMultiple: ${t}`),a.debug(`[recv/${t.header.sender.address}] readPropertyMultiple`);const e=[];t.payload.properties.forEach(i=>{const n=p.getEnumName(r.ObjectType,i.objectId.type)+":"+i.objectId.instance,u=i.properties.map(t=>p.getEnumName(o,t.id));a.debug(`[recv/${t.header.sender.address}] readPropertyMultiple: object ${n}/%o`,u),a.debug(`[BE.ObjectTypesSupported.DEVICE ${i.objectId.instance}] readPropertyMultiple: instance ${r.ASN1_MAX_PROPERTY_ID}`),i.objectId.type===r.ObjectTypesSupported.DEVICE&&i.objectId.instance===r.ASN1_MAX_PROPERTY_ID&&(i.objectId.instance=this.instance);const d=this.getObject(i.objectId.instance,i.objectId.type),l=[];i.properties.forEach(t=>{let e;if(d){if(t.id===o.ALL)return void d.getAllPropertyIds().forEach(t=>{if(t===o.PROPERTY_LIST)return;const e=d.getProperty(t);l.push({property:{id:t,index:r.ASN1_ARRAY_ALL},value:this.encodePropValue(e)})});const i=d.getProperty(t.id);if(i)if(t.index===r.ASN1_ARRAY_ALL)e=this.encodePropValue(i);else{const s=Array.isArray(i.value)&&i.value[t.index];e=s?this.encodePropValue(s):[{type:0,value:{type:"BacnetError",errorClass:r.ErrorClass.PROPERTY,errorCode:r.ErrorCode.INVALID_ARRAY_INDEX}}]}else e=[{type:0,value:{type:"BacnetError",errorClass:r.ErrorClass.PROPERTY,errorCode:r.ErrorCode.UNKNOWN_PROPERTY}}]}else e=[{type:0,value:{type:"BacnetError",errorClass:r.ErrorClass.OBJECT,errorCode:r.ErrorCode.UNKNOWN_OBJECT}}];s(Array.isArray(e)),l.push({property:{id:t.id,index:t.index},value:e})}),e.push({objectId:{type:i.objectId.type,instance:i.objectId.instance},values:l})}),a.debug(`[send/${t.header.sender.address}] readPropertyMultiple response: %d objects, %d total properties`,e.length,e.map(t=>t.values.length).reduce((t,e)=>t+e)),this.client.readPropertyMultipleResponse(t.header.sender,t.invokeId,e)}onSubscribeCov(t){a.debug("onSubscribeCov");const e=p.getEnumName(r.ObjectType,t.payload.monitoredObjectId.type)+":"+t.payload.monitoredObjectId.instance;a.debug(`[recv/${t.header.sender.address}] subscribeCov: object ${e}`);const i=this.getObject(t.payload.monitoredObjectId.instance,t.payload.monitoredObjectId.type);if(!i)return a.debug(`${t.header.sender.address} tried to subscribe to non-existent object ${e}`),a.debug(`[send/${t.header.sender.address}] Returning error OBJECT:UNKNOWN_OBJECT`),void this.client.errorResponse(t.header.sender,t.service,t.invokeId,r.ErrorClass.OBJECT,r.ErrorCode.UNKNOWN_OBJECT);if(i.subscriptions=i.subscriptions.filter(e=>e.subscriberAddress!==t.header.sender&&e.subscriberProcessId!==t.payload.subscriberProcessId&&e.lifetime>0),t.payload.lifetime){const s={subscriberAddress:t.header.sender,monitoredObjectId:t.payload.monitoredObjectId,subscriberProcessId:t.payload.subscriberProcessId,issueConfirmedNotifications:!0,invokeId:t.invokeId,lifetime:t.payload.lifetime};i.subscriptions.push(s),a.debug(`Adding subscription to object ${e} for ${t.header.sender.address}#${t.payload.subscriberProcessId}`);let n=[];i.getAllPropertyIds().forEach(t=>{const e=i.getProperty(t);n.push({property:{id:t},value:this.encodePropValue(e)})}),this.sendPropertyCov(s,n)}else a.debug(`Removing subscription to object ${e} by ${t.header.sender.address}#${t.payload.subscriberProcessId}`);a.debug(`[send/${t.header.sender.address}] simpleAckResponse for subscribeCov`),this.client.simpleAckResponse(t.header.sender,t.service,t.invokeId)}onSubscribeProperty(t){a.debug("onSubscribeProperty");const e=p.getEnumName(r.ObjectType,t.payload.monitoredObjectId.type)+":"+t.payload.monitoredObjectId.instance;if(a.debug(`[recv/${t.header.sender.address}] subscribeCovProperty: object ${e}`),!t.payload.issueConfirmedNotifications)return a.debug(`Returning error to ${t.header.sender.address} - unable to subscribe with unconfirmed notifications`),a.debug(`[send/${t.header.sender.address}] Returning error OBJECT:OPTIONAL_FUNCTIONALITY_NOT_SUPPORTED`),void this.client.errorResponse(t.header.sender,t.service,t.invokeId,r.ErrorClass.OBJECT,r.ErrorCode.OPTIONAL_FUNCTIONALITY_NOT_SUPPORTED);const i=this.getObject(t.payload.monitoredObjectId.instance,t.payload.monitoredObjectId.type);if(!i)return a.debug(`${t.header.sender.address} tried to subscribe to non-existent object ${e}`),a.debug(`[send/${t.header.sender.address}] Returning error OBJECT:UNKNOWN_OBJECT`),void this.client.errorResponse(t.header.sender,t.service,t.invokeId,r.ErrorClass.OBJECT,r.ErrorCode.UNKNOWN_OBJECT);const s=i.getProperty(t.payload.monitoredProperty.id),n=p.getPropName(t.payload.monitoredProperty.id);if(!s)return a.debug(`${t.header.sender.address} tried to subscribe to non-existent property ${e}/${n}`),a.debug(`[send/${t.header.sender.address}] Returning error PROPERTY:UNKNOWN_PROPERTY`),void this.client.errorResponse(t.header.sender,t.service,t.invokeId,r.ErrorClass.PROPERTY,r.ErrorCode.UNKNOWN_PROPERTY);if(s.subscriptions=s.subscriptions.filter(e=>e.subscriberAddress!==t.header.sender&&e.subscriberProcessId!==t.payload.subscriberProcessId&&e.lifetime>0),t.payload.lifetime){const i={subscriberAddress:t.header.sender,monitoredObjectId:t.payload.monitoredObjectId,subscriberProcessId:t.payload.subscriberProcessId,issueConfirmedNotifications:t.payload.issueConfirmedNotifications,monitoredIndex:t.payload.monitoredProperty.index,invokeId:t.invokeId,lifetime:t.payload.lifetime};s.subscriptions.push(i),a.debug(`Adding subscription to property ${e}/${n} for ${t.header.sender.address}#${t.payload.subscriberProcessId}`);let r=[];r.push({property:{id:s.propertyId},value:this.encodePropValue(s)}),this.sendPropertyCov(i,r)}else a.debug(`Removing subscription to ${e}/${n} by ${t.header.sender.address}#${t.payload.subscriberProcessId}`);a.debug(`[send/${t.header.sender.address}] simpleAckResponse for subscribeCovProperty`),this.client.simpleAckResponse(t.header.sender,t.service,t.invokeId)}onObjectPropertyChanged(t,e){let i=[];i.push({property:{id:e.propertyId},value:this.encodePropValue(e)}),t.subscriptions&&t.subscriptions.forEach(t=>{p.getEnumName(r.ObjectType,t.monitoredObjectId.type),t.monitoredObjectId.instance;this.sendPropertyCov(t,i)}),e.subscriptions&&e.subscriptions.forEach(t=>{const s=p.getEnumName(r.ObjectType,t.monitoredObjectId.type)+":"+t.monitoredObjectId.instance,n=p.getPropName(e.propertyId);a.debug(`[send/${t.subscriberAddress.address}] confirmedCOVNotification: property ${s}/${n}`),this.sendPropertyCov(t,i)})}sendPropertyCov(t,e){a.debug("sendPropertyCov");const i=p.getEnumName(r.ObjectType,t.monitoredObjectId.type)+":"+t.monitoredObjectId.instance;a.debug(`[send/${t.subscriberAddress.address}] confirmedCOVNotification: object ${i}, ${e.length} items`),t.issueConfirmedNotifications&&this.client.confirmedCOVNotification(t.subscriberAddress,t.monitoredObjectId,t.subscriberProcessId,this.instance,t.lifetime,e,{invokeId:t.invokeId},e=>{e?a.debug(`[recv/${t.subscriberAddress.address}] confirmedCOVNotification was rejected:`,e):a.debug(`[recv/${t.subscriberAddress.address}] confirmedCOVNotification was ACKed`)})}encodePropValue(t){let e=t.value;switch(Array.isArray(e)||(e=[e]),t.typeId){case r.ApplicationTags.BIT_STRING:return[{value:n.createBitstring(e),type:t.typeId}]}return e.map(e=>({value:(()=>{switch(t.typeId){case r.ApplicationTags.NULL:case r.ApplicationTags.BOOLEAN:case r.ApplicationTags.UNSIGNED_INTEGER:case r.ApplicationTags.SIGNED_INTEGER:case r.ApplicationTags.REAL:case r.ApplicationTags.DOUBLE:case r.ApplicationTags.CHARACTER_STRING:case r.ApplicationTags.ENUMERATED:return e;case r.ApplicationTags.OBJECTIDENTIFIER:return{type:e.typeId,instance:e.instance};default:const i=p.getEnumName(r.ApplicationTags,t.typeId);throw a.debug(`No encoding for data type ${i}`),new Error(`Encoding for data type ${i} has not been implemented in bacnet-device yet.`)}})(),type:t.typeId}))}start(){s(this.deviceInfo.deviceId,"Cannot create a new device without a deviceId"),s(this.deviceInfo.name,"Cannot create a new device without a name"),this.addProperty(o.SYSTEM_STATUS).value=r.DeviceStatus.OPERATIONAL,this.addProperty(o.VENDOR_NAME).value="Nube iO Operations",this.addProperty(o.VENDOR_IDENTIFIER).value=1173,this.addProperty(o.MODEL_NAME).value="nube-io-bacnet",this.addProperty(o.FIRMWARE_REVISION).value=1,this.addProperty(o.APPLICATION_SOFTWARE_VERSION).value=1,this.addProperty(o.PROTOCOL_VERSION).value=1,this.addProperty(o.PROTOCOL_REVISION).value=1,this.addProperty(o.PROTOCOL_SERVICES_SUPPORTED).value=[r.ServicesSupported.CONFIRMED_COV_NOTIFICATION,r.ServicesSupported.SUBSCRIBE_COV,r.ServicesSupported.READ_PROPERTY,r.ServicesSupported.READ_PROPERTY_MULTIPLE,r.ServicesSupported.WRITE_PROPERTY,r.ServicesSupported.I_AM,r.ServicesSupported.WHO_IS,r.ServicesSupported.SUBSCRIBE_COV_PROPERTY],this.addProperty(o.MAX_APDU_LENGTH_ACCEPTED).value=1482,this.addProperty(o.SEGMENTATION_SUPPORTED).value=r.Segmentation.SEGMENTED_BOTH,this.addProperty(o.NUMBER_OF_APDU_RETRIES).value=3,this.addProperty(o.DEVICE_ADDRESS_BINDING).value=[],this.addProperty(o.DATABASE_REVISION).value=1,this.dynamicProperties.push(o.APDU_TIMEOUT),this.objects[r.ObjectType.DEVICE]||(this.objects[r.ObjectType.DEVICE]={}),this.objects[r.ObjectType.DEVICE][this.instance]=this,this.ip=this.hostInfo.address,this.client=new n({adpuTimeout:this.hostInfo.adpuTimeout,port:this.hostInfo.port,interface:this.hostInfo.address,broadcastAddress:this.hostInfo.broadcast}),this.bdt={},this.subscriptions=[],this.client.on("unhandledEvent",this.onUnhandledEvent.bind(this)),this.client.on("registerForeignDevice",this.onRegisterForeignDevice.bind(this)),this.client.on("whoIs",this.onWhoIs.bind(this)),this.client.on("writeProperty",this.onWriteProperty.bind(this)),this.client.on("readProperty",this.onReadProperty.bind(this)),this.client.on("readPropertyMultiple",this.onReadPropertyMultiple.bind(this)),this.client.on("subscribeCov",this.onSubscribeCov.bind(this)),this.client.on("subscribeProperty",this.onSubscribeProperty.bind(this)),this.client.reinitializeDevice(this.ip,r.ReinitializedState.COLDSTART,(t,e)=>{a.debug("err: ",t),a.debug("info: ",e)})}stop(){null!==this.client&&this.client.close()}addPoint(t){if(!t)return null;a.info(`Adding BACnet point ${t.objectType.label}:${t.objectInstance}...`),a.info(`Adding BACnet point ${t.objectType.label}:${t.objectInstance}...`),s(Number.isInteger(t.objectType.value),"Object type must be a BE.ObjectType value."),s(Number.isInteger(t.objectInstance),"Instance ID must be an integer."),this.objects[t.objectType.value]||(this.objects[t.objectType.value]={});let e=new u(this,t.objectInstance,t.objectType.value,t.objectName);return this.objects[t.objectType.value][t.objectInstance]=e}updatePoint(t){if(!t)return null;let e=this.getObject(t.objectInstance,t.objectType.value);return a.info(`Updating BACNet point properties ${t.objectType.label}:${t.objectInstance}...`),e?(e.addProperty(n.enum.PropertyIdentifier.OBJECT_NAME).value=t.objectName,this.objects[t.objectType.value][t.objectInstance]=e):this.addPoint(t)}updateValue(t){if(!t)return null;a.info(`Pushing BACNet point Value ${t.objectType.label}:${t.objectInstance}...`);let e=this.getObject(t.objectInstance,t.objectType.value);if(!e)return null;let i=t.pointValue;return e.addProperty(o.PRESENT_VALUE,r.ApplicationTags.REAL).value=i.presentValue,e.addProperty(o.PRIORITY,r.ApplicationTags.SIGNED_INTEGER).value=i.priority,e.addProperty(o.PRIORITY_ARRAY,r.ApplicationTags.REAL).value=Object.values(i.priorityArray),i}delObject(t,e){s(Number.isInteger(t),"Instance ID must be an integer."),s(Number.isInteger(e),"Object type must be a BE.ObjectType value."),a.debug(`BACNet delete object ${e}:${t}`),this.objects[e]&&delete this.objects[e][t]}}},function(t,e){t.exports=require("assert")},function(t,e,i){const s=i(18),n=i(7).create("bacnet",{color:6}),a=i(79),r=i(298),o=i(53);t.exports=class{constructor(t,e,i,n){this.dev=t,this.instance=e,this.objects={},this.properties={},this.subscriptions=[],this.dynamicProperties=[s.enum.PropertyIdentifier.OBJECT_IDENTIFIER,s.enum.PropertyIdentifier.PROPERTY_LIST,s.enum.PropertyIdentifier.OBJECT_LIST,s.enum.PropertyIdentifier.PROTOCOL_OBJECT_TYPES_SUPPORTED],this.addProperty(s.enum.PropertyIdentifier.OBJECT_TYPE).value=i,this.addProperty(s.enum.PropertyIdentifier.OBJECT_NAME).value=n,this.addProperty(s.enum.PropertyIdentifier.STATUS_FLAGS).value=[],this.addProperty(s.enum.PropertyIdentifier.EVENT_STATE).value=s.enum.EventState.NORMAL,this.addProperty(s.enum.PropertyIdentifier.OUT_OF_SERVICE).value=!1,this.addProperty(s.enum.PropertyIdentifier.UNITS).value=s.enum.EngineeringUnits.NO_UNITS}addProperty(t,e){if(t=parseInt(t),this.dynamicProperties.includes(t)){const e=o.getPropName(t);throw new Error(`Property ${e} is generated on-the-fly and cannot be set.`)}return this.properties[t]||(this.properties[t]=new a(this,t,e))}addPropertyBulk(t){Object.keys(t).forEach(e=>{this.addProperty(e).value=t[e]})}delProperty(t,e){void 0!==e?delete this.properties[t][e]:delete this.properties[t]}getProperty(t){switch(t=parseInt(t)){case s.enum.PropertyIdentifier.OBJECT_IDENTIFIER:{const e=new a(this,t,void 0,!0);return e._value={typeId:this.getProperty(s.enum.PropertyIdentifier.OBJECT_TYPE).value,instance:this.instance},e}case s.enum.PropertyIdentifier.PROPERTY_LIST:{const e=[s.enum.PropertyIdentifier.OBJECT_NAME,s.enum.PropertyIdentifier.OBJECT_TYPE,s.enum.PropertyIdentifier.OBJECT_IDENTIFIER,s.enum.PropertyIdentifier.PROPERTY_LIST],i=new a(this,t,void 0,!0),u=this.getAllPropertyIds();i._value=u.filter(t=>!e.includes(t));const d=this.getProperty(s.enum.PropertyIdentifier.OBJECT_TYPE).value;if(r[d]){const t=r[d].filter(t=>!i._value.includes(t));if(t.length>0){const e=this.getProperty(s.enum.PropertyIdentifier.OBJECT_NAME).value,i=t.map(t=>o.getPropName(t));n.error(`Object #${this.instance}("${e}") is missing these mandatory properties: %o`,i)}}else{const t=o.getEnumName(s.enum.ObjectType,d);n.error(`TODO: No mandatory properties have been defined for the object type ${t}`)}return i}case s.enum.PropertyIdentifier.OBJECT_LIST:{let e=[];Object.keys(this.objects).forEach(t=>{const i=this.objects[t];Object.keys(i).forEach(t=>{const n=i[t];e.push({typeId:n.getProperty(s.enum.PropertyIdentifier.OBJECT_TYPE).value,instance:n.instance})})});const i=new a(this,t,void 0,!0);return i._value=e,i}case s.enum.PropertyIdentifier.PROTOCOL_OBJECT_TYPES_SUPPORTED:{let e={};Object.keys(this.objects).forEach(t=>{const i=this.objects[t];Object.keys(i).forEach(t=>{const n=i[t].getProperty(s.enum.PropertyIdentifier.OBJECT_TYPE).value;e[n]=!0})});const i=new a(this,t,void 0,!0);return i._value=Object.keys(e).map(t=>parseInt(t)),i}}return this.properties[t]}getAllPropertyIds(){return[...Object.keys(this.properties),...this.dynamicProperties].map(t=>parseInt(t))}onPropertyChanged(t){this.dev&&this.dev.onObjectPropertyChanged(this,t)}dumpProperties(){let t=Object.keys(this.properties).map(t=>parseInt(t));t.push(s.enum.PropertyIdentifier.PROTOCOL_OBJECT_TYPES_SUPPORTED),t.push(s.enum.PropertyIdentifier.OBJECT_IDENTIFIER),t.push(s.enum.PropertyIdentifier.PROPERTY_LIST),t.push(s.enum.PropertyIdentifier.OBJECT_LIST);let e={};return t.forEach(t=>{const i=this.getProperty(t),s=o.getPropName(t);e[s]=i.valueAsString()}),e}getObject(t,e){const i=this.objects[e];if(i)return i[t]}}},function(t,e){t.exports=require("util")},function(t,e,i){const s=i(18),n=s&&s.enum.PropertyIdentifier,a=s&&s.enum.ApplicationTags,r=s&&{[n.APPLICATION_SOFTWARE_VERSION]:a.CHARACTER_STRING,[n.APDU_TIMEOUT]:a.UNSIGNED_INTEGER,[n.DATABASE_REVISION]:a.UNSIGNED_INTEGER,[n.DESCRIPTION]:a.CHARACTER_STRING,[n.DEVICE_ADDRESS_BINDING]:a.CHARACTER_STRING,[n.DEVICE_TYPE]:a.CHARACTER_STRING,[n.EVENT_STATE]:a.ENUMERATED,[n.FIRMWARE_REVISION]:a.CHARACTER_STRING,[n.DEVICE_ADDRESS_BINDING]:a.OCTET_STRING,[n.MAX_APDU_LENGTH_ACCEPTED]:a.UNSIGNED_INTEGER,[n.MODEL_NAME]:a.CHARACTER_STRING,[n.NUMBER_OF_APDU_RETRIES]:a.UNSIGNED_INTEGER,[n.OBJECT_IDENTIFIER]:a.OBJECTIDENTIFIER,[n.OBJECT_LIST]:a.OBJECTIDENTIFIER,[n.OBJECT_NAME]:a.CHARACTER_STRING,[n.OBJECT_TYPE]:a.ENUMERATED,[n.OUT_OF_SERVICE]:a.BOOLEAN,[n.PROPERTY_LIST]:a.ENUMERATED,[n.PROTOCOL_OBJECT_TYPES_SUPPORTED]:a.BIT_STRING,[n.PROTOCOL_REVISION]:a.UNSIGNED_INTEGER,[n.PROTOCOL_SERVICES_SUPPORTED]:a.BIT_STRING,[n.PROTOCOL_VERSION]:a.UNSIGNED_INTEGER,[n.RELIABILITY]:a.ENUMERATED,[n.SEGMENTATION_SUPPORTED]:a.ENUMERATED,[n.STATUS_FLAGS]:a.BIT_STRING,[n.SYSTEM_STATUS]:a.ENUMERATED,[n.UNITS]:a.ENUMERATED,[n.UPDATE_INTERVAL]:a.UNSIGNED_INTEGER,[n.VENDOR_IDENTIFIER]:a.UNSIGNED_INTEGER,[n.VENDOR_IDENTIFIER]:a.UNSIGNED_INTEGER,[n.VENDOR_NAME]:a.CHARACTER_STRING};t.exports=r},function(t,e,i){const s=i(18),n=s&&s.enum,a=s&&n.PropertyIdentifier;t.exports=s&&{[n.ObjectType.ANALOG_OUTPUT]:[a.PRESENT_VALUE,a.STATUS_FLAGS,a.EVENT_STATE,a.OUT_OF_SERVICE,a.UNITS,a.PRIORITY_ARRAY,a.RELINQUISH_DEFAULT],[n.ObjectType.ANALOG_INPUT]:[a.PRESENT_VALUE,a.STATUS_FLAGS,a.EVENT_STATE,a.OUT_OF_SERVICE,a.UNITS],[n.ObjectType.DEVICE]:[a.SYSTEM_STATUS,a.VENDOR_NAME,a.VENDOR_IDENTIFIER,a.MODEL_NAME,a.FIRMWARE_REVISION,a.APPLICATION_SOFTWARE_VERSION,a.PROTOCOL_VERSION,a.PROTOCOL_REVISION,a.PROTOCOL_SERVICES_SUPPORTED,a.PROTOCOL_OBJECT_TYPES_SUPPORTED,a.OBJECT_LIST,a.MAX_APDU_LENGTH_ACCEPTED,a.SEGMENTATION_SUPPORTED,a.APDU_TIMEOUT,a.NUMBER_OF_APDU_RETRIES,a.DEVICE_ADDRESS_BINDING,a.DATABASE_REVISION]}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(29),n=i(4),a=i(35),r=i(0),o=i(2),u=i(1),d=i(11),p=i(36),l=i(34),h=i(74),c=i(80);class g extends(p.DependantConnectionNodeMixin(l.PointNodeMixin(o.Node))){constructor(){super(),this.title="BACnet Server Point",this.description="Bacnet-server-point nodes should be added within a bacnet-server container node. BACnet point details should be set in settings. BACnet point settings include ID, Type, and Name.",this.mixinEnableInputSetting(),this.mixinConnectionStatusOutput(),this.addInputWithSettings("point-id",u.Type.NUMBER,1,"BACnet Object Id"),this.settings["point-kind"]={description:"BACnet Object Type",type:o.SettingType.DROPDOWN,config:{items:c.PointKind.items()},value:c.PointKind.ANALOG_INPUT.enumKey},this.addInputWithSettings("point-name",u.Type.STRING,"bacnet-point","BACnet Point Name"),this.setSettingsConfig(this.mixinPointValueInputOutput())}flowHandler(){return this}listener(){return a.MockCentralizedListener.cast(this.getParentNode())}pointObservers(){return[...super.pointObservers(),...l.MockHasPointOutputObservers.cast(this.getParentNode()).pointObservers()]}notifyOutput(t,e){var i,r,o;let u=null!=(i=this.initializePointBySettingObject())?i:t;n.isNull(u)||(t.pointValue=n.isNull(null===(r=t)||void 0===r?void 0:r.pointValue)?s.PointValueCreator.by():null===(o=t)||void 0===o?void 0:o.pointValue.merge(u.pointValue),this.settings[this.modelSettingKey()].value=t,new a.DefaultObservable(e).notify({point:t,connStatus:{status:this.getConnectionStatus()}}))}onRemoved(){if(this.listener()===a.MockCentralizedListener.LISTENER)return;let t={action:h.UNREGISTER_BACNET_POINT,payload:this.createPayload(this.initializePointBySettingObject())};this.listener().listen(t)}handleOnUpdate(t,e){var i,a,o,u,d,p,l;if(this.side!==r.Side.server||!(null===(i=e)||void 0===i?void 0:i.objectInstance)&&!(null===(a=t)||void 0===a?void 0:a.objectInstance))return null;let c=this.createPayload(t);if(!e||this.getConnectionStatus().isError()?this.listener().listen({action:h.REGISTER_BACNET_POINT,payload:c}):t.mightOnlyValueChanged(e)||(t.equals(e)||(t.pointValue=s.PointValueCreator.by()),c.prev=this.createPayload(e),this.listener().listen({action:h.UPDATE_BACNET_POINT,payload:c})),!t.enabled||n.isNull(null===(u=null===(o=t)||void 0===o?void 0:o.pointValue)||void 0===u?void 0:u.presentValue)&&(e&&!t.equals(e)||n.isNull(null===(p=null===(d=e)||void 0===d?void 0:d.pointValue)||void 0===p?void 0:p.presentValue)))return t;let g=t.pointValue.changedOfValue(null===(l=e)||void 0===l?void 0:l.pointValue);return g&&(c.data.pointValue=g),t.pointValue=this.listener().listen({action:h.PUSH_BACNET_POINT_VALUE,payload:c}),t}initializePointBySettingObject(t){let e=null!=t?t:this.settings;return c.BacnetPointCreator.from(e[this.modelSettingKey()].value)}initializePointBySettingInput(t){let e=null!=t?t:this.settings,i=c.PointKind.enumValueOf(e["point-kind"].value);return c.BacnetPointCreator.by(this.isEnabled(),e["point-id"].value,i,e["point-name"].value,this.createPointValue(e))}reEvaluateSettingByInput(t,e){e["point-id"].value=t[1].updated?t[1].data:e["point-id"].value,e["point-name"].value=t[2].updated?t[2].data:e["point-name"].value,super.reEvaluateSettingByInput(t,e)}onReceiveMessage(t){this.notifyOutput(t,this.pointObservers())}statusOutputIdx(){return 0}enableDescription(){return"Enable BACnet Point"}modelSettingKey(){return"bp"}valueInputIdx(){return 3}valueOutputIdx(){return this.errorOutputIdx()+1}computeTitle(){return`BACnet Point (ObjectType: ${c.PointKind.enumValueOf(this.settings["point-kind"].value).label}, ObjectId: ${this.settings["point-id"].value})`}createPayload(t){var e,i;return{identifier:null===(e=t)||void 0===e?void 0:e.identifier(),enabled:null===(i=t)||void 0===i?void 0:i.enabled,data:t,nodeId:d.default.getId(this.cid,this.id),callback:t=>this.onReceiveMessage(t)}}}r.Container.registerNodeType("protocols/bacnet-server/bacnet-server-point",g,h.BACNET_SERVER_NODE_TYPE)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(5);var o;!function(t){t.Droplet="Droplet",t.MicroEdge="MicroEdge"}(o||(o={}));class u extends s.Node{constructor(){super(),this.watchdogDelay=36e5,this.nodeID="",this.title="Lora Sensor Decoder (Droplet | Micro)",this.description="This node is used to decode raw serial input messages to LORA sensor values. It should be used in conjunction with the protocols/serial-connector node. If a ‘nodeID’ is set, only messages from matching LORA sensors will be output;  if no ‘nodeID’ is set, all valid LORA sensor messages will be output.  Outputs that are not present in the raw serial input message will be ‘null’.  ‘lowBatteryAlm’ output will be ‘true’ if the LORA sensor has a battery ‘voltage’ value less than the ‘Low battery warning voltage’ setting; otherwise it will be ‘false’.  ‘watchdog’ output will be ‘true’ if there has been no valid message from the ‘nodeID’ LORA sensor for the ‘Watchdog Delay’; otherwise ‘watchdog’ output will be false.  Maximum ‘Watchdog Delay’ setting is 587 hours.  This node can be used for decoding Nube Droplet sensors, and Nube MicroEdge sensors.  The sensor type can be selected from settings.",this.settings.sensorType={description:"LORA Sensor Type",type:s.SettingType.DROPDOWN,config:{items:[{value:o.Droplet,text:o.Droplet},{value:o.MicroEdge,text:o.MicroEdge}]},value:"Droplet"},this.addInput("rawInput",a.Type.STRING),this.addInputWithSettings("nodeID",a.Type.STRING,"","NodeID"),this.addInputWithSettings("topic",a.Type.STRING,"","Set topic for use elsewhere in wires"),this.addOutput("json",a.Type.STRING),this.addOutput("id",a.Type.STRING),this.addOutput("voltage",a.Type.NUMBER),this.addOutput("rssi",a.Type.NUMBER),this.addOutput("lowBatteryAlm",a.Type.BOOLEAN),this.addOutput("watchdog",a.Type.BOOLEAN),this.addOutput("temperature",a.Type.NUMBER),this.addOutput("humidity",a.Type.NUMBER),this.addOutput("lux",a.Type.NUMBER),this.addOutput("pressure",a.Type.NUMBER),this.addOutput("movement",a.Type.BOOLEAN),this.settings.microEdgeA1={description:"MicroEdge a1 Input Type",type:s.SettingType.DROPDOWN,config:{items:[{value:"10k",text:"10k Thermistor"},{value:"10vdc",text:"0-10vdc"},{value:"digital",text:"Digital"}]},value:"10vdc"},this.settings.microEdgeA2={description:"MicroEdge a2 Input Type",type:s.SettingType.DROPDOWN,config:{items:[{value:"10k",text:"10k Thermistor"},{value:"10vdc",text:"0-10vdc"},{value:"digital",text:"Digital"}]},value:"10vdc"},this.settings.microEdgeA3={description:"MicroEdge a3 Input Type",type:s.SettingType.DROPDOWN,config:{items:[{value:"10k",text:"10k Thermistor"},{value:"10vdc",text:"0-10vdc"},{value:"digital",text:"Digital"}]},value:"10vdc"},this.settings["battery-warn"]={description:"Low battery warning voltage",value:3.5,type:s.SettingType.NUMBER},this.settings.watchdog={description:"Watchdog (No message warning) Delay",value:60,type:s.SettingType.NUMBER},this.settings.time={description:"Time",type:s.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"minutes"},this.setSettingsConfig({groups:[{time:{},watchdog:{weight:2}}],conditions:{microEdgeA1:t=>t.sensorType.value===o.MicroEdge,microEdgeA2:t=>t.sensorType.value===o.MicroEdge,microEdgeA3:t=>t.sensorType.value===o.MicroEdge}})}onAdded(){this.sensorType=this.settings.sensorType.value,this.sensorType===o.MicroEdge&&this.removeOutput(10),this.clearOutputs(),this.updateTitle()}onInputUpdated(){const t=this.settings.sensorType.value;let e=this.getInputData(1).toUpperCase()||"";e!=this.nodeID&&(this.nodeID=e,this.updateTitle(),this.broadcastTitleToClients(),this.clearOutputs(),this.resetWatchdog());let i=this.getInputData(0)||"";i&&(i.length%2!=1||"\r"!==i[i.length-1]&&"\n"!==i[i.length-1]?"\r\n"===i.substring(i.length-2,i.length)&&(i=i.substring(0,i.length-2)):i=i.substring(0,i.length-1),36!==i.length&&44!==i.length&&"AA"!==i.substring(2,4)&&"B0"!==i.substring(2,4)&&"B1"!==i.substring(2,4)&&"B2"!==i.substring(2,4)||e!=i.substring(0,8)&&""!=e||(t!==o.MicroEdge||"AA"!==i.substring(2,4)||44!==i.length&&36!==i.length?t!==o.Droplet||"B"!==i.substring(2,3)||44!==i.length&&36!==i.length||(this.inputs[0].updated&&this.resetWatchdog(),this.writeOutputs(this.dropletDecode(i))):(this.inputs[0].updated&&this.resetWatchdog(),this.writeOutputs(this.microEdgeDecode(i)))))}onAfterSettingsChange(){let t=this.settings.watchdog.value;t=r.default.timeConvert(t,this.settings.time.value),this.watchdogDelay!=t&&this.resetWatchdog(),this.setOutputs(),this.updateNodeOutput(),this.onInputUpdated()}writeOutputs(t){switch(this.settings.sensorType.value){case o.Droplet:this.setOutputData(0,JSON.stringify(t)),this.setOutputData(1,null==t.id?null:t.id),this.setOutputData(2,null==t.voltage?null:t.voltage),this.setOutputData(3,null==t.rssi?null:t.rssi),this.setOutputData(4,t.voltage<this.settings["battery-warn"].value),this.setOutputData(6,null==t.temp?null:t.temp),this.setOutputData(7,null==t.humidity?null:t.humidity),this.setOutputData(8,null==t.lux?null:t.lux),this.setOutputData(9,null==t.pressure?null:t.pressure),this.setOutputData(10,null==t.movement?null:t.movement);break;case o.MicroEdge:this.setOutputData(0,JSON.stringify(t)),this.setOutputData(1,null==t.id?null:t.id),this.setOutputData(2,null==t.voltage?null:t.voltage),this.setOutputData(3,null==t.rssi?null:t.rssi),this.setOutputData(4,t.voltage<this.settings["battery-warn"].value),this.setOutputData(6,null==t.pulses?null:t.pulses);const e=this.MicroEdgeAnalogs([t.a1,t.a2,t.a3]);this.setOutputData(7,null==e[0]?null:e[0]),this.setOutputData(8,null==e[1]?null:e[1]),this.setOutputData(9,null==e[2]?null:e[2])}}MicroEdgeAnalogs(t){let e=[];for(var i=0;i<3;i++)if("number"==typeof t[i])switch(this.settings[`microEdgeA${i+1}`].value){case"10k":const s=3.34,n=t[i]/1024*s,a=1e4,r=a*n/(s-n),o=1/(1/298+1/3850*Math.log(r/a))-273.15;e.push(Math.round(100*o)/100);break;case"10vdc":e.push(t[i]/1024*10);break;case"digital":void 0===t[i]||t[i]>=1e3?e.push(!1):e.push(!0)}else e.push(null);return e}lastMessageTimeStamp(){return new Date}microEdgeDecode(t){const e=this.getInputData(2),i={id:e+"/id",pulses:e+"/pulses",voltage:e+"/voltage",a1:e+"/a1",a2:e+"/a2",a3:e+"/a3",rssi:e+"/rssi",snr:e+"/snr"};let s=null;return s=this.lastMessageTimeStamp(),{id:t.substring(0,8),pulses:parseInt(t.substring(8,16),16),voltage:parseInt(t.substring(16,18),16)/50,a1:parseInt(t.substring(18,22),16),a2:parseInt(t.substring(22,26),16),a3:parseInt(t.substring(26,30),16),rssi:-1*parseInt(t.substring(t.length-4,t.length-2),16),snr:parseInt(t.substring(t.length-2,t.length),16)/10,nodeName:this.name,topic:i,lastMessage:s}}dropletDecode(t){const e=this.getInputData(2),i={id:e+"/id",temp:e+"/temp",pressure:e+"/pressure",humidity:e+"/humidity",lux:e+"/lux",movement:e+"/movement",voltage:e+"/voltage",rssi:e+"/rssi",snr:e+"/snr"};let s=null;s=this.lastMessageTimeStamp();let n={id:t.substring(0,8),temp:parseInt(t.substring(10,12)+t.substring(8,10),16)/100,pressure:parseInt(t.substring(14,16)+t.substring(12,14),16)/10,humidity:parseInt(t.substring(16,18),16)%128,voltage:parseInt(t.substring(22,24),16)/50,rssi:-1*parseInt(t.substring(t.length-4,t.length-2),16),snr:parseInt(t.substring(t.length-2,t.length),16)/10,nodeName:this.name,topic:i,lastMessage:s};if("B1"===t.substring(2,4)||"B2"===t.substring(2,4)){const e=n;if(e.lux=parseInt(t.substring(20,22)+t.substring(18,20),16),n=e,"B2"==t.substring(2,4)){const i=e;i.movement=parseInt(t.substring(16,18),16)>127,n=i}}return n}resetWatchdog(){this.setOutputData(5,!1,!0),clearInterval(this.timeoutFunc);let t=this.settings.watchdog.value;t=r.default.timeConvert(t,this.settings.time.value),this.watchdogDelay=t,this.timeoutFunc=setTimeout(()=>{this.setOutputData(5,!0,!0)},t)}setOutputs(){const t=this.settings.sensorType.value;if(this.sensorType!=t)switch(t){case o.Droplet:this.removeOutput(6),this.removeOutput(7),this.removeOutput(8),this.removeOutput(9),this.outputs[10]&&this.removeOutput(10),this.addOutput("temperature",a.Type.NUMBER),this.addOutput("humidity",a.Type.NUMBER),this.addOutput("lux",a.Type.NUMBER),this.addOutput("pressure",a.Type.NUMBER),this.addOutput("movement",a.Type.BOOLEAN),this.clearOutputs();break;case o.MicroEdge:this.removeOutput(6),this.removeOutput(7),this.removeOutput(8),this.removeOutput(9),this.removeOutput(10),this.outputs[11]&&this.removeOutput(11),this.addOutput("pulses",a.Type.NUMBER),this.addOutput("a1",a.Type.NUMBER),this.addOutput("a2",a.Type.NUMBER),this.addOutput("a3",a.Type.NUMBER),this.clearOutputs()}t==o.MicroEdge&&(this.outputs[7].name=`a1 (${this.settings.microEdgeA1.value})`,this.outputs[8].name=`a2 (${this.settings.microEdgeA2.value})`,this.outputs[9].name=`a3 (${this.settings.microEdgeA3.value})`),this.sensorType=t,this.updateTitle()}updateTitle(){this.nodeID?this.title=`Lora Sensor Decoder (${this.sensorType} | ${this.nodeID})`:this.title=`Lora Sensor Decoder (${this.sensorType} | ALL)`}clearOutputs(){this.setOutputData(0,null),this.setOutputData(1,null),this.setOutputData(2,null),this.setOutputData(3,null),this.setOutputData(4,null),this.setOutputData(5,null),this.setOutputData(6,null),this.setOutputData(7,null),this.setOutputData(8,null),this.setOutputData(9,null),this.settings.sensorType.value===o.Droplet&&this.setOutputData(10,null)}}e.LoraSensorDecoderNode=u,n.Container.registerNodeType("protocols/lora-raw/lora-sensor-decoder",u)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(81);class o extends s.Node{constructor(){super(),this.payloadDefinition=[],this.inputsUpdated=[],this.title="Nube LoRaRAW Two Way Out",this.description="This node compiles points to Nubes LoRa Two Way protocol",this.settings.enable={description:"enable",type:s.SettingType.BOOLEAN,value:!1},this.settings.senderId={description:"sender Id",type:s.SettingType.NUMBER,value:0},this.settings.port={description:"port number",type:s.SettingType.NUMBER,value:0},this.settings.types={description:"Types",type:s.SettingType.READONLY,value:"INT8, INT16, INT32, FLOAT"},this.settings.definition={description:"payload definition (JSON)",type:s.SettingType.STRING,value:""},this.addInput("trigger",a.Type.BOOLEAN),this.addOutput("error",a.Type.STRING),this.addOutput("output",a.Type.ANY)}init(){this.updateOutputs()}onAdded(){this.payloadDefinition=this.stringToDataTypes(this.settings.definition.value),this.inputsUpdated=new Array(this.payloadDefinition.length),this.inputsUpdated.fill(!1)}onInputUpdated(){for(let t=1;t<this.getInputsCount();t++)this.inputs[t].updated&&(this.inputsUpdated[t-1]=!0);if(!1===this.settings.enable.value)return;if(!this.inputs[0].updated||!1===this.getInputData(0))return;const t=t=>{this.setOutputData(1,"parse error: "+t)},e=(t,e)=>{let i=!0;switch(e){case r.LORA_DATA_TYPE_NAMES.INT8:i=t>=-128&&t<=127;break;case r.LORA_DATA_TYPE_NAMES.UINT8:i=t>=0&&t<=255;break;case r.LORA_DATA_TYPE_NAMES.INT16:i=t>=-32768&&t<=32767;break;case r.LORA_DATA_TYPE_NAMES.UINT16:i=t>=0&&t<=65535;break;case r.LORA_DATA_TYPE_NAMES.INT32:i=t>=-2147483648&&t<=2147483647;break;case r.LORA_DATA_TYPE_NAMES.UINT32:i=t>=0&&t<=4294967295}return i};this.inputsUpdated.fill(!0);let i=0;for(let t=0;t<this.payloadDefinition.length;t++)this.inputsUpdated[t]&&(i+=r.LORA_DATA_TYPE_LENGTHS[this.payloadDefinition[t]]+1);if(0===i)return void t("No input updates");let s=Buffer.alloc(i+2);s.writeUInt8(this.settings.senderId.value,0),s.writeUInt8(this.settings.port.value,1);let n=0;for(let i=2;i<s.length;){if(!this.inputsUpdated[n]){n++;continue}let a=this.payloadDefinition[n],o=this.getInputData(n+1);if(!e(o,a))return void t("invalid value input "+n);switch(s.writeUInt8(n,i++),a){case r.LORA_DATA_TYPE_NAMES.INT8:s.writeInt8(o,i);break;case r.LORA_DATA_TYPE_NAMES.UINT8:s.writeUInt8(o,i);break;case r.LORA_DATA_TYPE_NAMES.INT16:s.writeInt16LE(o,i);break;case r.LORA_DATA_TYPE_NAMES.UINT16:s.writeUInt16LE(o,i);break;case r.LORA_DATA_TYPE_NAMES.INT32:s.writeInt32LE(o,i);break;case r.LORA_DATA_TYPE_NAMES.UINT32:s.writeUInt32LE(o,i);break;case r.LORA_DATA_TYPE_NAMES.FLOAT:s.writeFloatLE(o,i)}i+=r.LORA_DATA_TYPE_LENGTHS[a],n++}this.setOutputData(1,null),this.setOutputData(0,s),this.inputsUpdated.fill(!1)}onAfterSettingsChange(){this.payloadDefinition=this.updateOutputs(),this.setOutputData(1,null),this.onInputUpdated()}updateOutputs(){const t=this.stringToDataTypes(this.settings.definition.value);if(this.payloadDefinition.length!==t.length){const e=this.getInputsCount();for(let t=1;t<e;t++)this.removeInput(t);this.inputsUpdated=new Array(t.length);for(let e=0;e<t.length;e++)this.addInput(e.toString(),a.Type.NUMBER),this.inputsUpdated[e]=!1}return t}stringToDataTypes(t){const e=t.toUpperCase().replace(/ /g,"").split(",").filter(t=>""!==t);if(e&&e.length)for(let t=0;t<e.length;t++){if(void 0===r.LORA_DATA_TYPE_NAMES[e[t]])return void this.setOutputData(1,"settings parse error");e[t]=r.LORA_DATA_TYPE_NAMES[e[t]]}return e}}e.LoRaRawTwoWayOutput=o,n.Container.registerNodeType("protocols/lora-raw/lora-raw-two-way-out",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(1),a=i(0),r=i(3),o=i(303);var u;!function(t){t[t.INT8=0]="INT8",t[t.UINT8=1]="UINT8",t[t.INT16=2]="INT16",t[t.UINT16=3]="UINT16",t[t.INT32=4]="INT32",t[t.UINT32=5]="UINT32",t[t.FLOAT=6]="FLOAT"}(u||(u={}));const d=[1,1,2,2,4,4,4];class p extends s.Node{constructor(){super(),this.payloadDefinition=[],this.addressPrefix="FFFFFF",this.address="",this.keyBuffer=null,this.nonce=0,this.outputOffset=3,this.title="Nube LoRaRAW Points In",this.description="This node parses Nubes LoRa Points protocol payload",this.settings.enable={description:"enable",type:s.SettingType.BOOLEAN,value:!0},this.settings.senderId={description:"sender Id [0-254]",type:s.SettingType.NUMBER,value:0},this.settings.port={description:"port number [0-254]",type:s.SettingType.NUMBER,value:0},this.settings.types={description:"Types # = [8, 16, 23]",type:s.SettingType.READONLY,value:"INT#, UINT#, FLOAT"},this.settings.definition={description:"payload definition (',' separated)",type:s.SettingType.STRING,value:""},this.settings.key={description:"encryption key (hex)",type:s.SettingType.STRING,value:""},this.settings.other_group={description:"Advanced",value:"",type:s.SettingType.GROUP},this.settings.addrPrefix={description:"Address Prefix [6]",type:s.SettingType.STRING,value:"FFFFFF"},this.settings.nonceLen={description:"Nonce Length",type:s.SettingType.NUMBER,value:2},this.settings.frameCounterEnabled={description:"frame counters (**TBA**)",type:s.SettingType.BOOLEAN,value:!1},this.addInput("rawInput",n.Type.STRING),this.addOutput("error",n.Type.STRING),this.addOutput("rssi",n.Type.NUMBER),this.addOutput("snr",n.Type.NUMBER)}init(){this.updateSettings(),this.updateOutputs(this.payloadDefinition)}onAdded(){this.updateSettings()}onInputUpdated(){if(null===this.keyBuffer)return;let t=this.getInputData(0)||"";if(!1===this.settings.enable.value)return;if(!t||t.length<48||t.substring(0,8).toUpperCase()!==this.address)return;"\r\n"===t.substring(t.length-2,t.length)?t=t.substring(0,t.length-2):t.length%2!=1||"\n"!==t[t.length-1]&&"\r"!==t[t.length-1]||(t=t.substring(0,t.length-1));let e=Buffer.from(t,"hex"),[i,s]=o.loraRawDecryptBuffer(e.slice(0,4),e.slice(4,e.length-2),this.keyBuffer);if(s!==o.LORA_RAW_ERROR.LRERR_NOERR)return void this.setOutputData(0,"LoRaRaw Crypt ERR: "+s);let n=e.readInt8(e.length-2),a=e.readUInt8(e.length-1),r=this.settings.nonceLen.value;if(i[r]!==this.settings.port.value)return;const p=t=>{this.setOutputData(0,"parse error: "+t)};let l=i.slice(r+1),h=new Array(this.payloadDefinition.length),c=new Array(this.payloadDefinition.length);c.fill(!1);let g=0;for(let t=0;t<this.payloadDefinition.length;t++){let t=l.readUInt8(g++),e=0;if(t>=this.payloadDefinition.length)return void p("invalid point "+t);if(c[t])return void p("Bad payload. Point already parsed: "+t);if(e=d[this.payloadDefinition[t]],l.length-g<e)return void p("invalid length");switch(this.payloadDefinition[t]){case u.INT8:h[t]=l.readInt8(g);break;case u.UINT8:h[t]=l.readUInt8(g);break;case u.INT16:h[t]=l.readInt16LE(g);break;case u.UINT16:h[t]=l.readUInt16LE(g);break;case u.INT32:h[t]=l.readInt32LE(g);break;case u.UINT32:h[t]=l.readUInt32LE(g);break;case u.FLOAT:h[t]=l.readFloatLE(g)}c[t]=!0,g+=e}for(let t=0;t<h.length;t++)this.setOutputData(t+this.outputOffset,h[t]);this.setOutputData(1,n),this.setOutputData(2,a),this.setOutputData(0,null)}onAfterSettingsChange(){this.updateSettings()&&(this.updateOutputs(this.payloadDefinition),this.onInputUpdated())}updateSettings(){this.settings.senderId.value=r.default.clamp(this.settings.senderId.value,0,254),this.settings.port.value=r.default.clamp(this.settings.port.value,0,254),this.settings.nonceLen.value=r.default.clamp(this.settings.nonceLen.value,1,4),this.payloadDefinition=this.stringToDataTypes(this.settings.definition.value);let t=this.settings.addrPrefix.value;return this.addressPrefix=t&&6===t.length?t:"FFFFFF",this.address=this.addressPrefix+("0"+this.settings.senderId.value.toString(16)).substr(-2),this.address=this.address.toUpperCase(),32!==this.settings.key.value.length?(this.setOutputData(0,"invalid key"),this.keyBuffer=null,!1):(this.keyBuffer=Buffer.from(this.settings.key.value,"hex"),this.setOutputData(0,null),!0)}updateOutputs(t){if(this.getOutputsCount()-this.outputOffset!==t.length){const e=this.getOutputsCount();for(let t=this.outputOffset;t<e;t++)this.removeOutput(t);for(let e=0;e<t.length;e++)this.addOutput(e.toString(),n.Type.NUMBER);this.updateNodeOutput()}}stringToDataTypes(t){const e=t.toUpperCase().replace(/ /g,"").split(",").filter(t=>""!==t);if(e&&e.length)for(let t=0;t<e.length;t++){if(void 0===u[e[t]])return void this.setOutputData(0,"settings parse error");e[t]=u[e[t]]}return e}}e.LoRaRawPointsInput=p,a.Container.registerNodeType("protocols/lora-raw-v2/lora-raw-points-in",p);class l extends s.Node{constructor(){super(),this.payloadDefinition=[],this.addressPrefix="FFFFFF",this.address=null,this.keyBuffer=null,this.nonce=0,this.errorOutputIndex=1,this.title="Nube LoRaRAW Points Out",this.description="This node compiles points to Nubes LoRa Points protocol",this.settings.enable={description:"enable",type:s.SettingType.BOOLEAN,value:!0},this.settings.enable={description:"enable",type:s.SettingType.BOOLEAN,value:!0},this.settings.senderId={description:"sender Id [0-254]",type:s.SettingType.NUMBER,value:0},this.settings.port={description:"port number [0-254]",type:s.SettingType.NUMBER,value:0},this.settings.types={description:"Types ( # = [8, 16, 23] )",type:s.SettingType.READONLY,value:"INT#, UINT#, FLOAT"},this.settings.definition={description:"payload definition (',' separated)",type:s.SettingType.STRING,value:""},this.settings.key={description:"encryption key (hex)",type:s.SettingType.STRING,value:""},this.settings.other_group={description:"Advanced",value:"",type:s.SettingType.GROUP},this.settings.addrPrefix={description:"Address Prefix [6]",type:s.SettingType.STRING,value:"FFFFFF"},this.settings.nonceLen={description:"Nonce Length",type:s.SettingType.NUMBER,value:2},this.settings.frameCounterEnabled={description:"frame counters (**TBA**)",type:s.SettingType.BOOLEAN,value:!1},this.addInput("trigger",n.Type.BOOLEAN),this.addOutput("output",n.Type.ANY),this.addOutput("error",n.Type.STRING)}init(){this.updateSettings(),this.updateInputs(this.payloadDefinition)}onAdded(){this.updateSettings()}onInputUpdated(){if(!1===this.settings.enable.value)return;if(!this.inputs[0].updated||!0!==this.getInputData(0))return;const t=t=>{this.setOutputData(this.errorOutputIndex,"parse error: "+t)},e=(t,e)=>{let i=!0;switch(e){case u.INT8:i=t>=-128&&t<=127;break;case u.UINT8:i=t>=0&&t<=255;break;case u.INT16:i=t>=-32768&&t<=32767;break;case u.UINT16:i=t>=0&&t<=65535;break;case u.INT32:i=t>=-2147483648&&t<=2147483647;break;case u.UINT32:i=t>=0&&t<=4294967295}return i};let i=0;for(let t=0;t<this.payloadDefinition.length;t++)i+=d[this.payloadDefinition[t]]+1;if(0===i)return void t("No input updates");let s=Buffer.alloc(i+this.settings.nonceLen.value+1);const n=this.settings.nonceLen.value;1===n?(s.writeUInt8(this.nonce,0),this.nonce=this.nonce+1&255):2===n?(s.writeUInt16LE(this.nonce,0),this.nonce=this.nonce+1&65535):4===n&&(s.writeUInt32LE(this.nonce,0),this.nonce=this.nonce+1&4294967295),s.writeUInt8(this.settings.port.value,n);let a=0;for(let i=n+1;i<s.length;){let n=this.payloadDefinition[a],r=this.getInputData(a+1);if(!e(r,n))return void t("invalid value input "+a);switch(s.writeUInt8(a,i++),n){case u.INT8:s.writeInt8(r,i);break;case u.UINT8:s.writeUInt8(r,i);break;case u.INT16:s.writeInt16LE(r,i);break;case u.UINT16:s.writeUInt16LE(r,i);break;case u.INT32:s.writeInt32LE(r,i);break;case u.UINT32:s.writeUInt32LE(r,i);break;case u.FLOAT:s.writeFloatLE(r,i)}i+=d[n],a++}let[r,p]=o.loraRawEncryptBuffer(this.address,s,this.keyBuffer);p===o.LORA_RAW_ERROR.LRERR_NOERR?(s=Buffer.concat([this.address,r]),this.setOutputData(this.errorOutputIndex,null),this.setOutputData(0,s)):this.setOutputData(this.errorOutputIndex,"LoRaRaw Crypt ERR: "+p)}onAfterSettingsChange(){this.updateSettings()&&(this.updateInputs(this.payloadDefinition),this.setOutputData(this.errorOutputIndex,null),this.onInputUpdated())}updateSettings(){if(this.settings.senderId.value=r.default.clamp(this.settings.senderId.value,0,254),this.settings.port.value=r.default.clamp(this.settings.port.value,0,254),this.settings.nonceLen.value=r.default.clamp(this.settings.nonceLen.value,1,4),this.payloadDefinition=this.stringToDataTypes(this.settings.definition.value),32!==this.settings.key.value.length)return this.setOutputData(this.errorOutputIndex,"invalid key"),this.keyBuffer=null,!1;this.keyBuffer=Buffer.from(this.settings.key.value,"hex");let t=this.settings.addrPrefix.value;return this.addressPrefix=t&&6===t.length?t.toUpperCase():"FFFFFF",this.address=Buffer.from(this.addressPrefix+("0"+this.settings.senderId.value.toString(16)).substr(-2),"hex"),this.setOutputData(this.errorOutputIndex,null),!0}updateInputs(t){if(this.getInputsCount()-1!==t.length){const e=this.getInputsCount();for(let t=1;t<e;t++)this.removeInput(t);for(let e=0;e<t.length;e++)this.addInput(e.toString(),n.Type.NUMBER);this.updateNodeOutput()}}stringToDataTypes(t){const e=t.toUpperCase().replace(/ /g,"").split(",").filter(t=>""!==t);if(e&&e.length)for(let t=0;t<e.length;t++){if(void 0===u[e[t]])return void this.setOutputData(this.errorOutputIndex,"settings parse error");e[t]=u[e[t]]}return e}}e.LoRaRawPointsOutput=l,a.Container.registerNodeType("protocols/lora-raw-v2/lora-raw-points-out",l)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var s=i(82);const n=i(304).aesCmac,a=Buffer.alloc(16,0);var r;!function(t){t[t.LRERR_NOERR=0]="LRERR_NOERR",t[t.LRERR_INVALID_KEY=1]="LRERR_INVALID_KEY",t[t.LRERR_INVALID_IV=2]="LRERR_INVALID_IV",t[t.LRERR_INVALID_PAYLOAD=3]="LRERR_INVALID_PAYLOAD",t[t.LRERR_INVALID_CMAC=4]="LRERR_INVALID_CMAC"}(r=e.LORA_RAW_ERROR||(e.LORA_RAW_ERROR={})),e.loraRawEncryptBuffer=function(t,e,i,o=a){if(16!==i.length)return[null,r.LRERR_INVALID_KEY];if(16!==o.length)return[null,r.LRERR_INVALID_IV];var u=s.createCipheriv("aes-128-cbc",i,o).setAutoPadding(!1);e.length%16&&(e=Buffer.concat([e,Buffer.alloc(16-e.length%16,0)])),e=u.update(e),e=Buffer.concat([e,u.final()]);var d=Buffer.concat([t,e.slice(0,12)],16);d=Buffer.concat([d,e],16+e.length);var p=n(i,d,{returnAsBuffer:!0});return[e=Buffer.concat([e,p.slice(0,4)],e.length+4),r.LRERR_NOERR]},e.loraRawDecryptBuffer=function(t,e,i,o=a){if(16!==i.length)return[null,r.LRERR_INVALID_KEY];if(16!==o.length)return[null,r.LRERR_INVALID_IV];if(e.length%16!=4)return[null,r.LRERR_INVALID_PAYLOAD];var u=Buffer.concat([t,e],16);if(u=Buffer.concat([u,e],16+e.length),!n(i,u,{returnAsBuffer:!0}).slice(0,4).compare(e,e.length-4))return[null,r.LRERR_INVALID_CMAC];var d=s.createDecipheriv("aes-128-cbc",i,o).setAutoPadding(!1);return e=d.update(e.slice(0,e.length-4)),[e=Buffer.concat([e,d.final()]),r.LRERR_NOERR]}},function(t,e){t.exports=require("node-aes-cmac")},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(1),a=i(0),r=i(5);var o=i(82);const u=Buffer.alloc(16,0);var d;!function(t){t.Droplet="Droplet",t.MicroEdge="MicroEdge"}(d||(d={}));class p extends s.Node{constructor(){super(),this.watchdogDelay=36e5,this.nodeID="",this.keyBuffer=null,this.title="Lora Sensor Legacy Decoder (Droplet | Micro)",this.description="LEGACY DECODER. PROVIDES DECRYPTION AS NEW FIRMWARE DOESNT\nThis node is used to decode raw serial input messages to LORA sensor values.\nIt should be used in conjunction with the protocols/serial-connector node.\nIf a ‘nodeID’ is set, only messages from matching LORA sensors will be output.\nIf no ‘nodeID’ is set, all valid LORA sensor messages will be output.\nOutputs that are not present in the raw serial input message will be ‘null’.\n‘lowBatteryAlm’ output will be ‘true’ if the LORA sensor has a battery ‘voltage’ value less than the ‘Low battery warning voltage’ setting\notherwise it will be ‘false’.\n‘watchdog’ output will be ‘true’ if there has been no valid message from the ‘nodeID’ LORA sensor for the ‘Watchdog Delay’\notherwise ‘watchdog’ output will be false.  Maximum ‘Watchdog Delay’ setting is 587 hours.\nThis node can be used for decoding Nube Droplet sensors, and Nube MicroEdge sensors.\nThe sensor type can be selected from settings.",this.settings.sensorType={description:"LORA Sensor Type",type:s.SettingType.DROPDOWN,config:{items:[{value:d.Droplet,text:d.Droplet},{value:d.MicroEdge,text:d.MicroEdge}]},value:"Droplet"},this.settings.keyHex={description:"Decryption Key (HEX)",value:"",type:s.SettingType.STRING},this.addInput("rawInput",n.Type.STRING),this.addInputWithSettings("nodeID",n.Type.STRING,"","NodeID"),this.addInputWithSettings("topic",n.Type.STRING,"","Set topic for use elsewhere in wires"),this.addOutput("json",n.Type.STRING),this.addOutput("id",n.Type.STRING),this.addOutput("voltage",n.Type.NUMBER),this.addOutput("rssi",n.Type.NUMBER),this.addOutput("lowBatteryAlm",n.Type.BOOLEAN),this.addOutput("watchdog",n.Type.BOOLEAN),this.addOutput("temperature",n.Type.NUMBER),this.addOutput("humidity",n.Type.NUMBER),this.addOutput("lux",n.Type.NUMBER),this.addOutput("pressure",n.Type.NUMBER),this.addOutput("movement",n.Type.BOOLEAN),this.settings.microEdgeA1={description:"MicroEdge a1 Input Type",type:s.SettingType.DROPDOWN,config:{items:[{value:"10k",text:"10k Thermistor"},{value:"10vdc",text:"0-10vdc"},{value:"digital",text:"Digital"}]},value:"10vdc"},this.settings.microEdgeA2={description:"MicroEdge a2 Input Type",type:s.SettingType.DROPDOWN,config:{items:[{value:"10k",text:"10k Thermistor"},{value:"10vdc",text:"0-10vdc"},{value:"digital",text:"Digital"}]},value:"10vdc"},this.settings.microEdgeA3={description:"MicroEdge a3 Input Type",type:s.SettingType.DROPDOWN,config:{items:[{value:"10k",text:"10k Thermistor"},{value:"10vdc",text:"0-10vdc"},{value:"digital",text:"Digital"}]},value:"10vdc"},this.settings["battery-warn"]={description:"Low battery warning voltage",value:3.5,type:s.SettingType.NUMBER},this.settings.watchdog={description:"Watchdog (No message warning) Delay",value:60,type:s.SettingType.NUMBER},this.settings.time={description:"Time",type:s.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"minutes"},this.setSettingsConfig({groups:[{time:{},watchdog:{weight:2}}],conditions:{microEdgeA1:t=>t.sensorType.value===d.MicroEdge,microEdgeA2:t=>t.sensorType.value===d.MicroEdge,microEdgeA3:t=>t.sensorType.value===d.MicroEdge}})}onAdded(){this.sensorType=this.settings.sensorType.value;let t=this.settings.keyHex.value;this.keyBuffer=t&&32===t.length?Buffer.from(t,"hex"):null,this.sensorType===d.MicroEdge&&this.removeOutput(10),this.clearOutputs(),this.updateTitle()}onInputUpdated(){const t=this.settings.sensorType.value;let e=this.getInputData(1).toUpperCase()||"";if(e!=this.nodeID&&(this.nodeID=e,this.updateTitle(),this.broadcastTitleToClients(),this.clearOutputs(),this.resetWatchdog()),null===this.keyBuffer)return;let i=this.getInputData(0)||"";if(!i)return;if(i.length%2!=1||"\r"!==i[i.length-1]&&"\n"!==i[i.length-1]?"\r\n"===i.substring(i.length-2,i.length)&&(i=i.substring(0,i.length-2)):i=i.substring(0,i.length-1),36!==i.length&&44!==i.length)return;let s=Buffer.from(i.substr(0,32),"hex");s=o.createDecipheriv("aes-128-cbc",this.keyBuffer,u).setAutoPadding(!1).update(s),i=s.toString("hex").toUpperCase()+i.substring(32),36!==i.length&&44!==i.length&&"AA"!==i.substring(2,4)&&"B0"!==i.substring(2,4)&&"B1"!==i.substring(2,4)&&"B2"!==i.substring(2,4)||e!=i.substring(0,8)&&""!=e||(t!==d.MicroEdge||"AA"!==i.substring(2,4)||44!==i.length&&36!==i.length?t!==d.Droplet||"B"!==i.substring(2,3)||44!==i.length&&36!==i.length||(this.inputs[0].updated&&this.resetWatchdog(),this.writeOutputs(this.dropletDecode(i))):(this.inputs[0].updated&&this.resetWatchdog(),this.writeOutputs(this.microEdgeDecode(i))))}onAfterSettingsChange(){let t=this.settings.keyHex.value;this.keyBuffer=t&&32===t.length?Buffer.from(t,"hex"):null;let e=this.settings.watchdog.value;e=r.default.timeConvert(e,this.settings.time.value),this.watchdogDelay!=e&&this.resetWatchdog(),this.setOutputs(),this.updateNodeOutput(),this.onInputUpdated()}writeOutputs(t){switch(this.settings.sensorType.value){case d.Droplet:this.setOutputData(0,JSON.stringify(t)),this.setOutputData(1,null==t.id?null:t.id),this.setOutputData(2,null==t.voltage?null:t.voltage),this.setOutputData(3,null==t.rssi?null:t.rssi),this.setOutputData(4,t.voltage<this.settings["battery-warn"].value),this.setOutputData(6,null==t.temp?null:t.temp),this.setOutputData(7,null==t.humidity?null:t.humidity),this.setOutputData(8,null==t.lux?null:t.lux),this.setOutputData(9,null==t.pressure?null:t.pressure),this.setOutputData(10,null==t.movement?null:t.movement);break;case d.MicroEdge:this.setOutputData(0,JSON.stringify(t)),this.setOutputData(1,null==t.id?null:t.id),this.setOutputData(2,null==t.voltage?null:t.voltage),this.setOutputData(3,null==t.rssi?null:t.rssi),this.setOutputData(4,t.voltage<this.settings["battery-warn"].value),this.setOutputData(6,null==t.pulses?null:t.pulses);const e=this.MicroEdgeAnalogs([t.a1,t.a2,t.a3]);this.setOutputData(7,null==e[0]?null:e[0]),this.setOutputData(8,null==e[1]?null:e[1]),this.setOutputData(9,null==e[2]?null:e[2])}}MicroEdgeAnalogs(t){let e=[];for(var i=0;i<3;i++)if("number"==typeof t[i])switch(this.settings[`microEdgeA${i+1}`].value){case"10k":const s=3.34,n=t[i]/1024*s,a=1e4,r=a*n/(s-n),o=1/(1/298+1/3850*Math.log(r/a))-273.15;e.push(Math.round(100*o)/100);break;case"10vdc":e.push(t[i]/1024*10);break;case"digital":void 0===t[i]||t[i]>=1e3?e.push(!1):e.push(!0)}else e.push(null);return e}lastMessageTimeStamp(){return new Date}microEdgeDecode(t){const e=this.getInputData(2),i={id:e+"/id",pulses:e+"/pulses",voltage:e+"/voltage",a1:e+"/a1",a2:e+"/a2",a3:e+"/a3",rssi:e+"/rssi",snr:e+"/snr"};let s=null;return s=this.lastMessageTimeStamp(),{id:t.substring(0,8),pulses:parseInt(t.substring(8,16),16),voltage:parseInt(t.substring(16,18),16)/50,a1:parseInt(t.substring(18,22),16),a2:parseInt(t.substring(22,26),16),a3:parseInt(t.substring(26,30),16),rssi:Buffer.from(t.substring(t.length-4,t.length-2),"hex").readInt8(0),snr:parseInt(t.substring(t.length-2,t.length),16)/10,nodeName:this.name,topic:i,lastMessage:s}}dropletDecode(t){const e=this.getInputData(2),i={id:e+"/id",temp:e+"/temp",pressure:e+"/pressure",humidity:e+"/humidity",lux:e+"/lux",movement:e+"/movement",voltage:e+"/voltage",rssi:e+"/rssi",snr:e+"/snr"};let s=null;s=this.lastMessageTimeStamp();let n={id:t.substring(0,8),temp:parseInt(t.substring(10,12)+t.substring(8,10),16)/100,pressure:parseInt(t.substring(14,16)+t.substring(12,14),16)/10,humidity:parseInt(t.substring(16,18),16)%128,voltage:parseInt(t.substring(22,24),16)/50,rssi:Buffer.from(t.substring(t.length-4,t.length-2),"hex").readInt8(0),snr:parseInt(t.substring(t.length-2,t.length),16)/10,nodeName:this.name,topic:i,lastMessage:s};if("B1"===t.substring(2,4)||"B2"===t.substring(2,4)){const e=n;if(e.lux=parseInt(t.substring(20,22)+t.substring(18,20),16),n=e,"B2"==t.substring(2,4)){const i=e;i.movement=parseInt(t.substring(16,18),16)>127,n=i}}return n}resetWatchdog(){this.setOutputData(5,!1,!0),clearInterval(this.timeoutFunc);let t=this.settings.watchdog.value;t=r.default.timeConvert(t,this.settings.time.value),this.watchdogDelay=t,this.timeoutFunc=setTimeout(()=>{this.setOutputData(5,!0,!0)},t)}setOutputs(){const t=this.settings.sensorType.value;if(this.sensorType!=t)switch(t){case d.Droplet:this.removeOutput(6),this.removeOutput(7),this.removeOutput(8),this.removeOutput(9),this.outputs[10]&&this.removeOutput(10),this.addOutput("temperature",n.Type.NUMBER),this.addOutput("humidity",n.Type.NUMBER),this.addOutput("lux",n.Type.NUMBER),this.addOutput("pressure",n.Type.NUMBER),this.addOutput("movement",n.Type.BOOLEAN),this.clearOutputs();break;case d.MicroEdge:this.removeOutput(6),this.removeOutput(7),this.removeOutput(8),this.removeOutput(9),this.removeOutput(10),this.outputs[11]&&this.removeOutput(11),this.addOutput("pulses",n.Type.NUMBER),this.addOutput("a1",n.Type.NUMBER),this.addOutput("a2",n.Type.NUMBER),this.addOutput("a3",n.Type.NUMBER),this.clearOutputs()}t==d.MicroEdge&&(this.outputs[7].name=`a1 (${this.settings.microEdgeA1.value})`,this.outputs[8].name=`a2 (${this.settings.microEdgeA2.value})`,this.outputs[9].name=`a3 (${this.settings.microEdgeA3.value})`),this.sensorType=t,this.updateTitle()}updateTitle(){this.nodeID?this.title=`Lora Sensor Decoder (${this.sensorType} | ${this.nodeID})`:this.title=`Lora Sensor Decoder (${this.sensorType} | ALL)`}clearOutputs(){this.setOutputData(0,null),this.setOutputData(1,null),this.setOutputData(2,null),this.setOutputData(3,null),this.setOutputData(4,null),this.setOutputData(5,null),this.setOutputData(6,null),this.setOutputData(7,null),this.setOutputData(8,null),this.setOutputData(9,null),this.settings.sensorType.value===d.Droplet&&this.setOutputData(10,null)}}e.LoraSensorLegacyDecoderNode=p,a.Container.registerNodeType("protocols/lora-raw-v2/lora-raw-sensor-decoder-legacy",p)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);let r=i(83);class o extends s.Node{constructor(){super(),this.tcpServer=null,this.title="Modbus Server",this.description="## Description\n  This node is used to create a modbus server.\n  Once the Port and Modbus Address settings are configured, when enabled, this node will create a Local Modbus TCP/IP Server.  The points on this created Modbus Server can be written to and read from with other Modbus Nodes, or from another device.\n    \n ## Point Address\n    \n ### Coils\n    \n  Valid Coil range is between 0 and 10001. This will allow any modbus client to read and write to those coli ranges\n    \n ### Holding Register\n    \n  Valid Holding Register range is between 10001 and 19999. This will allow any modbus client to read and write to those coli ranges\n    \n ### Enable\n    \n  This will enable/disable the modbus server \n    \n ### Port\n    \n  This is the setting that the modbus server will listen on \n    \n ### Modbus address\n    \n  This will set the modbus server modbus address (valid range between 0 and 255) \n    \n ",this.addInput("connect",a.Type.BOOLEAN),this.addOutput("status",a.Type.BOOLEAN),this.addOutput("error",a.Type.STRING),this.addOutput("message",a.Type.STRING),this.settings.serverEnable={description:"Server enable",value:!1,type:s.SettingType.BOOLEAN},this.settings.port={description:"port",value:8502,type:s.SettingType.NUMBER},this.settings.address={description:"Modbus address",value:1,type:s.SettingType.NUMBER}}onAdded(){this.createModbusServer()}onInputUpdated(){this.createModbusServer()}onAfterSettingsChange(){this.createModbusServer()}onRemoved(){this.closeTcpServer()}createModbusServer(){if(this.side===n.Side.server&&(this.closeTcpServer(),this.emitResult(!1,!1,"close connection"),this.settings.serverEnable.value)){const e=Buffer.alloc(160008,0),s=Buffer.alloc(160008,0);let n=this.settings.address.value;n=parseInt(n);const a=0,o=10001,u=20001,d=8,p={getCoil:function(t,i){if(i===n&&t>=a&&t<u)return e.readUInt8(t*d)},getInputRegister:function(t,e){if(e===n&&t>=a&&t<o)return s.readUInt16BE(t*d)},getHoldingRegister:function(t,e){if(e===n&&t>=o&&t<u)return s.readUInt16BE(t*d)},setCoil:function(t,i,s){s===n&&t>=a&&t<u&&e.writeUInt8(i,t*d)},setRegister:function(t,e,i){i===n&&t>=a&&t<u&&s.writeUInt16BE(e,t*d)},readDeviceIdentification:function(t){return new Promise((function(t){setTimeout((function(){t({0:"Nube-IO",1:"wires-server",2:"1",5:"wires-server"})}),10)}))}};var t=i(84).createServer();let l=this.settings.port.value,h=this.settings.address.value;l.toString().length>=3?(t.once("error",e=>{"EADDRINUSE"===e.code&&(this.emitResult(!1,!1,"port in use"),t.close())}),t.once("listening",()=>{this.tcpServer=new r.ServerTCP(p,{host:"0.0.0.0",port:l,debug:!0,unitID:parseInt(h)}),this.tcpServer.on("socketError",t=>{this.emitResult(!1,t,"server error")}),this.tcpServer.on("initialized",()=>{this.emitResult(!0,!1,"initialized")}),t.close()}),t.listen(l)):l.toString().length<3&&this.emitResult(null,!1,"use a port >= 3")}}closeTcpServer(){this.tcpServer&&this.tcpServer.close(()=>{this.emitResult(!1,!1,"closed")})}emitResult(t,e,i){this.setOutputData(0,t),this.setOutputData(1,e),this.setOutputData(2,i)}}n.Container.registerNodeType("protocols/modbus/modbus-server",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(14),n=i(0),a=i(2),r=i(9),o=i(1),u=i(84);class d extends s.ContainerNode{constructor(t){super(t),this.tcpServer=null,this.db=null,this.uuid=null,this.outStatus=0,this.outError=1,this.outMessageJson=2,this.title="Modbus Device",this.description="## Description\n  This node is used as a modbus TCP or RTU(rs485) modbus device.\n  The node is to be added inside a modbus network node (The network details will be added in the network node)\n  The points for the device will be added inside this node \n    \n ### Enable\n    \n  This will enable/disable the device from polling \n    \n ### Modbus Address\n    \n  If device is RTU type set the slave modbus address\n    \n ### Device Timeout\n    \n  This setting is used for the polling. This is the amount of time the polling will wait before moving onto the next register or device to poll\n    \n ### Network Type\n    \n If type is TCP set select type TCP and set the target device IP and port \n If type is RTU set the device address as per setting **Modbus Address** \n    \n ### Point address starting offset\n    \n Modbus point address offset(Base 1 subtracts 1 to the address) \n If set to Base 1 this will make for example point address 1 (from the manufacture data sheet) equal to 0\n The default setting is Base 1\n    \n ## Node outputs\n    \n  If device is TCP when the node is added or after the setting a change a device ping will be sent to see if the device is online\n  If device is online **status** will be sent to true and the **error** will be sent to false. If the device if offline the **status** will be sent to false and the **error** true \n    \n ",this.addOutput("status",o.Type.BOOLEAN),this.addOutput("error",o.Type.STRING),this.addOutput("message",o.Type.JSON),this.settings.deviceEnable={description:"Device enable",value:!1,type:a.SettingType.BOOLEAN},this.settings.address={description:"Modbus address",value:1,type:a.SettingType.NUMBER},this.settings.deviceTimeout={description:"Device Timeout Delay Setting (MS)",value:2e3,type:a.SettingType.NUMBER},this.settings.transport={description:"TCP or RTU/RS485",type:a.SettingType.DROPDOWN,config:{items:[{value:"rtu",text:"Modbus RTU over Serial 485"},{value:"tcp",text:"Modbus TCP/IP"}]},value:"rtu"},this.settings.ipAddress={description:"Network IP Address",value:"0.0.0.0",type:a.SettingType.STRING},this.settings.ipPort={description:"Network Port Number",value:502,type:a.SettingType.NUMBER},this.settings.deviceAddressOffset={description:"Point address starting offset",type:a.SettingType.DROPDOWN,config:{items:[{value:1,text:"Base 1"},{value:0,text:"Base 0"}]},value:1},this.setSettingsConfig({conditions:{ipAddress:t=>"tcp"===t.transport.value,ipPort:t=>"tcp"===t.transport.value}})}onRemoved(){if(this.side===n.Side.server){for(let t in this.sub_container._nodes){let e=this.sub_container._nodes[t];e.container.remove(e)}delete n.Container.containers[this.sub_container.id]}}onAdded(){super.onAdded(),this.broadcastNameToClients(),this.updateTitle(),this.side===n.Side.server&&(this.uuid=this.id,"tcp"===this.settings.transport.value&&this.ping())}updateTitle(){const t=this.settings.address.value,e=this.settings.transport.value,i=this.settings.ipAddress.value,s=this.settings.ipPort.value;"tcp"===e?(this.title=`Modbus Device (Type: ${this.settings.transport.value}, AD: ${t} , IP: ${i}:${s})`,this.broadcastSettingsToClients()):(this.title=`Modbus Device (Type: ${this.settings.transport.value}, AD: ${t})`,this.broadcastSettingsToClients())}ping(){const t=[this.settings.ipAddress.value,this.settings.ipPort.value];var e=new u.Socket;e.setTimeout(5e3),e.on("connect",()=>{this.setOutputData(this.outStatus,!0,!0),this.setOutputData(this.outError,!1,!0),this.setOutputData(this.outMessageJson,t[0]+":"+t[1]+" is up.",!0),e.destroy()}).on("error",e=>{this.setOutputData(this.outError,!0,!0),this.setOutputData(this.outStatus,!1,!0),this.setOutputData(this.outMessageJson,t[0]+":"+t[1]+" is down: "+e.message,!0)}).on("timeout",e=>{this.setOutputData(this.outError,!0,!0),this.setOutputData(this.outStatus,!1,!0),this.setOutputData(this.outMessageJson,t[0]+":"+t[1]+" is down: timeout",!0)}).connect(t[1],t[0])}onAfterSettingsChange(t){this.updateTitle(),super.onAfterSettingsChange(t),this.side===n.Side.server&&"tcp"===this.settings.transport.value&&this.ping()}subscribeMessage(t){this.setOutputData(0,!0,!0),this.setOutputData(1,!1,!0),this.setOutputData(2,null,!0)}subscribeError(t){null!==t&&(this.setOutputData(0,!1,!0),this.setOutputData(1,!0,!0),this.setOutputData(2,t,!0))}}n.Container.registerNodeType(r.MODBUS_RTU_DEVICE,d,r.MODBUS_RTU_NETWORK)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(9),o=i(49),u=i(73),d=i(4);class p extends s.Node{constructor(){super(),this.dynamicInputsExist=!1,this.dynamicSettingsExist=!1,this.dynamicInputStartPosition=0,this.dynamicMinInputs=0,this.nullableInputs=!0,this.dynamicOutputsExist=!1,this.dynamicInputsStartName="in",this.dynamicOutputsStartName="out",this.dynamicInputsType=a.Type.NUMBER,this.inAlarmTrigger=0,this.inHistoryTrigger=1,this.inInput=2,this.outVal=0,this.outError=1,this.outModbusMessage=2,this.outMessageJson=3,this.outAlarm=3,this.outArray=4,this.title="Modbus Point",this.description="## Description\n  This node is used as a modbus device point.\n  The points for the device will be added inside the device node (right click and **open** on the network node to add the device and points) \n    \n ## Point Address\n    \n ### Coils\n    \n  Valid Coil range is between 0 and 10001. This will allow any modbus client to read and write to those coli ranges\n    \n ### Holding Register\n    \n  Valid Holding Register range is between 10001 and 19999. This will allow any modbus client to read and write to those coli ranges\n    \n ## Enable\n    \n  This will enable/disable the point from polling \n    \n ",this.addInput("[name]",a.Type.STRING),this.addOutput("output",a.Type.NUMBER),this.addOutput("error",a.Type.STRING),this.addOutput("output-msg",a.Type.STRING),this.addOutput("output json",a.Type.STRING),this.addOutput("output-modbus-array",a.Type.STRING),this.properties.pointVal=null,this.properties.address=0,this.settings.pointEnable={description:"Point enable",value:!1,type:s.SettingType.BOOLEAN},this.settings.value_group={description:"Point settings",value:"",type:s.SettingType.GROUP},this.addInputWithSettings("input",a.Type.NUMBER,0,"point write value",!1),this.settings.valOffset={description:"Out value offset",value:1e3,type:s.SettingType.NUMBER},this.settings.valPrecision={description:"Out value precision",value:0,type:s.SettingType.NUMBER},this.settings.units_group={description:"Units (Save to get units)",type:s.SettingType.GROUP},this.settings.unitsType={description:"Units",type:s.SettingType.DROPDOWN,config:{items:o.default.unitCategory}},this.settings.units={description:"Units",value:o.default.COMMON_METRIC.NO_UNITS,type:s.SettingType.DROPDOWN},this.settings.math_group={description:"Math settings",value:"",type:s.SettingType.GROUP},this.settings.mathFunc={description:"Math on output value (optional)",type:s.SettingType.DROPDOWN,config:{items:[{value:u.MATH_FUNC_TYPE.NA,text:"na"},{value:u.MATH_FUNC_TYPE.ADD,text:"add"},{value:u.MATH_FUNC_TYPE.SUBTRACT,text:"subtract"},{value:u.MATH_FUNC_TYPE.MULTIPLY,text:"multiply"},{value:u.MATH_FUNC_TYPE.DIVIDE,text:"divide"},{value:u.MATH_FUNC_TYPE.BOOL_INVERT,text:"bool invert"},{value:u.MATH_FUNC_TYPE.ONE_TO_TRUE,text:"convert 1/0 to true/false"},{value:u.MATH_FUNC_TYPE.TRUE_TO_ONE,text:"convert true/false to 1/0"}]},value:u.MATH_FUNC_TYPE.NA},this.settings.mathValue={description:"Enter a value",value:1,type:s.SettingType.NUMBER},this.settings.modbus_group={description:"Modbus point settings",value:"",type:s.SettingType.GROUP},this.settings.pointType={description:"Select a point type",value:1,type:s.SettingType.DROPDOWN,config:{items:[{value:1,text:"Read Coil's"},{value:2,text:"readDiscreteInput's"},{value:3,text:"readHoldingRegister's"},{value:4,text:"readInputRegister's"},{value:5,text:"writeCoil"},{value:6,text:"writeRegister"},{value:16,text:"writeRegister's"}]}},this.addInputWithSettings("address",a.Type.NUMBER,1,"Register address",!1),this.settings.pointTimeout={description:"Point Timeout (MS)",value:1e3,type:s.SettingType.NUMBER},this.settings.offset={description:"Register offset",value:1,type:s.SettingType.NUMBER},this.settings.dataType={description:"Set data type",type:s.SettingType.DROPDOWN,config:{items:[{value:0,text:"na"},{value:1,text:"INT-16"},{value:2,text:"UINT-16"},{value:3,text:"INT-32"},{value:4,text:"UINT-32"},{value:5,text:"FLOAT-32"},{value:8,text:"DOUBLE-64"}]},value:0},this.settings.dataEndian={description:"Set byte order",type:s.SettingType.DROPDOWN,config:{items:[{value:0,text:"LE-Byte BE-Word"},{value:1,text:"LE-Byte LE-Word"},{value:2,text:"BE-Byte LE-Word"},{value:3,text:"BE-Byte BE-Word"}]},value:0},this.setSettingsConfig({groups:[{address:{},offset:{},pointTimeout:{}},{dataType:{},dataEndian:{}},{pointLimitEnable:{},limitLow:{},limitHigh:{}},{mathFunc:{},mathValue:{}},{valOffset:{},valPrecision:{}}],conditions:{offset:t=>{const e=t.pointType.value;return![5,6].includes(e)},dataType:t=>{const e=t.pointType.value;return![1,2,5,15].includes(e)},dataEndian:t=>{const e=t.pointType.value;return![1,2,5,15].includes(e)}}})}onCreated(){this.updateTitle()}onAdded(){this.side===n.Side.server&&(this.onInputUpdated(),this.updateTitle())}updateTitle(){let t=this.getInputData(1);this.title=`Modbus Point (FC: ${this.settings.pointType.value}, AD: ${t})`,this.broadcastSettingsToClients()}onInputUpdated(){let t=this.settings.pointType.value;if([5,6,15,16,25,26].includes(t)){const t=this.getInputData(1);if(d.isNull(t))return;this.setOutputData(this.outModbusMessage,`write val ${t}`),t!==this.lastInputState?(this.properties.pointVal=t,this.persistProperties(!1,!0),this.lastInputState=t):void 0===this.lastInputState&&(this.lastInputState=t)}if(this.inputs[2].updated){const t=this.getInputData(2);d.isNull(t)?(this.properties.address=0,this.persistProperties(!1,!0)):(this.properties.address=t,this.persistProperties(!1,!0))}if(this.inputs[0].updated){let t=this.getInputData(0);d.isNull(t)||(this.name=t,this.broadcastNameToClients())}}onAfterSettingsChange(){const t=this.getInputData(2);d.isNull(t)?(this.properties.address=0,this.persistProperties(!1,!0)):(this.properties.address=t,this.persistProperties(!1,!0)),this.onInputUpdated(),this.updateTitle()}sendJson(t){return{name:this.name,pointValue:t,enable:this.settings.pointEnable.value,address:this.settings.address.value,offset:this.settings.offset.value,pointType:this.settings.pointType.value}}subscribe(t){let e=this.settings.pointType.value;if(this.setOutputData(this.outArray,t.res.data),this.setOutputData(this.outError,!1,!0),[5,6,15,16,25,26].includes(e))"writeOk"===t.payload?(this.setOutputData(this.outVal,this.properties.pointVal),this.setOutputData(this.outMessageJson,this.sendJson(this.properties.pointVal))):(this.setOutputData(this.outModbusMessage,"write fail",!0),this.setOutputData(this.outMessageJson,null));else{const e=this.settings.mathFunc.value,i=this.settings.mathValue.value;let s;0!==e?u.default.validateNumbers(t.payload,i)&&(s=u.default.mathSwitch(e,t.payload,i),this.setOutputData(this.outVal,s),this.setOutputData(this.outMessageJson,this.sendJson(s))):"number"==typeof t.payload?(this.setOutputData(this.outVal,t.payload),this.setOutputData(this.outMessageJson,this.sendJson(t.payload))):"boolean"==typeof t.payload&&(this.setOutputData(this.outVal,t.payload?1:0),this.setOutputData(this.outMessageJson,this.sendJson(t.payload?1:0)))}}subscribeError(t){this.setOutputData(this.outError,!0,!0),this.setOutputData(this.outModbusMessage,t,!0)}}e.ModbusPointNode=p,n.Container.registerNodeType(r.MODBUS_RTU_POINT,p,r.MODBUS_RTU_DEVICE)},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(14),a=i(0),r=i(2),o=i(1),u=i(310),d=i(311),p=i(9),l=i(3),h=i(11),c=i(83);var g,y;!function(t){t[t.DO_NOT_INIT=0]="DO_NOT_INIT",t[t.FIRST_START=1]="FIRST_START",t[t.STOP=2]="STOP"}(g||(g={})),function(t){t.TCP="tcp",t.RTU="rtu"}(y||(y={}));class m extends n.ContainerNode{constructor(t){super(t),this.rs485DeviceName="ttyUSB1",this.isPortOk=!1,this.isPortInUse=!1,this.serialPortStatus=!1,this.pollEnableSetting=!1,this.client=null,this.tcpClients={},this.outStatus=0,this.outError=1,this.outPortStatus=2,this.outPortMsg=3,this.outMessageJson=4,this.title="Modbus 485 Network",this.description="## Description\n  This node is used as a modbus TCP or RTU(rs485) modbus network.\n  The device and points for the device will be added inside this node (right click and **open** on the network node to add the device and points) \n    \n ### Enable\n    \n  This will enable/disable the network from polling \n    \n ",this.addOutput("status",o.Type.BOOLEAN),this.addOutput("error",o.Type.STRING),this.addOutput("port status",o.Type.STRING),this.addOutput("port messages",o.Type.STRING),this.addOutput("message",o.Type.STRING),this.settings.networkEnable={description:"Network enable",value:!1,type:r.SettingType.BOOLEAN},this.settings.devicePolling={description:"Polling time setting in ms",value:2e3,type:r.SettingType.NUMBER},this.settings.registerDelay={description:"Polling delay between each register in ms",value:30,type:r.SettingType.NUMBER},this.settings.transport={description:"TCP or RTU/RS485",type:r.SettingType.DROPDOWN,config:{items:[{value:y.RTU,text:"Modbus RTU over Serial 485"},{value:y.TCP,text:"Modbus TCP/IP"}]},value:y.RTU},this.setSettingsConfig({groups:[{port:{},baudRate:{}},{parity:{},dataBits:{},stopBits:{}},{devicePolling:{},registerDelay:{}}],conditions:{port:t=>t.transport.value===y.RTU,baudRate:t=>t.transport.value===y.RTU,parity:t=>t.transport.value===y.RTU,dataBits:t=>t.transport.value===y.RTU,stopBits:t=>t.transport.value===y.RTU}}),this.settings.port={description:"port",type:r.SettingType.DROPDOWN,config:{items:[{value:"/dev/ttyUSB0",text:"ttyUSB0"},{value:"/dev/ttyUSB1",text:"ttyUSB1"},{value:"/dev/ttyUSB2",text:"ttyUSB2"},{value:"/dev/ttyUSB3",text:"ttyUSB3"},{value:"/dev/ttyUSB4",text:"ttyUSB4"}]},value:"/dev/ttyUSB0"},this.settings.baudRate={description:"Baud Rate",type:r.SettingType.DROPDOWN,config:{items:[{value:115200,text:"115200"},{value:57600,text:"57600"},{value:38400,text:"38400"},{value:19200,text:"19200"},{value:9600,text:"9600"}]},value:9600},this.settings.parity={description:"Parity",type:r.SettingType.DROPDOWN,config:{items:[{value:"none",text:"none"},{value:"even",text:"even"},{value:"mark",text:"mark"},{value:"odd",text:"odd"},{value:"space",text:"space"}]},value:"none"},this.settings.dataBits={description:"Data Bits",type:r.SettingType.DROPDOWN,config:{items:[{value:8,text:"8"},{value:7,text:"7"},{value:6,text:"6"},{value:5,text:"5"}]},value:8},this.settings.stopBits={description:"Stop Bits",type:r.SettingType.DROPDOWN,config:{items:[{value:2,text:"2"},{value:1.5,text:"1.5"},{value:1,text:"1"}]},value:1}}static getDevicesPoints(t,e){return s(this,void 0,void 0,(function*(){let i=[],s=yield u.default.getDevice(p.MODBUS_RTU_DEVICE,t,e);for(let t of s){let s=yield u.default.getPoints(p.MODBUS_RTU_POINT,t,e);i.push(s)}return i}))}onAdded(){const t=Object.create(null,{onAdded:{get:()=>super.onAdded}});return s(this,void 0,void 0,(function*(){t.onAdded.call(this);let e={nodeId:this.id,cid:this.container.id,sub_id:this.sub_container.id};this.setOutputData(this.outMessageJson,e),yield this.setupForPolling()}))}onCreated(){super.onCreated(),this.side,a.Side.server}onRemoved(){const t=Object.create(null,{onRemoved:{get:()=>super.onRemoved}});return s(this,void 0,void 0,(function*(){t.onRemoved.call(this),yield this.polling(g.STOP),this.client&&this.client.close(()=>{}),Object.keys(this.tcpClients).forEach(t=>{this.tcpClients[t]&&this.tcpClients[t].close(()=>{})})}))}onAfterSettingsChange(t){super.onAfterSettingsChange(t),setTimeout(()=>s(this,void 0,void 0,(function*(){yield this.setupForPolling()})))}polling(t){return s(this,void 0,void 0,(function*(){if(this.poll=t,this.side===a.Side.server){if(this.poll===g.STOP)return this.setOutputData(this.outPortMsg,"INFO: closed port connection"),this.setOutputData(this.outStatus,!1,!0),void(this.client&&this.client.close(()=>{}));this.transport===y.RTU?(this.client&&this.client.close(()=>{}),this.client=new c,this.client.setTimeout(500),setTimeout(()=>{this.client.connectRTUBuffered(this.port,{baudRate:this.baudRate,parity:this.parity,dataBits:this.dataBits,stopBits:this.stopBits}).catch(()=>{this.setOutputData(this.outStatus,!1,!0),this.setOutputData(this.outError,!0,!0),this.setOutputData(this.outPortMsg,`ERROR! port: ${this.port.substring(5)}`)}),this.setOutputData(this.outStatus,!0,!0),this.setOutputData(this.outPortMsg,"INFO: polling RS485 ")},500)):this.setOutputData(this.outPortMsg,"INFO: polling TCP "),this.poll===g.FIRST_START&&(yield this.pollDevicesPoints())}}))}pollDevicesPoints(){return s(this,void 0,void 0,(function*(){if(this.poll===g.STOP)return;const t=yield m.getDevicesPoints(this.sub_container.id,this.container.db);let e=!1;for(let i of t){let{deviceCID:t,deviceID:s,deviceAddress:n,ipAddress:a,ipPort:r,deviceAddressOffset:o}=i.deviceObj;const p=h.default._nodes[h.default.getId(t,s)];if(!p)return;let g=i.points,m=this.client,f=[];if(this.transport===y.TCP){const t=this.getTcpKey(a,r);if(f.push(t),this.tcpClients[t]||(this.debugInfo(`Creating tcpClient with IP: ${a} and Port: ${r}`),this.tcpClients[t]=new c),!this.tcpClients[t].isOpen){this.debugInfo(`Connecting tcpClient with IP: ${a} and Port: ${r}`);try{yield this.tcpClients[t].connectTCP(a,{port:r}),this.tcpClients[t].setTimeout(5e3)}catch(t){e=!0,u.default.sendDeviceError(p,t),this.setOutputData(this.outError,t);continue}}m=this.tcpClients[t]}Object.keys(this.tcpClients).forEach(t=>{f.includes(t)||this.tcpClients[t].close(()=>{})});let v=!1;for(let t of g){const{pntAddr:i,pntType:s,pntOffset:a,pntVal:r,pntCid:c,pntId:g,pntDataType:y,pntDataEndian:f}=t;yield l.default.sleep(this.registerDelay||50);const v=h.default._nodes[h.default.getId(c,g)];if(!v)return;try{const t=yield d.default.modbusMethods(m,n,s,i,a,r,y,f,o);u.default.sendPointMessage(v,t),u.default.sendDeviceMessage(p,t)}catch(t){e=!0,this.setOutputData(this.outError,t),u.default.sendDeviceError(p,t),u.default.sendPointError(v,t)}}e||u.default.sendDeviceError(p,null),e=e||v}e?(this.setOutputData(this.outStatus,!1,!0),this.setOutputData(this.outError,!0,!0)):(this.setOutputData(this.outStatus,!0,!0),this.setOutputData(this.outError,null,!0)),yield l.default.sleep(this.devicePolling||2e3),yield this.pollDevicesPoints()}))}setupForPolling(){return s(this,void 0,void 0,(function*(){this.side===a.Side.server&&(this.networkEnable=this.settings.networkEnable.value,this.port=this.settings.port.value,this.baudRate=this.settings.baudRate.value,this.parity=this.settings.parity.value,this.dataBits=this.settings.dataBits.value,this.stopBits=this.settings.stopBits.value,this.devicePolling=this.settings.devicePolling.value,this.registerDelay=this.settings.registerDelay.value,this.transport=this.settings.transport.value,this.networkEnable?this.pollEnableSetting?yield this.polling(g.DO_NOT_INIT):(this.pollEnableSetting=!0,yield this.polling(g.FIRST_START)):(this.pollEnableSetting=!1,yield this.polling(g.STOP)))}))}getTcpKey(t,e){return`${t}:${e}`}}a.Container.registerNodeType(p.MODBUS_RTU_NETWORK,m)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{static sendPointMessage(t,e){t.subscribe&&t.subscribe(e)}static sendPointError(t,e){t.subscribeError&&t.subscribeError(e)}static sendDeviceError(t,e){t.subscribeError&&t.subscribeError(e)}static sendDeviceMessage(t,e){t.subscribeMessage&&t.subscribeMessage(e)}static getDevice(t,e,i){return new Promise((s,n)=>{let a={type:t,cid:e,"settings.deviceEnable.value":!0};i.getNodeByQuery(a,(t,e)=>{let i=[];if(t)n(t);else{try{e.forEach(t=>{const{cid:e,id:s,sub_container:n,settings:a}=t;i.push({deviceCID:e,deviceID:s,deviceSubCID:n.id,deviceAddress:a.address.value,ipAddress:a.ipAddress.value,ipPort:a.ipPort.value,deviceTimeout:a.deviceTimeout.value,deviceAddressOffset:a.deviceAddressOffset.value})})}catch(t){n(t)}s(i)}})})}static getPoints(t,e,i){return new Promise((s,n)=>{let a={type:t,cid:e.deviceSubCID,"settings.pointEnable.value":!0};i.getNodeByQuery(a,(t,i)=>{let a=[];if(!t){try{i.forEach(t=>{const{cid:e,id:i,settings:s,properties:n}=t;a.push({pntCid:e,pntId:i,pntAddr:n.address,pntType:s.pointType.value,pntOffset:s.offset.value,pntMathFunc:s.mathFunc.value,pntMathValue:s.mathValue.value,pntDataType:s.dataType.value,pntDataEndian:s.dataEndian.value,pntTimeout:s.pointTimeout.value,pntVal:n.pointVal})})}catch(t){n(t)}s({deviceObj:e,points:a})}})})}}},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(3),a=i(44),r=i(4);class o{static readBool(t){return t.data[0]}static nubeAnalogueRead(){return[2,2]}static dataTypeCase(t){switch(t){case 1:case 2:return 1;case 3:case 4:case 5:return 2;case 8:return 4}}static pntSwitch(t,e,i,n,u,d){return s(this,void 0,void 0,(function*(){let s=null,p=null;try{return 1===t?(s="readCoils",p=[e,i]):21===t?(s="readCoils",p=[e,1]):2===t?(s="readDiscreteInputs",p=[e,i]):22===t?(s="readDiscreteInputs",p=[e,1]):3===t?(s="readHoldingRegisters",p=0!==u?[e,o.dataTypeCase(u)]:[e,i]):23===t?(s="readHoldingRegisters",p=[e,2]):4===t?(s="readInputRegisters",p=0!==u?[e,o.dataTypeCase(u)]:[e,i]):24===t?(s="readInputRegisters",p=[e,2]):5===t||25===t?(s="writeCoil",1!==n&&0!==n||(p=[e,n])):6===t?(s="writeRegister",r.isNumeric(n)&&(p=[e,n])):16===t&&(s="writeRegisters",r.isNumeric(n)&&(p=[e,a.default.writeValue(n,u,d)])),{funcType:s,methodType:p}}catch(t){console.log(`buffer readValue issue in modus-point-methods. Buffer.alloc ${t}`)}}))}}e.default=o,o.modbusMethods=(t,e,i,r,u,d,p,l,h)=>s(void 0,void 0,void 0,(function*(){let s=r-h;s<0&&(s=0);let c=yield o.pntSwitch(i,s,u,d,p,l);return yield t.setID(e),yield n.default.sleep(5),yield new Promise((s,n)=>{t[c.funcType](...c.methodType).then(t=>{if(3===i||4===i)if([0].includes(p))s({res:t,payload:t.data[0]});else{const e=a.default.readByteOrder(t.buffer,0,p,l);s({res:t,payload:e})}else if(1===i||2===i||21===i||22===i){const e=o.readBool(t);s({res:t,payload:e})}else if(23===i||24===i){let e=o.nubeAnalogueRead();const i=a.default.readByteOrder(t.buffer,0,e[0],e[1]);s({res:t,payload:i})}else 5!==i&&6!==i&&16!==i&&25!==i&&26!==i||t&&s({res:t,payload:"writeOk"})}),setTimeout(()=>{n(`Fail to execute > id: ${e}, FC: ${c.funcType}, regAddr: ${r}, length: ${u} , writeVal: ${d}`)},1e3)})}))},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(54),n=i(0),a=i(2),r=i(1),o=i(3),u=i(17),d=i(8),p=i(4),l=i(85);class h extends a.Node{constructor(){super(),this.topicsCount=0,this.messageQueue=[],this.rateLimitMS=200,this.title="MQTT client",this.description="This node connects to an MQTT Broker, subscribes to topics, and can publish values to topics.  Once configured (in settings) with a valid ‘Broker URL’, ‘Broker Port’, and ‘Authentication’ (if required), this node will read and write to MQTT topics when ‘enable’ is ‘true’.  Number of topics, and the topic names can be configured from settings. Each topic will have a corresponding input and output. ",this.addInput("[enable]",r.Type.BOOLEAN),this.addOutput("connected",r.Type.BOOLEAN),this.settings.enable={description:"Enable",value:!1,type:a.SettingType.BOOLEAN},this.settings.broker_group={description:"Broker settings",value:"",type:a.SettingType.GROUP},this.settings.broker_group={description:"Broker settings",value:"",type:a.SettingType.GROUP},this.settings.useEnv={description:"Dont use env settings",value:!1,type:a.SettingType.BOOLEAN},this.settings.server={description:"Broker URL",value:"0.0.0.0",type:a.SettingType.STRING},this.settings.port={description:"Broker port",value:"1883",type:a.SettingType.STRING},this.settings.authentication={description:"Use Authentication",value:!1,type:a.SettingType.BOOLEAN},this.settings.username={description:"User name",value:"",type:a.SettingType.STRING},this.settings.password={description:"Password",value:"",type:a.SettingType.PASSWORD},this.settings.topics_group={description:"Topic settings",value:"",type:a.SettingType.GROUP},this.settings.topics_count={description:"Number of Topics",value:1,type:a.SettingType.NUMBER},this.settings.decimals={description:"Decimal Places (Numerics)",type:a.SettingType.DROPDOWN,config:{items:[{value:0,text:"0"},{value:1,text:"1"},{value:2,text:"2"},{value:3,text:"3"},{value:4,text:"4"},{value:5,text:"5"},{value:6,text:"6"},{value:7,text:"7"},{value:8,text:"8"},{value:9,text:"9"},{value:10,text:"10"}]},value:3},this.setSettingsConfig({groups:[{server:{weight:3},port:{weight:1}},{useEnv:{},authentication:{}},{username:{},password:{}},{topics_count:{},decimals:{}}],conditions:{server:t=>!!t.useEnv.value,port:t=>!!t.useEnv.value,authentication:t=>!!t.useEnv.value,username:t=>!!t.authentication.value,password:t=>!!t.authentication.value}})}init(){this.changeTopicsCount(this.settings.topics_count.value)}onCreated(){this.renameInputsOutputs()}onAdded(){this.EXECUTE_INTERVAL=200,this.topicsCount=this.settings.topics_count.value,this.side==n.Side.server&&(this.setOutputData(0,!1),!this.settings.enable.value||null!=this.inputs[0].link&&1!=this.inputs[0].data||this.connectToBroker())}connectToBroker(){let{protocol:t,host:e,port:i,username:n,password:a}=d.default.mqtt,r={};if(this.settings.useEnv.value)null!=this.settings.server.value&&""!=this.settings.server.value&&(r.host=this.settings.server.value),null!=this.settings.port.value&&""!=this.settings.port.value&&(r.port=this.settings.port.value),null!=this.settings.username.value&&""!=this.settings.username.value&&(r.username=this.settings.username.value),null!=this.settings.password.value&&""!=this.settings.password.value&&(r.password=u.default.decrypt(this.settings.password.value));else{if(p.isNull(e))return;if(p.isNull(i))return;r.host=e,r.port=i,!0===this.settings.authentication.value&&(p.isNull(r.username)||(r.username=n),p.isNull(r.password)||(r.password=u.default.decrypt(a)))}this.client=s.connect(r),this.client.on("connect",()=>{this.setOutputData(0,!0);for(let t=1;t<=this.topicsCount;t++){let e=this.settings["topic"+t].value;e&&""!=e&&this.client.subscribe(e)}}),this.client.on("close",()=>{this.setOutputData(0,!1),this.setOutputData(1,null)}),this.client.on("error",t=>{this.debugWarn(t)}),this.client.on("message",(t,e)=>{let i={topic:t,message:e.toString()};this.messageQueue.push(i)})}disconnectFromBroker(){this.client&&this.client.end()}onInputUpdated(){if(this.inputs[0].updated&&(0==this.inputs[0].data?this.disconnectFromBroker():!this.settings.enable.value||null!=this.inputs[0].link&&1!=this.inputs[0].data||this.connectToBroker()),this.settings.enable.value&&this.client&&this.client.connected)for(let t=1;t<this.getInputsCount();t++){let e=this.inputs[t].data;if(e&&this.inputs[t].updated){let i,s=!0;try{e=JSON.parse(e)}catch(t){console.log("Not a valid JSON"),s=!1}let n="";s&&e.hasOwnProperty("topic")&&typeof e.topic===r.Type.STRING&&e.hasOwnProperty("payload")?(n=JSON.stringify(e.payload),this.client.publish(e.topic,""+n)):(i=this.settings["topic"+t].value,n=s?JSON.stringify(e):String(e),this.client.publish(i,""+n))}}}onAfterSettingsChange(){let t=this.settings.topics_count.value;t=o.default.clamp(t,1,100),this.settings.topics_count.value=t,this.topicsCount!=t&&this.changeTopicsCount(t),this.renameInputsOutputs(),this.container.db&&this.container.db.updateNode(this.id,this.container.id,{$set:{inputs:this.inputs,outputs:this.outputs,settings:this.settings}}),this.side==n.Side.server&&(this.disconnectFromBroker(),this.settings.enable.value&&this.connectToBroker())}changeTopicsCount(t){let e=t-this.topicsCount;if(0!=e){if(this.changeInputsCount(t+1,r.Type.STRING),this.changeOutputsCount(t+1,r.Type.STRING),e>0)for(let e=this.topicsCount+1;e<=t;e++){this.settings["outputType"+e]={description:"Output Type",type:a.SettingType.DROPDOWN,config:{items:[{value:!1,text:"Payload"},{value:!0,text:"JSON"}]},value:!1},this.settings["topic"+e]={description:"Topic "+e,value:"",type:a.SettingType.STRING};for(let e=this.topicsCount+1;e<=t;e++)this.settingConfigs.groups.push({[`outputType${e}`]:{weight:2},[`topic${e}`]:{weight:5}})}else if(e<0)for(let e=this.topicsCount;e>t;e--)delete this.settings["topic"+e],this.settingConfigs.groups.pop();this.topicsCount=t}}renameInputsOutputs(){for(let t=1;t<=this.topicsCount;t++){let e=this.settings["topic"+t].value;e.length>20&&(e="..."+e.substr(e.length-20,20)),this.inputs[t].name=t+" | "+e,this.outputs[t].name=e+" | "+t}if(this.side==n.Side.editor){for(let t=1;t<=this.topicsCount;t++)this.inputs[t].label=this.inputs[t].name,this.outputs[t].label=this.outputs[t].name;this.setDirtyCanvas(!0,!0)}}onExecute(){this.messageQueue&&this.messageQueue.length>0&&this.processQueue(this.messageQueue.shift())}setMQTTOutput(t,e){if(this.settings["outputType"+e].value)this.setOutputData(e,{topic:t.topic,payload:t.message});else{let i=Number(t.message);if(isNaN(i))return void this.setOutputData(e,t.message);this.setOutputData(e,o.default.toFixedNumber(i,this.settings.decimals.value).toString())}}processQueue(t){for(let e=1;e<=this.topicsCount;e++)l(this.settings["topic"+e].value,t.topic)&&this.setMQTTOutput(t,e)}}n.Container.registerNodeType("protocols/mqtt/client",h)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(54),n=i(0),a=i(2),r=i(1),o=i(17),u=i(8),d=i(4),p=i(85);class l extends a.Node{constructor(){super(),this.inName=0,this.inEnable=1,this.inData=2,this.inTopic=3,this.enableDebug=!1,this.title="MQTT Single Topic client",this.description='## Description\n This node connects to an MQTT Broker, subscribes to topics, and can publish values to topics. .\n Once configured (in settings) with a valid ‘Broker URL’, ‘Broker Port’, and ‘Authentication’ (if required), .\n this node will read and write to MQTT topics when ‘enable’ is ‘true’.  .\n Each topic will have a corresponding input and output. .\n    \n ### Enable\n    \n  This will enable/disable the device from broker \n    \n ### Use env settings\n    \n  If set to true this will allow you to use the MQTT broker details set from the .env configuration file in the device\n  If set to false this will allow you to set the MQTT broker details manually\n    \n ### Node input\n    \n  The input named "input" can accept a json input or an mqtt payload to send when the topic is set in the node setting called "[topic]".\n  The input named "input" can accept a json payload input with the name, topic, and mqtt payload. See example below.\n  { "payload": 22, "topic": "my topic", "name": "my node node"}\n    \n ',this.addInput("[name]",r.Type.STRING),this.addInputWithSettings("enable",r.Type.BOOLEAN,!1,"enable broker"),this.addInputWithSettings("input",r.Type.STRING,"","JSON input or input value"),this.addInputWithSettings("topic",r.Type.STRING,"","enter topic if not used from input"),this.addOutput("connected",r.Type.BOOLEAN),this.addOutput("output",r.Type.ANY),this.addOutput("output-json",r.Type.JSON),this.settings.retain={description:"Retain message on publish",value:!0,type:a.SettingType.BOOLEAN},this.settings.qos={description:"MQTT Quality Of Service (QoS)",type:a.SettingType.DROPDOWN,config:{items:[{value:-1,text:"na"},{value:0,text:"QoS 0"},{value:1,text:"QoS 1"},{value:2,text:"QoS 2"}]},value:0},this.settings.broker_group={description:"Broker settings",value:"",type:a.SettingType.GROUP},this.settings.useEnv={description:"Dont use env settings",value:!1,type:a.SettingType.BOOLEAN},this.settings.server={description:"Broker URL",value:"0.0.0.0",type:a.SettingType.STRING},this.settings.port={description:"Broker port",value:"1883",type:a.SettingType.STRING},this.settings.authentication={description:"Use Authentication",value:!1,type:a.SettingType.BOOLEAN},this.settings.username={description:"User name",value:"",type:a.SettingType.STRING},this.settings.password={description:"Password",value:"",type:a.SettingType.PASSWORD},this.setSettingsConfig({groups:[{server:{weight:3},port:{weight:1}},{username:{},password:{}}],conditions:{server:t=>!!t.useEnv.value,port:t=>!!t.useEnv.value,authentication:t=>!!t.useEnv.value,username:t=>!!t.authentication.value,password:t=>!!t.authentication.value}})}onAdded(){this.EXECUTE_INTERVAL=200,this.side==n.Side.server&&(this.setOutputData(0,!1),!0===this.getInputData(this.inEnable)&&(this.connectToBroker(),this.enableDebug&&this.debugInfo("MQTT-CLIENT-SINGLE NODE: connect to Broker")))}connectToBroker(){let{host:t,port:e,username:i,password:n}=u.default.mqtt,a={};const p=this.settings.qos.value;if(-1!==p&&(a.qos=p),this.settings.useEnv.value)null!=this.settings.server.value&&""!=this.settings.server.value&&(a.host=this.settings.server.value),null!=this.settings.port.value&&""!=this.settings.port.value&&(a.port=this.settings.port.value),null!=this.settings.username.value&&""!=this.settings.username.value&&(a.username=this.settings.username.value),null!=this.settings.password.value&&""!=this.settings.password.value&&(a.password=o.default.decrypt(this.settings.password.value));else{if(d.isNull(t))return;if(d.isNull(e))return;a.host=t,a.port=e,!0===this.settings.authentication.value&&(d.isNull(a.username)||(a.username=i),d.isNull(a.password)||(a.password=o.default.decrypt(n)))}this.client=s.connect(a),this.client.on("connect",()=>{this.enableDebug&&this.debugInfo(`MQTT-CLIENT-SINGLE NODE: this.client = mqtt.connect options: ${JSON.stringify(a)}`),this.setOutputData(0,!0);let t=this.getInputData(this.inData),e=this.getInputData(this.inTopic);if(t||e){let i=!0;try{t=JSON.parse(t)}catch(t){this.enableDebug&&this.debugInfo("MQTT-CLIENT-SINGLE NODE: input isn't JSON"),i=!1}i&&t.hasOwnProperty("topic")&&typeof t.topic===r.Type.STRING?""!=t.topic&&(this.client.subscribe(t.topic),this.enableDebug&&this.debugInfo(`MQTT-CLIENT-SINGLE NODE:  subscribe on json topic ${t.topic}`)):""!=t.topic&&(this.enableDebug&&this.debugInfo(`MQTT-CLIENT-SINGLE NODE:  subscribe on node input topic ${e}`),this.client.subscribe(e))}}),this.client.on("close",()=>{this.setOutputData(0,!1)}),this.client.on("error",t=>{this.debugWarn(t)}),this.client.on("message",(t,e)=>{let i={topic:t,message:e.toString()};this.enableDebug&&this.debugInfo(`MQTT-CLIENT-SINGLE NODE:  this.client.on('message' ${JSON.stringify(i)}`),this.processMessage(i)})}disconnectFromBroker(){this.client&&this.client.end()}onInputUpdated(){if(this.inputs[this.inEnable].updated&&(!0===this.getInputData(this.inEnable)?(this.connectToBroker(),this.enableDebug&&this.debugInfo("MQTT-CLIENT-SINGLE NODE: connect to Broker")):!1===this.getInputData(this.inEnable)?(this.disconnectFromBroker(),this.enableDebug&&this.debugInfo("MQTT-CLIENT-SINGLE NODE: disconnect From Broker")):d.isNull(this.getInputData(this.inEnable))&&(this.onAfterSettingsChange(),this.enableDebug&&this.debugInfo("MQTT-CLIENT-SINGLE NODE: disconnect enable input from node"))),this.inputs[this.inName].updated){let t=this.getInputData(this.inName);d.isNull(t)||(this.name=t,this.broadcastNameToClients())}if(this.getInputData(this.inEnable)&&this.inputs[this.inTopic].updated&&(this.connectToBroker(),this.enableDebug&&this.debugInfo("MQTT-CLIENT-SINGLE NODE: node input topic updated")),this.getInputData(this.inEnable)&&this.client&&this.client.connected){let t=this.getInputData(this.inData);if(t&&this.inputs[this.inData].updated){let e,i=!0;try{t=JSON.parse(t)}catch(t){this.enableDebug&&this.debugInfo("MQTT-CLIENT-SINGLE NODE: input isn't JSON"),i=!1}let s="";if(i&&t.hasOwnProperty("topic")&&typeof t.topic===r.Type.STRING&&t.hasOwnProperty("payload")){if(s=JSON.stringify(t.payload),""==t.topic)return;this.settings.retain.value?this.client.publish(t.topic,""+s,{retain:!0}):this.client.publish(t.topic,""+s),this.enableDebug&&this.debugInfo(`MQTT-CLIENT-SINGLE NODE: publish on input topic from json ${t.topic}, '' + ${s}`)}else{if(e=this.getInputData(this.inTopic),s=i?JSON.stringify(t):String(t),""==e)return;this.settings.retain.value?this.client.publish(e,""+s,{retain:!0}):this.client.publish(e,""+s),this.enableDebug&&this.debugInfo(`MQTT-CLIENT-SINGLE NODE: publish on input topic from node input ${e}, '' + ${s}`)}}}}onAfterSettingsChange(){this.container.db&&this.container.db.updateNode(this.id,this.container.id,{$set:{inputs:this.inputs,outputs:this.outputs,settings:this.settings}}),this.side==n.Side.server&&(this.disconnectFromBroker(),this.getInputData(this.inEnable)&&(this.connectToBroker(),this.enableDebug&&this.debugInfo("MQTT-CLIENT-SINGLE NODE: connect to Broker from settings")))}processMessage(t){let e=this.getInputData(this.inTopic);p(e,t.topic)&&(this.setOutputData(1,t.message),this.setOutputData(2,t))}}n.Container.registerNodeType("protocols/mqtt/client-single",l)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(54),n=i(7).create("mqtt",{color:4});class a{constructor(t,e,i,s){this.connected=!1,this.options=t,this.callbackWhenConnected=e,this.callbackWhenOffline=i,this.callbackIncomingMessage=s}static init(t,e,i,s){return new a(t,e,i,s).start()}onClose(){n.debug(`MQTT Client ${this.clientId} closed`),this.connected=!1}onConnect(t){n.info(`MQTT Client ${this.clientId} connected ${JSON.stringify(t)}`),this.connected=!0,this.callbackWhenConnected&&this.callbackWhenConnected(this)}onDisconnect(){n.warn(`MQTT Client ${this.clientId} disconnected`),this.connected=!1,this.callbackWhenOffline&&this.callbackWhenOffline(this,"Unable connect to server")}onEnd(){n.info(`MQTT Client ${this.clientId} ended`),this.connected=!1,this.callbackWhenOffline&&this.callbackWhenOffline(this)}onError(t){n.error(`Error connection in MQTT Client ${this.clientId}`,t),this.stop()}onMessage(t,e,i){n.info(`MQTT Client '${this.clientId}' dispatch message on topic '${t}'`),this.callbackIncomingMessage({topic:t,message:e.toString()})}onOffline(){n.warn(`MQTT Client '${this.clientId}' is offline`),this.connected=!1,this.callbackWhenOffline&&this.callbackWhenOffline(this,"Unable connect to server")}onPacketReceive(t){var e;n.debug(`MQTT Client '${this.clientId}' receives packet '${null===(e=t)||void 0===e?void 0:e.cmd}'`)}onPacketSend(t){var e;n.debug(`MQTT Client '${this.clientId}' sends packet '${null===(e=t)||void 0===e?void 0:e.cmd}'`)}onReconnect(){n.info(`MQTT Client '${this.clientId}' reconnected`),this.callbackWhenConnected&&this.callbackWhenConnected(this)}start(){var t,e;return this.client=s.connect(this.options),this.client.on("connect",t=>this.onConnect(t)),this.client.on("close",()=>this.onClose()),this.client.on("disconnect",()=>this.onDisconnect()),this.client.on("end",()=>this.onEnd()),this.client.on("error",t=>this.onError(t)),this.client.on("offline",()=>this.onOffline()),this.client.on("packetreceive",t=>this.onPacketReceive(t)),this.client.on("packetsend",t=>this.onPacketSend(t)),this.client.on("message",(t,e,i)=>this.onMessage(t,e,i)),this.clientId=null===(e=null===(t=this.client)||void 0===t?void 0:t.options)||void 0===e?void 0:e.clientId,this}stop(){this.client&&this.client.end(!0)}isConnected(){return this.client&&this.connected}publish(t,e,i,s){this.isConnected()&&this.client.publish(t,e,i||{retain:!0},s)}subscribe(t,e,i){this.isConnected()&&(n.info(`MQTT Client '${this.clientId}' subscribe topic '${t}'...`),this.client.subscribe(t,e||{},i))}unsubscribe(t,e){this.isConnected()&&(n.info(`MQTT Client '${this.clientId}' unsubscribe topic '${t}'...`),t&&this.client.unsubscribe(t,e))}}e.DefaultMqttClient=a},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(29),n=i(4),a=i(35),r=i(0),o=i(2),u=i(1),d=i(11),p=i(36),l=i(34),h=i(316),c=i(55),g=i(86);class y extends(p.DependantConnectionNodeMixin(l.PointNodeMixin(o.Node))){constructor(){super(),this._iTopic="topic",this._sReqRes="enabledReqRes",this.title="MQTT Point",this.description="Mqtt Point Node includes MQTT publisher and subscriber inside. This node connects to an MQTT Broker, subscribes to a topic, and can publish values once we enable the node.",this.mixinEnableInputSetting(),this.mixinConnectionStatusOutput(),this.addInputWithSettings(this._iTopic,u.Type.STRING,"","MQTT Topic"),this.settings[this._sReqRes]={description:"Request Response mode",type:o.SettingType.BOOLEAN,value:!1},this.setSettingsConfig(this.mixinPointValueInputOutput())}flowHandler(){return this}listener(){return a.MockCentralizedListener.cast(this.getParentNode())}pointObservers(){return[...super.pointObservers(),...l.MockHasPointOutputObservers.cast(this.getParentNode()).pointObservers()]}notifyOutput(t,e){var i,r;if(n.isNull(t))return;let o=this.initializePointBySettingObject();t.pointValue=n.isNull(null===(i=t)||void 0===i?void 0:i.pointValue)?s.PointValueCreator.by():t.pointValue.merge(null===(r=o)||void 0===r?void 0:r.pointValue),this.settings[this.modelSettingKey()].value=t,new a.DefaultObservable(e).notify({point:t,connStatus:{status:this.getConnectionStatus()}})}onRemoved(){if(this.listener()===a.MockCentralizedListener.LISTENER)return;let t=this.initializePointBySettingObject();t&&this.listener().listen({action:c.UNREGISTER_MQTT_POINT,payload:this.createMqttPointStoreItem(t)})}reEvaluateSettingByInput(t,e){e[this._iTopic].value=t[this.topicInputIdx()].updated?t[this.topicInputIdx()].data:e[this._iTopic].value,super.reEvaluateSettingByInput(t,e)}handleOnUpdate(t,e){var i,a,r,o,u,d,p;if(!(null===(i=e)||void 0===i?void 0:i.mqttTopic)&&!(null===(a=t)||void 0===a?void 0:a.mqttTopic))return null;if(n.isEmpty(t.mqttTopic))throw new Error("Must define MQTT topic");let l=this.createMqttPointStoreItem(t);if(n.isNull(e)||this.getConnectionStatus().isError()?this.listener().listen({action:c.REGISTER_MQTT_POINT,payload:l}):t.mightOnlyValueChanged(e)||(t.equals(e)||(t.pointValue=s.PointValueCreator.by()),l.publisher.prev=this.createMqttPointStoreItem(e),l.subscriber.prev=this.createMqttPointStoreItem(e),this.listener().listen({action:c.UPDATE_MQTT_POINT,payload:l})),!t.enabled||n.isNull(null===(o=null===(r=t)||void 0===r?void 0:r.pointValue)||void 0===o?void 0:o.presentValue)&&(e&&!t.equals(e)||n.isNull(null===(d=null===(u=e)||void 0===u?void 0:u.pointValue)||void 0===d?void 0:d.presentValue)))return t;if(t.isReqRes)return this.listener().listen({action:c.PUBLISH_MQTT_DATA,payload:l.toPublisher()});let h=t.pointValue.changedOfValue(null===(p=e)||void 0===p?void 0:p.pointValue);return h&&(l.publisher.data.pointValue=h),this.listener().listen({action:c.PUBLISH_MQTT_DATA,payload:l.toPublisher()})}initializePointBySettingInput(t){let e=null!=t?t:this.settings;return h.SillyMqttPoint.by(h.MqttPointCreator.by(this.isEnabled(),e[this._iTopic].value,this.createPointValue(e)),this.settings[this._sReqRes].value)}initializePointBySettingObject(t){let e=null!=t?t:this.settings;return h.SillyMqttPoint.by(h.MqttPointCreator.from(e[this.modelSettingKey()].value),this.settings[this._sReqRes].value)}onConvertMessage(t){var e;return h.MqttPointValue.by(null===(e=t)||void 0===e?void 0:e.pointValue).toString()}onReceiveMessage(t){let e=h.MqttPointValue.parse(t).to(),i=this.initializePointBySettingObject();i.pointValue=e.merge(i.pointValue),this.settings[this._sReqRes].value&&this.listener().listen({action:c.PUBLISH_MQTT_DATA,payload:this.createMqttPointStoreItem(i).toPublisher()}),this.notifyOutput(this.settings[this.modelSettingKey()].value=i,this.pointObservers())}statusOutputIdx(){return 0}modelSettingKey(){return"mqttp"}valueInputIdx(){return 2}valueOutputIdx(){return 2}presentValueType(){return u.Type.ANY}computeTitle(){return`MQTT Point (Topic: ${this.settings[this._iTopic].value})`}enableDescription(){return"Enable MQTT Point"}topicInputIdx(){return 1}createMqttPointStoreItem(t){var e;return new g.MqttPointStoreItem(t.identifier(),d.default.getId(this.cid,this.id),null===(e=t)||void 0===e?void 0:e.enabled,{identifier:t.publishedTopic(),data:t,callback:t=>this.onConvertMessage(t)},{identifier:t.subscribedTopic(),callback:t=>this.onReceiveMessage(t)})}}r.Container.registerNodeType("protocols/mqtt/mqtt-point",y,c.MQTT_CLIENT_NODE)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(29),n=i(4);class a{constructor(){}}e.MqttPointCreator=a,a.from=t=>{var e,i,r,o,u,d;if(n.isNull(t))return null;let p=null===(e=t)||void 0===e?void 0:e.pointValue;return a.by(null===(i=t)||void 0===i?void 0:i.enabled,null===(r=t)||void 0===r?void 0:r.mqttTopic,s.PointValueCreator.create(null===(o=p)||void 0===o?void 0:o.presentValue,null===(u=p)||void 0===u?void 0:u.priority,null===(d=p)||void 0===d?void 0:d.priorityArray))},a.by=(t,e,i)=>new r(t,e,i);class r{constructor(t,e,i){this.enabled=t||!1,this.mqttTopic=e,this.pointValue=i}identifier(){return this.mqttTopic}mightOnlyValueChanged(t){var e,i;return this.enabled===(null===(e=t)||void 0===e?void 0:e.enabled)&&this.mqttTopic===(null===(i=t)||void 0===i?void 0:i.mqttTopic)}equals(t){var e;return this.identifier()===(null===(e=t)||void 0===e?void 0:e.identifier())}}class o{constructor(t,e){this.value=t,this.priority=e}static by(t){var e,i,s;return new o(null===(e=t)||void 0===e?void 0:e.presentValue,null!=(s=null===(i=t)||void 0===i?void 0:i.priority)?s:16)}static parse(t){var e,i;try{let s=n.isJSON(t)?t:JSON.parse(t);return new o(null===(e=s)||void 0===e?void 0:e.value,null===(i=s)||void 0===i?void 0:i.priority)}catch(t){throw new Error("Invalid JSON when parsing MQTTMessage")}}to(){return s.PointValueCreator.init(this.value,this.priority)}toString(){return JSON.stringify(this)}}e.MqttPointValue=o;class u extends r{constructor(t,e){super(t.enabled,t.mqttTopic,t.pointValue),this.isReqRes=!1,this.isReqRes=e}mightOnlyValueChanged(t){var e;return super.mightOnlyValueChanged(t)&&this.isReqRes===(null===(e=t)||void 0===e?void 0:e.isReqRes)}subscribedTopic(){return this.isReqRes?`${this.mqttTopic}/req`:this.mqttTopic}publishedTopic(){return this.isReqRes?`${this.mqttTopic}/res`:this.mqttTopic}}e.SillyMqttPoint=u,u.by=(t,e)=>n.isNull(t)?null:new u(t,e)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(4),n=i(35),a=i(0),r=i(2),o=i(1),u=i(11),d=i(78),p=i(36),l=i(55);class h extends(p.DependantConnectionNodeMixin(function(t){class e extends(d.AbleEnableNode(t)){constructor(){super(...arguments),this._iTopic="topic"}onAdded(){this.side===a.Side.server&&(this.handleOnUpdate(this.createPayload()),this.updateTitle())}onAfterSettingsChange(t,e){this.side===a.Side.server&&(this.handleOnUpdate(this.createPayload(),this.createPayload(t)),this.updateTitle())}onInputUpdated(){if(this.side!==a.Side.server)return;let t=this.createPayload();this.reEvaluateSettingByInput(this.inputs,this.settings),this.handleOnUpdate(this.createPayload(),t),this.updateTitle()}onRemoved(){this.listener()!==n.MockCentralizedListener.LISTENER&&this.listener().listen({action:this.unregisterAction(),payload:this.createPayload()})}reEvaluateSettingByInput(t,e){e[this._iTopic].value=t[this.topicInputIdx()].updated?t[this.topicInputIdx()].data:e[this._iTopic].value,s.isFunction(super.reEvaluateSettingByInput)&&super.reEvaluateSettingByInput(t,e)}listener(){return n.MockCentralizedListener.cast(this.getParentNode())}mixinMqttTopicInputSetting(){this.addInputWithSettings(this._iTopic,o.Type.STRING,"","MQTT Topic")}handleOnUpdate(t,e){var i,n;if((null===(i=e)||void 0===i?void 0:i.identifier)||(null===(n=t)||void 0===n?void 0:n.identifier)){if(s.isEmpty(t.identifier))throw new Error("Must define MQTT topic");this.shouldRegister(e)?this.listener().listen({action:this.registerAction(),payload:t}):t.identifier===e.identifier&&t.enabled===e.enabled||(t.prev=e,this.listener().listen({action:this.updateAction(),payload:t})),this.doAfterUpdate(t,e)}}createPayload(t){var e,i;let s=null===(e=(null!=t?t:this.settings).topic)||void 0===e?void 0:e.value,n=t?null===(i=t[this.enableSettingKey()])||void 0===i?void 0:i.value:this.isEnabled();return{identifier:s,nodeId:u.default.getId(this.cid,this.id),enabled:n}}shouldRegister(t){return!t||!t.identifier}}return e}(r.Node))){constructor(t,e){super(),this._title=this.title=t,this.description=e,this.mixinEnableInputSetting(),this.mixinConnectionStatusOutput(),this.mixinMqttTopicInputSetting()}statusOutputIdx(){return 0}enableDescription(){return`Enable ${this._title}`}updateTitle(){this.title=`${this._title} (${this.settings.topic.value})`}topicInputIdx(){return 1}shouldRegister(t){return super.shouldRegister(t)||this.getConnectionStatus().isError()}handleError(t,e){super.handleError(t,e)}}a.Container.registerNodeType("protocols/mqtt/mqtt-subscriber",class extends h{constructor(){super("MQTT Subscriber","MQTT Subscriber Node is used for generic purpose"),this.addOutput("out",o.Type.ANY)}onReceiveMessage(t){this.setOutputData(this.errorOutputIdx()+1,t)}registerAction(){return l.REGISTER_MQTT_SUBSCRIBER}updateAction(){return l.UPDATE_MQTT_SUBSCRIBER}unregisterAction(){return l.UNREGISTER_MQTT_SUBSCRIBER}createPayload(t){let e=super.createPayload(t);return e.callback=t=>this.onReceiveMessage(t),e}doAfterUpdate(t,e){}},l.MQTT_CLIENT_NODE),a.Container.registerNodeType("protocols/mqtt/mqtt-publisher",class extends h{constructor(){super("MQTT Publisher","MQTT Publisher Node is used to publish MQTT message for generic purpose"),this.addInputWithSettings("is-json",o.Type.BOOLEAN,!1,"MQTT Message is JSON type"),this.addInputWithSettings("message",o.Type.ANY,"","MQTT Message")}onConvertMessage(t){var e;return s.isJSON(t)?JSON.stringify(t):null===(e=t)||void 0===e?void 0:e.toString()}reEvaluateSettingByInput(t,e){super.reEvaluateSettingByInput(t,e),this.settings["is-json"].value=this.inputs[2].updated?this.inputs[2].data:this.settings["is-json"].value,this.settings.message.value=this.inputs[3].updated?this.inputs[3].data:this.settings.message.value}registerAction(){return l.REGISTER_MQTT_PUBLISHER}updateAction(){return l.UPDATE_MQTT_PUBLISHER}unregisterAction(){return l.UNREGISTER_MQTT_PUBLISHER}createPayload(t){let e=super.createPayload(t);return e.callback=t=>this.onConvertMessage(t),e.data=this.settings.message.value,e}doAfterUpdate(t,e){var i,n,a,r;if(s.isEmpty(null===(i=t)||void 0===i?void 0:i.data)&&((null===(n=e)||void 0===n?void 0:n.identifier)&&t.identifier!==e.identifier||s.isEmpty(null===(a=e)||void 0===a?void 0:a.data)))return t;if(null===(r=t)||void 0===r?void 0:r.enabled){if(this.settings["is-json"].value&&!s.isJSON(t.data))try{t.data=s.isEmpty(t.data)?{}:JSON.parse(t.data)}catch(e){throw this.debug(e),new Error(`Payload is invalid JSON in MQTT publisher on topic ${t.identifier}`)}return this.listener().listen({action:l.PUBLISH_MQTT_DATA,payload:t})}}},l.MQTT_CLIENT_NODE)},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(2),a=i(0),r=i(19),o=i(26),u=i(1),d=i(17);class p extends n.Node{constructor(){super(),this.title="MQTT Broker",this.description=".",this.addInput("ping broker",u.Type.STRING),this.addOutput("status",u.Type.STRING),this.addOutput("error",u.Type.STRING),this.addOutput("debug",u.Type.STRING),this.settings.enable={description:"Broker enable",value:!1,type:n.SettingType.BOOLEAN},this.settings.authentication={description:"Use Authentication",value:!1,type:n.SettingType.BOOLEAN},this.settings.username={description:"User name",value:"",type:n.SettingType.STRING},this.settings.password={description:"Password",value:"",type:n.SettingType.PASSWORD},this.setSettingsConfig({groups:[{enable:{},authentication:{}},{username:{},password:{}}],conditions:{username:t=>!!t.authentication.value,password:t=>!!t.authentication.value}}),this.properties.useAuthentication}onRemoved(){return s(this,void 0,void 0,(function*(){yield this.stopBroker().then(t=>{console.log(t)}).catch(t=>{console.log(t)})}))}onInputUpdated(){if(this.side!==a.Side.server)return;const t=this.settings.username.value,e=this.settings.password.value,i={username:t,password:d.default.decrypt(e)};console.log("password",i),this.statusBroker().then(t=>{this.setOutputData(0,t),this.setOutputData(1,!1)}).catch(t=>{this.setOutputData(0,!1),this.setOutputData(1,!0)})}onAfterSettingsChange(){const t=this.settings.enable.value;t?(this.startBroker().then(t=>{this.onInputUpdated()}).catch(t=>{this.setOutputData(0,!1),this.setOutputData(1,!0)}),this.checkAuthentication()):!1===t&&this.stopBroker().then(t=>{this.onInputUpdated()}).catch(t=>{this.onInputUpdated()})}stopBroker(){return new Promise((t,e)=>{r.exec("sudo systemctl stop mosquitto",(i,s,n)=>{i?e({err:i,stderr:n}):t(s)})})}statusBroker(){return new Promise((t,e)=>{r.exec("ps -A | grep -i mosquitto | grep -v grep",(i,s,n)=>{i?e(!1):t(!0)})})}startBroker(){return new Promise((t,e)=>{r.exec("sudo systemctl start mosquitto",(i,s,n)=>{i?(console.log(i),e({err:i,stderr:n})):t(s)})})}checkAuthentication(){const t="/etc/mosquitto/",e="MQTTPasswords.txt";if(this.settings.authentication.value&&!this.properties.useAuthentication){this.properties.useAuthentication=this.settings.authentication.value;const i=this.settings.username.value,s=this.settings.password.value;if(!i||!s)return this.setOutputData(1,"Invalid Credentials"),void this.debugErr("Invalid Credentials");const n="sudo mosquitto_passwd -U "+t+e;o.writeFile(t+e,i+":"+s,i=>{if(i)return this.setOutputData(1,i),void this.debugErr(i);try{r.exec(n,(t,e,i)=>e?(this.setOutputData(1,e),void this.debugErr(e)):t?(this.setOutputData(1,t),void this.debugErr(t)):i?(this.setOutputData(1,i),void this.debugErr(i)):void 0),o.readFile(t+"mosquitto.conf",(i,s)=>{if(i)return this.setOutputData(1,i),void this.debugErr(i);let n=s.toString("utf8");this.setOutputData(2,n);const a=n.indexOf("allow_anonymous ");if(a>=0){const t=n.slice(a,a+22);let e=t.split(" ");"true"==e[1]&&(e[1]="false"),n.replace(t,e[0]+" "+e[1]+"       \n")}else n+="\nallow_anonymous true     \n";const u=n.indexOf("password_file ");if(u>=0){const i=n.slice(u,u+50);let s=i.split(" ");s[1]!==t+e&&(s[1]=t+e,n=n.replace(i,s[0]+" "+s[1]+"       \n"))}else n+="\npassword_file /etc/mosquitto/MQTTPasswords.txt     \n";o.writeFile(t+"mosquitto.conf",n,t=>{if(t)return this.setOutputData(1,t),void this.debugErr(t)}),r.exec("sudo systemctl restart mosquitto",(t,e,i)=>e?(this.setOutputData(1,e),void this.debugErr(e)):t?(this.setOutputData(1,t),void this.debugErr(t)):i?(this.setOutputData(1,i),void this.debugErr(i)):void 0)})}catch(t){return this.setOutputData(1,t),void this.debugErr(t)}})}else!this.settings.authentication.value&&this.properties.useAuthentication&&(this.properties.useAuthentication=this.settings.authentication.value,o.unlink(t+e,t=>{if(t)return this.setOutputData(2,t),void this.debugErr(t)}),o.readFile(t+"mosquitto.conf",(e,i)=>{if(e)return this.setOutputData(1,e),void this.debugErr(e);let s=i.toString("utf8");this.setOutputData(2,s);const n=s.indexOf("allow_anonymous ");if(n>=0){const t=s.slice(n,n+22);let e=t.split(" ");"false"==e[1]&&(e[1]="true"),s=s.replace(t,e[0]+" "+e[1]+"   ")}else s+="\nallow_anonymous false     \n";o.writeFile(t+"mosquitto.conf",s,t=>{if(t)return this.setOutputData(1,t),void this.debugErr(t)}),r.exec("sudo systemctl restart mosquitto",(t,e,i)=>e?(this.setOutputData(1,e),void this.debugErr(e)):t?(this.setOutputData(1,t),void this.debugErr(t)):i?(this.setOutputData(1,i),void this.debugErr(i)):void 0)}))}}a.Container.registerNodeType("protocols/mqtt-broker/mqtt-broker",p)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="MQTT topic extractor",this.description="## Description\n  The is node is used to extract sections out of an MQTT topic\n ## Settings\n  Index will let you select the part of the topic that you want to extract ***topic/abc/123*** \n  For example if the ***topic*** = ***topic/abc/123***  and ***index*** = 1 the the node ***output*** will = ***abc*** \n ## Inputs\n  The input data must be a sting and in a topic format like ***topic/abc/123*** \n ## Outputs\n  ***output*** will return the ***index*** selection \n  ***output-all*** (Returns an array) will return all the topic parts\n  For example if the ***topic*** = ***topic/abc/123***  the  ***output-all*** will return ***[topic, abc, 123]***\n ",this.addInput("input",a.Type.STRING),this.addInputWithSettings("index",a.Type.NUMBER,0,"Index",!1),this.addOutput("output",a.Type.STRING),this.addOutput("output-all",a.Type.JSON)}onAdded(){this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(0),e=this.getInputData(1);if(null!=t&&null!=e){const i=t.split("/");this.setOutputData(0,i[e],!0),this.setOutputData(1,i,!0)}else this.setOutputData(0,null,!0),this.setOutputData(1,null,!0)}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("protocols/mqtt/mqtt-topic-extractor",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(6),a=i(1);class r extends n.FlexibleNode{constructor(){super(),this.dynamicInputsType=a.Type.STRING,super.dynamicInputsStartName="string",this.title="MQTT Topic Builder",this.description="This node takes String inputs and concatenates/joins them with '/' to produce an MQTT Topic 'output'.   The number of inputs can be modified from settings.",this.addOutput("output",a.Type.STRING),this.setOutputData(0,null)}onAdded(){this.size=this.computeSize(),this.onInputUpdated()}onInputUpdated(){const t=this.getInputsCount();let e="";for(let i=this.dynamicInputStartPosition;i<t;i++){const t=(this.getInputData(i)||"").toString();""!=t&&(""!=e&&(e=e.concat("/")),e=e.concat(t))}this.setOutputData(0,e,!0)}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("protocols/mqtt/topic-builder",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(322),o=i(4),u=i(87);class d extends s.Node{constructor(){super(),this.baudRates=[110,300,600,1200,2400,4800,9600,14400,19200,38400,57600,115200,128e3,256e3],this.isConnected=!1,this.port=null,this.title="Serial Connector",this.description="## Description\n  This node reads/writes serial data from/to the onboard serial ports.  These ports can be RS485 ports, or Rubix Compute wireless interface ports.  Once the Port and Baud Rate settings are configured, when enabled, the ‘output’ will be raw messages received over the configured serial port.  Any values written to the ‘writeValue’ input will be sent on the configured serial port.\n    \n ## Nube LoRa Raw Baud Rate\n  Default Baud Rate For Nube LoRa Raw is ***38400*** \n ",this.addInput("writeValue",a.Type.STRING),this.addInput("enable",a.Type.BOOLEAN),this.addInput("list-ports",a.Type.BOOLEAN),this.addOutput("output",a.Type.STRING),this.addOutput("error",a.Type.STRING),this.addOutput("status",a.Type.BOOLEAN),this.addOutput("last-message",a.Type.STRING),this.addOutput("active-ports",a.Type.BOOLEAN),this.settings.manualPort={description:"Enter port manually",value:!1,type:s.SettingType.BOOLEAN},this.settings.port={description:"Serial Port",value:"/dev/ttyUSB2",type:s.SettingType.DROPDOWN,config:{items:[{value:"/dev/ttyUSB2",text:"RS485-1 (/dev/ttyUSB2)"},{value:"/dev/ttyUSB3",text:"RS485-2 (/dev/ttyUSB3)"},{value:"/dev/ttyUSB1",text:"Xbee-1 (/dev/ttyUSB1)"},{value:"/dev/ttyUSB0",text:"Xbee-2 (/dev/ttyUSB0)"},{value:"/dev/ttyAMA0",text:"Xbee-3 (/dev/ttyAMA0)"},{value:"/dev/ttyUSB4",text:"USB Port (/dev/ttyUSB4)"},{value:"/dev/ttyS1",text:"Edge28 Expansion (/dev/ttyS1)"}]}},this.settings.manualPortNum={description:"Enter port number",value:"/dev/ttyACM0",type:s.SettingType.STRING},this.settings.baudRate={description:"Baud rate",value:this.baudRates[6],type:s.SettingType.DROPDOWN,config:{items:this.baudRates.map(t=>({value:t,text:t}))}},this.setOutputData(0,null),this.setOutputData(1,!1),this.setOutputData(2,null),this.setSettingsConfig({conditions:{manualPortNum:t=>t.manualPort.value,port:t=>!t.manualPort.value}})}onInputUpdated(){if(this.isConnected){if(this.isConnected&&!this.getInputData(1))return this.isConnected=!1,this.clearOutputs(),void this.closePort()}else this.connectToSerialPort();this.writePortData(this.getInputData(0)),!0===this.getInputData(2)&&this.listPorts()}onAfterSettingsChange(){this.connectToSerialPort()}onRemoved(){this.closePort()}connectToSerialPort(){if(this.side!==n.Side.server)return;if(this.clearOutputs(),this.closePort(),!this.getInputData(1))return;let t=this.settings.port.value;const e=this.settings.manualPort.value,i=this.settings.manualPortNum.value;e&&(t=e===o.isNull?t:i);let s=this.settings.baudRate.value;if(!t)return this.debugErr("Port name is not defined!"),void this.setOutputData(1,"Port name is not defined!");this.port=new u(t,{baudRate:s,autoOpen:!1}),this.port.on("open",()=>{this.isConnected=!0,this.setOutputData(2,this.isConnected),this.debugInfo("Port connected")}),this.port.on("error",t=>{this.port=null,this.isConnected=!1,this.setOutputData(1,t.message),this.setOutputData(2,this.isConnected),this.debugErr(t.message)}),this.port.on("close",()=>{this.debugInfo(this.isConnected?"Port closed. Gateway disconnected.":"Port closed"),this.isConnected=!1,this.setOutputData(2,this.isConnected)}),this.port.on("disconnect",()=>{this.isConnected=!1,this.setOutputData(2,this.isConnected),this.debugInfo("Disconnected")});const a=u.parsers.Readline;this.port.pipe(new a({delimiter:"\n"})).on("data",t=>this.readPortData(t)),this.debugInfo("Connecting to "+t+" at "+s+"..."),this.port.open()}clearOutputs(){this.setOutputData(0,null),this.setOutputData(1,null),this.setOutputData(2,!1)}listPorts(){r.default.listPorts().then(t=>{this.setOutputData(4,t)}).catch(t=>{this.setOutputData(4,t)})}closePort(){this.port&&this.port.close(),this.port=null}readPortData(t){this.setOutputData(0,t),this.setOutputData(3,this.formattedExecutionTime())}writePortData(t){if(t){try{t=Buffer.from(JSON.parse(t))}catch(t){}try{this.port.write(t)}catch(t){this.setOutputData(1,t.message)}}}}n.Container.registerNodeType("protocols/misc/serial-connector",d)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(87);e.default=class{static listPorts(){return new Promise((t,e)=>{try{let e=[];s.list().then(i=>{i.forEach(t=>{e.push(t)}),t(e)})}catch(t){e(t)}})}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(88),o=i(12);class u extends s.Node{constructor(){super(),this.daysArray=["sunday","monday","tuesday","wednesday","thursday","friday","saturday"],this.title="Weekly Schedule",this.description="Weekly Schedule",this.addOutput("output",a.Type.BOOLEAN),this.settings.enable={description:"Schedule Enable",value:!0,type:s.SettingType.BOOLEAN},this.settings.stringScheduleName={description:"Schedule Name",value:"",type:s.SettingType.STRING},this.settings.timezone={description:"TIMEZONE: Enter the timezone",value:o.tz.guess(),type:s.SettingType.STRING},this.settings.startHour={description:"Start Time",value:7,type:s.SettingType.DROPDOWN,config:{items:this.makeHoursDropdown()}},this.settings.startMin={description:"",value:0,type:s.SettingType.DROPDOWN,config:{items:this.makeMinsDropdown()}},this.settings.endHour={description:"End Time",value:19,type:s.SettingType.DROPDOWN,config:{items:this.makeHoursDropdown()}},this.settings.endMin={description:"",value:0,type:s.SettingType.DROPDOWN,config:{items:this.makeMinsDropdown()}},this.settings.sunday={description:"sunday",value:!1,type:s.SettingType.BOOLEAN},this.settings.monday={description:"monday",value:!1,type:s.SettingType.BOOLEAN},this.settings.tuesday={description:"tuesday",value:!1,type:s.SettingType.BOOLEAN},this.settings.wednesday={description:"wednesday",value:!1,type:s.SettingType.BOOLEAN},this.settings.thursday={description:"thursday",value:!1,type:s.SettingType.BOOLEAN},this.settings.friday={description:"friday",value:!1,type:s.SettingType.BOOLEAN},this.settings.saturday={description:"saturday",value:!1,type:s.SettingType.BOOLEAN},this.settings.payload={description:"Schedule Payload",value:0,type:s.SettingType.NUMBER},this.setSettingsConfig({groups:[{startHour:{},startMin:{}},{endHour:{},endMin:{}}]})}onAdded(){this.onAfterSettingsChange()}onAfterSettingsChange(){var t={weekly:{},events:{}};if(!this.settings.enable.value)return t;const e=r.default.createUUID(),i=o.tz(this.settings.timezone.value).utcOffset(),s=Math.floor(i/60),n=i%60;var a=0,u=this.settings.startHour.value-s;u<0?(a=-1,u+=24):u>24&&(a=1,u-=24);var d=this.settings.startMin.value-n;d<0?d+=60:d>=60&&(d-=60);var p=this.settings.endHour.value-s;p<0?p+=24:p>24&&(p-=24);var l=this.settings.endMin.value-n;l<0?l+=60:l>=60&&(l-=60);const h=this.settings.sunday.value&&-1==a?7:0,c=this.settings.saturday.value&&1==a?-1:6;var g=[];this.settings.sunday.value&&g.push(this.daysArray[h+a]),this.settings.monday.value&&g.push(this.daysArray[1+a]),this.settings.tuesday.value&&g.push(this.daysArray[2+a]),this.settings.wednesday.value&&g.push(this.daysArray[3+a]),this.settings.thursday.value&&g.push(this.daysArray[4+a]),this.settings.friday.value&&g.push(this.daysArray[5+a]),this.settings.saturday.value&&g.push(this.daysArray[c+a]),t.weekly={[e]:{colour:"#FFFFFF",name:this.settings.stringScheduleName.value||"unknownSchedule",start:`${String(u).padStart(2,"0")}:${String(d).padStart(2,"0")}`,end:`${String(p).padStart(2,"0")}:${String(l).padStart(2,"0")}`,days:g,value:this.settings.payload.value,id:e}},this.setOutputData(0,t)}makeHoursDropdown(){for(var t=[],e=0;e<24;e++)t.push({value:e,text:String(e).padStart(2,"0")});return t}makeMinsDropdown(){for(var t=[],e=0;e<60;e++)t.push({value:e,text:String(e).padStart(2,"0")});return t}}n.Container.registerNodeType("schedule/weekly-schedule",u)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(6),a=i(1);class r extends n.FlexibleNode{constructor(){super(),this.dynamicSettingsExist=!1,this.dynamicInputsType=a.Type.STRING,this.title="Weekly Schedule",this.description="Weekly Schedule",this.addOutput("output",a.Type.BOOLEAN),this.addOutput("error",a.Type.STRING)}onAdded(){this.onAfterSettingsChange()}onInputUpdated(){for(var t,e,i={},s={},n=0;n<this.getInputsCount();n++)if(t=this.getInputData(n))try{for(var a in(e=JSON.parse(t)).weekly)i[a]=e.weekly[a];for(var r in e.events)i[r]=e.events[r];this.setOutputData(0,{weekly:i,events:s})}catch(t){this.setOutputData(1,t)}}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("schedule/schedule-merge",r)},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(12),a=i(2),r=i(0),o=i(1),u=i(326),d=i(5);class p extends a.Node{constructor(){super(),this.title="Schedule Checker (unconfigured)",this.description="This node checks the API-Schedule output string for active schedules that match the selected ‘Schedule Name’ setting.  ‘output’ will be ‘true’ when the matching schedule is active and ‘enable’ is ‘true’; otherwise ‘output’ will be ‘false’.  ‘nextStart’ is the timestamp output of the next scheduled start time.  ‘nextStop’ is the timestamp output of the next scheduled stop time.  ‘lastCheck’ is the timestamp output of the last time a schedule check was run.  ‘error’ output will be ‘true’ if there is an error while checking the schedule input string; otherwise ‘error’ will be false.  The frequency that schedules are checked can be modified with the ‘Schedule Check Interval’ setting (set in millis).  The ‘Timestamp Output Format’ setting can be adjusted to output timestamps as strings or as Epoch Timestamps.  String timestamps will be displayed in the timezone specified by the ‘Timezone’ setting.",this.addInputWithSettings("enable",o.Type.BOOLEAN,!0,"Enable",!1),this.addInput("schedules",o.Type.JSON),this.addOutput("output",o.Type.BOOLEAN),this.addOutput("payload",o.Type.BOOLEAN),this.addOutput("nextStart",o.Type.STRING),this.addOutput("nextStop",o.Type.STRING),this.addOutput("lastCheck",o.Type.STRING),this.addOutput("error",o.Type.STRING),this.settings.stringScheduleName={description:"Schedule Name",value:"",type:a.SettingType.STRING},this.settings.timezone={description:"TIMEZONE: Enter the timezone",value:n.tz.guess(),type:a.SettingType.STRING},this.settings.interval={description:"Schedule Check Interval (minimum 10 seconds)",value:30,type:a.SettingType.NUMBER},this.settings.time={description:"Units",type:a.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"seconds"},this.setSettingsConfig({groups:[{interval:{weight:2},time:{}}]}),this.settings.numericTimeFormat={description:"Timestamp Output Format",type:a.SettingType.DROPDOWN,config:{items:[{value:!1,text:"Timestamps as Strings"},{value:!0,text:"Timestamps as Epoch Numerics"}]},value:!1},this.nextStart=null,this.nextStop=null,this.schedulePayload=null,this.EXECUTE_INTERVAL=1e4}onAdded(){return s(this,void 0,void 0,(function*(){yield this.updateTitle(),yield this.onInputUpdated()}))}onInputUpdated(){return s(this,void 0,void 0,(function*(){if(this.side!==r.Side.server)return;let t=this.getInputData(1)||{weekly:{},events:{}};yield this.setOutput(t)}))}onExecute(){return s(this,void 0,void 0,(function*(){yield this.setOutput()}))}updateTitle(){return s(this,void 0,void 0,(function*(){null!=this.settings.stringScheduleName.value&&""!=this.settings.stringScheduleName.value?this.title=`Schedule Checker (${this.settings.stringScheduleName.value})`:this.title="Schedule Checker (unconfigured)",this.broadcastTitleToClients()}))}onAfterSettingsChange(){return s(this,void 0,void 0,(function*(){yield this.updateTitle();let t=this.settings.interval.value;t=d.default.timeConvert(t,this.settings.time.value),this.EXECUTE_INTERVAL=Math.max(t,1e4),yield this.onInputUpdated()}))}setOutput(t=null){return s(this,void 0,void 0,(function*(){this.nextStart=null,this.nextStop=null,this.schedulePayload=null,t||(t=this.getInputData(1)||{weekly:{},events:{}}),console.log("input1",t);const e=this.settings.stringScheduleName.value;if(console.log("key",e),null==e||""===e)return this.setOutputData(0,!1),this.setOutputData(1,null),this.setOutputData(2,null),this.setOutputData(3,null),this.setOutputData(4,n(this.executeLastTime).format("YYYY-MM-DDTHH:MM:ss")),void this.setOutputData(5,"Schedule Checker Error: invalid schedule selected");let i=this.settings.timezone.value;n.tz.zone(i)||(i=n.tz.guess());const s=n.tz(i);console.log("now",s.format());const a=this.getInputData(0);if(t&&e&&a){let n=!1,a=null;for(var r in t.weekly)t.weekly[r].name===e&&(a=u.ScheduleUtils.checkWeeklySchedule(t.weekly[r],s),n=a.scheduleStatus||n,this.schedulePayload=a.value||this.schedulePayload,null!=a.nextStop&&(null==this.nextStop||a.nextStop.isBefore(this.nextStop))&&(this.nextStop=a.nextStop),null!=a.nextStart&&(null==this.nextStart||a.nextStart.isBefore(this.nextStart))&&(this.nextStart=a.nextStart));let o=!1,d=null;for(var r in t.events)t.events[r].name===e&&(d=u.ScheduleUtils.checkEventsSchedule(t.events[r],s),o=d.scheduleStatus||o,this.schedulePayload=d.value||this.schedulePayload,null!=d.nextStop&&(d.nextStop.isBefore(this.nextStop)||null==this.nextStop)&&(this.nextStop=d.nextStop),null!=d.nextStart&&(d.nextStart.isBefore(this.nextStart)||null==this.nextStart)&&(this.nextStart=d.nextStart));const p=n||o;this.setOutputData(0,p),this.setOutputData(1,this.schedulePayload),null!=this.nextStart?this.settings.numericTimeFormat.value?this.setOutputData(2,this.nextStart.valueOf()):this.setOutputData(2,this.nextStart.tz(i).format()):this.setOutputData(2,null),null!=this.nextStop?this.settings.numericTimeFormat.value?this.setOutputData(3,this.nextStop.valueOf()):this.setOutputData(3,this.nextStop.tz(i).format()):this.setOutputData(3,null)}else this.setOutputData(0,!1),this.setOutputData(1,null),this.setOutputData(2,null),this.setOutputData(3,null);this.settings.numericTimeFormat.value?this.setOutputData(4,n(this.executeLastTime).valueOf()):this.setOutputData(4,n(this.executeLastTime).tz(i).format()),this.setOutputData(5,!1)}))}}e.ScheduleChecker=p,r.Container.registerNodeType("schedule/schedule-checker",p)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(12),n=i(3);e.ScheduleUtils=class{static checkEventsSchedule(t,e){if(t&&Object.prototype.hasOwnProperty.call(t,"dates")){let i=!1,n=null,a=null,r=null;for(let o=0;o<t.dates.length;o++){const u=e.clone().tz("Etc/UTC"),d=s.tz(t.dates[o].start,"Etc/UTC"),p=s.tz(t.dates[o].end,"Etc/UTC");u.isAfter(d)&&u.isBefore(p)?(i=!0,t&&Object.prototype.hasOwnProperty.call(t,"value")&&(r=t.value),(null==a||p.isBefore(a))&&(a=p)):u.isBefore(d)&&u.isBefore(p)&&((null==n||d.isBefore(n))&&(n=d),(null==a||p.isBefore(a))&&(a=p))}return{scheduleStatus:i,nextStart:n,nextStop:a,value:r}}return{scheduleStatus:!1,nextStart:null,nextStop:null,value:null}}static checkWeeklySchedule(t,e){let i=!1,a=null,r=null,o=null;if(t){const u=e.clone().tz("Etc/UTC");let d=t.days.map(t=>n.default.getISOday(t)),p=t.start.split(":").map(t=>Number(t)),l=t.end.split(":").map(t=>Number(t)),h=0;p[0]>l[0]&&(h=1);const c=u.format("YYYY-MM-DD");let g=d.map(e=>s.tz(`${c}T${t.start}:00.000Z`,"Etc/UTC").isoWeekday(e)),y=d.map(e=>s.tz(`${c}T${t.end}:00.000Z`,"Etc/UTC").isoWeekday(e+h));if(h)for(let t=0;t<y.length;t++)if(u.clone().add(1,"weeks").isBefore(y[t])){y[t].subtract(1,"weeks"),g[t].subtract(1,"weeks");break}if(g.every(t=>t.isBefore(u))&&y.every(t=>t.isBefore(u)))g.map(t=>t.add(1,"weeks")),y.map(t=>t.add(1,"weeks"));else if(g.every(t=>t.isBefore(u)))for(let t=0;t<y.length;t++)y[t].isBefore(u)&&(y[t].add(1,"weeks"),g[t].add(1,"weeks"));for(let e=0;e<g.length;e++)g[e].isBefore(u)&&y[e].isAfter(u)?(i=!0,t&&Object.prototype.hasOwnProperty.call(t,"value")&&(o=t.value),r=y[e],a=g[e].add(1,"weeks")):g[e].isAfter(u)&&(null==a||g[e].isBefore(a))&&(a=g[e]),y[e].isAfter(u)&&(null==r||y[e].isBefore(r))&&(r=y[e])}return{scheduleStatus:i,nextStart:a,nextStop:r,value:o}}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(1),a=i(3),r=i(20);class o extends r.default{constructor(){super(),this.title="Min-Max-Avg",this.description="Outputs the Minimum, Maximum, and Average values of all the (non null) Numeric inputs.  The number of inputs and their values can be modified from settings.",this.addOutput("Min",n.Type.NUMBER),this.addOutput("Max",n.Type.NUMBER),this.addOutput("Avg",n.Type.NUMBER)}onInputUpdated(){const t=this.getDefinedInputsOrSettingsValues(),e=Math.min.apply(Math,t),i=Math.max.apply(Math,t),s=t.length,n=a.default.sum(t)/s;this.setOutputData(0,e),this.setOutputData(1,i),this.setOutputData(2,n)}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("statistics/min-max-avg",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(1),a=i(3),r=i(20);class o extends r.default{constructor(){super(),this.title="Average",this.description="Outputs the Average, Count, and Sum values of all the (non null) Numeric inputs. The number of inputs and their values can be modified from settings.",this.addOutput("Avg",n.Type.NUMBER),this.addOutput("Count",n.Type.STRING),this.addOutput("Sum",n.Type.STRING)}onInputUpdated(){const t=this.getDefinedInputsOrSettingsValues(),e=t.length,i=a.default.sum(t);let s=0;0!==e&&(s=i/e),this.setOutputData(0,s),this.setOutputData(1,e),this.setOutputData(2,i)}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("statistics/avg",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(1),a=i(3),r=i(20);class o extends r.default{constructor(){super(),this.title="Min",this.description="Outputs the Minimum value of all the (non null) Numeric inputs. The number of inputs and their values can be modified from settings.",this.addOutput("min",n.Type.NUMBER)}onInputUpdated(){const t=this.getDefinedInputsOrSettingsValues(),e=a.default.stat.min(t);this.setOutputData(0,e)}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("statistics/min",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(1),a=i(3),r=i(20);class o extends r.default{constructor(){super(),this.title="Max",this.description="Outputs the Maximum value of all the (non null) Numeric inputs. The number of inputs and their values can be modified from settings.",this.addOutput("max",n.Type.NUMBER)}onInputUpdated(){const t=this.getDefinedInputsOrSettingsValues(),e=a.default.stat.max(t);this.setOutputData(0,e)}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("statistics/max",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(1),a=i(3),r=i(20);class o extends r.default{constructor(){super(),this.title="Sum",this.description="Outputs the Sum of all the (non null) Numeric inputs. The number of inputs and their values can be modified from settings.",this.addOutput("sum",n.Type.NUMBER)}onInputUpdated(){const t=this.getDefinedInputsOrSettingsValues(),e=a.default.stat.sum(t);this.setOutputData(0,e)}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("statistics/sum",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(1),a=i(3),r=i(20);class o extends r.default{constructor(){super(),this.title="Median",this.description="Outputs the Median value of all the (non null) Numeric inputs. The number of inputs and their values can be modified from settings.",this.addOutput("median",n.Type.NUMBER)}onInputUpdated(){const t=this.getDefinedInputsOrSettingsValues(),e=a.default.stat.median(t);this.setOutputData(0,e)}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("statistics/median",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(1),a=i(3),r=i(20);class o extends r.default{constructor(){super(),this.title="range",this.description="Outputs the Range value (max-min) of all the (non null) Numeric inputs. The number of inputs and their values can be modified from settings.",this.addOutput("range",n.Type.NUMBER)}onInputUpdated(){const t=this.getDefinedInputsOrSettingsValues(),e=a.default.stat.range(t);this.setOutputData(0,e)}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("statistics/range",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(6),r=i(1);class o extends a.FlexibleNode{constructor(){super(),this.dynamicOutputsExist=!0,this.dynamicSettingsExist=!1,this.dynamicInputsType=r.Type.NUMBER,super.dynamicOutputsType=r.Type.NUMBER,this.dynamicDefaultInputs=5,this.dynamicDefaultOutputs=3,this.title="Rank (Highest)",this.description="Outputs the ranked highest (max to min), or ranked lowest (min to max) of all the (non null) Numeric inputs.  The number of inputs and the number of outputs can be modified from settings.",this.settings.rank={description:"Highest or Lowest",type:s.SettingType.DROPDOWN,config:{items:[{value:"top",text:"Rank Highest"},{value:"bottom",text:"Rank Lowest"}]},value:"top"}}onAdded(){this.updateTitle(),this.onInputUpdated()}onInputUpdated(){let t=this.getDefinedInputValues();t=t.sort((t,e)=>t-e);const e=this.getOutputsCount();if("bottom"===this.settings.rank.value)for(let i=0;i<e;i++)this.setOutputData(i,t[i]);else for(let i=0;i<e;i++)this.setOutputData(i,t[t.length-(i+1)])}onAfterSettingsChange(){Number(this.settings.outputs.value)>Number(this.settings.inputs.value)&&(this.settings.outputs.value=Number(this.settings.inputs.value)),super.onAfterSettingsChange(),this.onInputUpdated(),this.updateTitle()}updateTitle(){"top"===this.settings.rank.value?this.title="Rank (Highest)":"bottom"===this.settings.rank.value&&(this.title="Rank (Lowest)")}}n.Container.registerNodeType("statistics/rank",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(1),a=i(3),r=i(20);class o extends r.default{constructor(){super(),this.title="all stats",this.description="Outputs the Maximum, Minimum, Range, Sum, Mean, Median, Modes, Variance, Standard Deviation, Mean Absolute Deviation, and Z Score values of all the (non null) Numeric inputs. The number of inputs and their values can be modified from settings.",this.addOutput("max",n.Type.NUMBER),this.addOutput("min",n.Type.NUMBER),this.addOutput("range",n.Type.NUMBER),this.addOutput("sum",n.Type.NUMBER),this.addOutput("mean",n.Type.NUMBER),this.addOutput("median",n.Type.NUMBER),this.addOutput("modes",n.Type.NUMBER),this.addOutput("variance",n.Type.NUMBER),this.addOutput("standardDeviation",n.Type.NUMBER),this.addOutput("meanAbsoluteDeviation",n.Type.NUMBER),this.addOutput("zScores",n.Type.NUMBER)}onInputUpdated(){const t=this.getDefinedInputsOrSettingsValues();this.setOutputData(0,a.default.stat.max(t)),this.setOutputData(1,a.default.stat.min(t)),this.setOutputData(2,a.default.stat.range(t)),this.setOutputData(3,a.default.stat.sum(t)),this.setOutputData(4,a.default.stat.mean(t)),this.setOutputData(5,a.default.stat.median(t)),this.setOutputData(6,a.default.stat.modes(t)),this.setOutputData(7,a.default.stat.variance(t)),this.setOutputData(8,a.default.stat.standardDeviation(t)),this.setOutputData(9,a.default.stat.meanAbsoluteDeviation(t)),this.setOutputData(10,a.default.stat.zScores(t))}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("statistics/stats-all",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.values=[],this.title="Stream Average",this.description="## Description\n  'output' is the average of all received Numeric 'input' value.  'output' is reset when 'reset' transitions from 'false' to 'true'. \n  ## Reset to null\n ***Reset to null*** if set to option true and a true value on the node ***reset*** this will reset the node ***output*** to a value of null, If set to false it will keep the last node ***output*** value \n ",this.addInput("value",a.Type.NUMBER),this.addInput("reset",a.Type.BOOLEAN),this.addOutput("output",a.Type.NUMBER),this.settings.null={description:"Reset to null",value:!1,type:s.SettingType.BOOLEAN},this.lastReset=!1}onInputUpdated(){const t=this.getInputData(1);let e=this.getInputData(0);const i=this.settings.null.value;if(t&&!this.lastReset)return void(i?(this.setOutputData(0,null),this.values=[],this.lastReset=t):(this.values=[],this.setOutputData(0,this.avg),this.lastReset=t));if(!t&&this.lastReset)return void(this.lastReset=t);if(null==e)return;this.values.push(e);let s=this.values.reduce((function(t,e){return t+e}))/this.values.length;this.avg=s,this.setOutputData(0,this.avg)}}n.Container.registerNodeType("streams/stream-average",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Stream Highest",this.description="## Description\n  'output' is the highest received Numeric 'input' value.  'output' is reset when 'reset' transitions from 'false' to 'true'. \n  ## Reset to null\n ***Reset to null*** if set to option true and a true value on the node ***reset*** this will reset the node ***output*** to a value of null, If set to false it will keep the last node ***output*** value \n ",this.addInput("input",a.Type.NUMBER),this.addInput("reset",a.Type.BOOLEAN),this.addOutput("output",a.Type.NUMBER),this.settings.null={description:"Reset to null",value:!1,type:s.SettingType.BOOLEAN},this.lastReset=!1,this.val=null}onInputUpdated(){const t=this.getInputData(1),e=this.settings.null.value;if(t&&!this.lastReset)return void(e?(this.setOutputData(0,null),this.val=null,this.lastReset=t):(this.setOutputData(0,this.val),this.val=null,this.lastReset=t));if(!t&&this.lastReset)return void(this.lastReset=t);let i=this.getInputData(0);null!=i&&(null==this.val||this.val<i)&&(this.val=i,this.setOutputData(0,this.val))}}n.Container.registerNodeType("streams/stream-highest",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Stream Lowest",this.description="## Description\n  'output' is the lowest received Numeric 'input' value.  'output' is reset when 'reset' transitions from 'false' to 'true'. \n  ## Reset to null\n ***Reset to null*** if set to option true and a true value on the node ***reset*** this will reset the node ***output*** to a value of null, If set to false it will keep the last node ***output*** value \n ",this.addInput("input",a.Type.NUMBER),this.addInput("reset",a.Type.BOOLEAN),this.addOutput("output",a.Type.NUMBER),this.settings.null={description:"Reset to null",value:!1,type:s.SettingType.BOOLEAN},this.val=null,this.lastReset=!1}onInputUpdated(){const t=this.getInputData(1),e=this.settings.null.value;if(t&&!this.lastReset)return void(e?(this.setOutputData(0,null),this.val=null,this.lastReset=t):(this.setOutputData(0,this.val),this.val=null,this.lastReset=t));if(!t&&this.lastReset)return void(this.lastReset=t);let i=this.getInputData(0);null!=i&&(null==this.val||this.val>i)&&(this.val=i,this.setOutputData(0,this.val))}}n.Container.registerNodeType("streams/stream-lowest",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.val=0,this.title="Stream Sum",this.description="## Description\n  output' is the sum of all received Numeric 'input' value.  'output' is reset to 0 when 'reset' transitions from 'false' to 'true'. \n  ## Reset to null\n ***Reset to null*** if set to option true and a true value on the node ***reset*** this will reset the node ***output*** to a value of null, If set to false it will keep the last node ***output*** value \n ",this.addInput("input",a.Type.NUMBER),this.addInput("reset",a.Type.BOOLEAN),this.addOutput("output",a.Type.NUMBER),this.settings.null={description:"Reset to null",value:!1,type:s.SettingType.BOOLEAN},this.lastReset=!1}onInputUpdated(){const t=this.getInputData(1),e=this.settings.null.value;!t||this.lastReset?t||!this.lastReset?(this.inputs[0].updated&&null!=this.inputs[0].data&&(this.val+=this.inputs[0].data),this.setOutputData(0,this.val,!0)):this.lastReset=t:e?(this.setOutputData(0,null),this.val=null,this.lastReset=t):(this.setOutputData(0,this.val),this.val=0,this.lastReset=t)}}n.Container.registerNodeType("streams/stream-sum",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(1),a=i(3),r=i(6);class o extends r.FlexibleNode{constructor(){super(),this.dynamicSettingsExist=!1,this.dynamicInputsType=n.Type.ANY,this.title="Stream Merge",this.description="This node merges multiple inputs into a single stream/output.  Any new 'input' ('in #') value will be passed to 'output'.  The number of inputs can be modified from settings.",this.addOutput("output",n.Type.ANY)}onAdded(){this.onInputUpdated(),this.size=this.computeSize()}onInputUpdated(){const t=this.getInputsCount();for(let e=this.dynamicInputStartPosition;e<t;e++){let t=this.getInputData(e);if(a.default.hasInput(t)&&this.inputs[e].updated)return void this.setOutputData(0,this.inputs[e].data)}}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("streams/stream-merge",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Message Gate",this.description="This node can allow(gate open) or block(gate close) the transfer of the 'input' to 'output'.  When 'open' is 'true', 'input' is passed to 'output'.  When 'open' is 'false', 'output' will maintain its last value.  If 'Send null when closed' setting is ticked, 'output' will be 'null' when 'open' is 'false'. ",this.addInput("input",a.Type.STRING),this.addInput("open",a.Type.BOOLEAN),this.addOutput("output",a.Type.STRING),this.settings["send-null"]={description:"Send null when closed",value:!1,type:s.SettingType.BOOLEAN}}onInputUpdated(){this.getInputData(1)?this.setOutputData(0,this.getInputData(0)):this.settings["send-null"].value&&null!=this.outputs[0].data&&this.setOutputData(0,null)}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("streams/gate",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.data=[],this.title="Stack",this.description="'input' values are stored in a list.  Stored 'input' values are passed to 'output' one by one each time 'trigger' transitions from 'false' to 'true'.  'input' values are passed to 'output' in a last-in, first-out order.  Stored 'input' values are deleted when 'clear' transitions from 'false' to 'true'. 'count' is the number of stored 'input' values. ",this.addInput("input"),this.addInput("trigger",a.Type.BOOLEAN),this.addInput("clear",a.Type.BOOLEAN),this.addOutput("output"),this.addOutput("count",a.Type.NUMBER),this.lastReset=!1}onInputUpdated(){const t=this.getInputData(2);if(t&&!this.lastReset)return this.data=[],this.setOutputData(0,null),this.setOutputData(1,0),void(this.lastReset=t);if(t||!this.lastReset){if(this.inputs[0].updated&&null!=this.inputs[0].data&&(this.data.push(this.inputs[0].data),this.setOutputData(1,this.data.length)),this.inputs[1].updated&&1==this.inputs[1].data){let t=this.data.length>0?this.data.pop():null;this.setOutputData(0,t),this.setOutputData(1,this.data.length)}}else this.lastReset=t}}n.Container.registerNodeType("streams/stack",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.data=[],this.title="Queue",this.description="'input' values are stored in a list.  Stored 'input' values are passed to 'output' one by one each time 'trigger' transitions from 'false' to 'true'.  'input' values are passed to 'output' in a first-in, first-out order.  Stored 'input' values are deleted when 'clear' transitions from 'false' to 'true'. 'count' is the number of stored 'input' values.",this.addInput("input"),this.addInput("trigger",a.Type.BOOLEAN),this.addInput("clear",a.Type.BOOLEAN),this.addOutput("output"),this.addOutput("count",a.Type.NUMBER),this.lastReset=!1}onInputUpdated(){const t=this.getInputData(2);if(t&&!this.lastReset)return this.data=[],this.setOutputData(0,null),this.setOutputData(1,0),void(this.lastReset=t);if(t||!this.lastReset){if(this.inputs[0].updated&&null!=this.inputs[0].data&&(this.data.unshift(this.inputs[0].data),this.setOutputData(1,this.data.length)),this.inputs[1].updated&&1==this.inputs[1].data){let t=this.data.length>0?this.data.pop():null;this.setOutputData(0,t),this.setOutputData(1,this.data.length)}}else this.lastReset=t}}n.Container.registerNodeType("streams/queue",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(5);class o extends s.Node{constructor(){super(),this.delayedValues=[],this.title="Stream Delay",this.description="‘input' values are passed to 'output' after a 'delay' period. Each 'input' value is delayed by the same 'delay' period. 'delay' units can be configured from settings. Maximum ‘delay’ setting is 587 hours.",this.addInput("input"),this.addInputWithSettings("delay",a.Type.NUMBER,1e3,"Delay (millis)",!1),this.addOutput("output"),this.settings.time={description:"Units",type:s.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"seconds"},this.setSettingsConfig({groups:[{delay:{weight:2},time:{}}]})}onAdded(){this.inputs[1].name=`[delay] (${this.settings.time.value})`}onAfterSettingsChange(){this.inputs[1].name=`[delay] (${this.settings.time.value})`}onInputUpdated(){this.inputs[0].updated&&this.delayedValues.push({val:this.inputs[0].data,time:Date.now()})}onExecute(){if(0==this.delayedValues.length)return;let t=this.getInputData(1);t=r.default.timeConvert(t,this.settings.time.value);const e=this.delayedValues[0];return Date.now()-e.time>=t?(this.delayedValues.shift(),void this.setOutputData(0,e.val)):void 0}}n.Container.registerNodeType("streams/stream-delay",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Stream Delay meter",this.description="This node measures the delay between the incoming events.  Any value sent to 'input' (excluding null) will be accepted.  'ms' output is the time between the lastest 'input', and the previous 'input'.   'ms' is reset when 'reset' transitions from 'false' to 'true'.  'ms' output is in millis.",this.addInput("input"),this.addInput("reset",a.Type.BOOLEAN),this.addOutput("ms",a.Type.NUMBER),this.lastReset=!1}onInputUpdated(){const t=this.getInputData(1);if(t&&!this.lastReset)return this.lastTime=null,this.setOutputData(0,null),void(this.lastReset=t);if(t||!this.lastReset){if(this.inputs[0].updated&&null!=this.inputs[0].data){if(null!=this.lastTime){let t=Date.now()-this.lastTime;this.setOutputData(0,t)}this.lastTime=Date.now()}}else this.lastReset=t}}n.Container.registerNodeType("streams/stream-delay-meter",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.count=0,this.countWas=0,this.title="Frequency meter",this.description="This node measures the frequency of the incoming 'input' events.  Any value sent to 'input' (excluding null) will be accepted.  'events/sec' output is the average rate received 'input' values.  'events/sec' is reset when 'reset' transitions from 'false' to 'true'.",this.addInput("input"),this.addInput("reset",a.Type.BOOLEAN),this.addOutput("events/sec",a.Type.NUMBER,void 0,{data:0}),this.lastReset=!1,setInterval(()=>{this.count!=this.countWas&&this.setOutputData(0,this.count),this.countWas=this.count,this.count=0},1e3)}onInputUpdated(){const t=this.getInputData(1);if(t&&!this.lastReset)return this.count=0,this.countWas=0,this.setOutputData(0,null),void(this.lastReset=t);t||!this.lastReset?this.count++:this.lastReset=t}}n.Container.registerNodeType("streams/frequency-meter",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3),o=i(4),u=i(69);class d extends s.Node{constructor(){super(),this.title="String Case Acronyms",this.description="This node will upper case any common HVAC Acronyms, For example it will Upper Fcu to FCU",this.addInput("input",a.Type.STRING),this.addOutput("output",a.Type.STRING)}onAdded(){this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(0);if(!r.default.hasInput(t))return void this.setOutputData(0,null,!0);if(o.isNull(t))return;let e,i=u.default.acronyms;if(o.isString(t)){for(let s in i)i[s].toLowerCase()===t.toLowerCase()&&(e=i[s].toUpperCase());this.setOutputData(0,e,!0)}}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("string/string-acronyms",d)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3),o=i(47);var u;!function(t){t.Equals="Equals",t.NotEquals="Not Equal",t.GreaterThanEqual="Greater Than Equal",t.GreaterThan="Greater Than",t.LessThanEqual="Less Than Equal",t.LessThan="Less Than",t.Includes="Includes",t.startsWith="Starts With",t.endsWith="Ends With"}(u||(u={}));class d extends s.Node{constructor(){super(),this.title="String Compare",this.description="This node provides several functions to compare 2 String inputs, with a Boolean 'output'.  Available comparison functions are: Equals, Includes, Starts With, and Ends With.  The comparison function is selected from settings.",this.addInput("input",a.Type.STRING),this.addInputWithSettings("comparison-to",a.Type.STRING,"","Comparison Value"),this.addOutput("match",a.Type.BOOLEAN),this.addOutput("output",a.Type.BOOLEAN),this.setOutputData(0,null),this.setOutputData(1,null),this.settings.function={description:"Comparison Type",type:s.SettingType.DROPDOWN,config:{items:[{value:u.Equals,text:u.Equals},{value:u.NotEquals,text:u.NotEquals},{value:u.GreaterThanEqual,text:u.GreaterThanEqual},{value:u.GreaterThan,text:u.GreaterThan},{value:u.LessThanEqual,text:u.LessThanEqual},{value:u.LessThan,text:u.LessThan},{value:u.Includes,text:u.Includes},{value:u.startsWith,text:u.startsWith},{value:u.endsWith,text:u.endsWith}]},value:u.Equals},this.settings.isNumber={description:"Comparison value is a number",value:!1,type:s.SettingType.BOOLEAN},this.settings.passNull={description:"Send null if not a match",value:!1,type:s.SettingType.BOOLEAN},this.settings.null={description:"Block null messages on input",value:!1,type:s.SettingType.BOOLEAN}}onAdded(){this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(0),e=this.getInputData(1),i=this.settings.null.value;r.default.hasInput(t)?(null!==t||i)&&(o.default.compare(this,t,e)?(this.setOutputData(0,!0),this.setOutputData(1,t)):!0===this.settings.passNull.value?(this.setOutputData(0,null),this.setOutputData(1,null)):(this.setOutputData(0,!1),this.setOutputData(1,t))):this.setOutputData(0,null)}onAfterSettingsChange(){const t=this.settings.function.value;this.title=`String Comparison Compare (${t})`,this.broadcastTitleToClients(),this.onInputUpdated()}}n.Container.registerNodeType("string/string-compare",d)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Substring Cut",this.description="This node outputs a portion of a String 'input' defined by the Numeric 'start' and 'length' parameters.  String 'output' is the portion of 'input' starting at index (position) 'start' and continating the next 'length' value of characters.  'start' value of 0 is the beggining of the string.  If a negative 'start' value is given, the substring will be selected from the end of the 'input' string (eg. -1 is the end of the 'input'; -2 is the second to last character of the 'input', ...).",this.addInput("input",a.Type.STRING),this.addInputWithSettings("start",a.Type.NUMBER,0,"Start",!1),this.addInputWithSettings("length",a.Type.NUMBER,1,"Length",!1),this.addOutput("output",a.Type.STRING)}onAdded(){this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(0),e=this.getInputData(1),i=this.getInputData(2);null!=t&&null!=e&&null!=i?this.setOutputData(0,t.substr(e,i)):this.setOutputData(0,null)}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("string/cut-substring",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(6),a=i(1);class r extends n.FlexibleNode{constructor(){super(),this.dynamicInputsType=a.Type.STRING,super.dynamicInputsStartName="string",this.title="String Join",this.description="This node takes String inputs and concatenates/joins them to produce a String 'output'.   The number of inputs can be modified from settings.",this.addOutput("output",a.Type.STRING),this.setOutputData(0,null)}onAdded(){this.size=this.computeSize(),this.onInputUpdated()}onInputUpdated(){const t=this.getInputsCount();let e="";for(let i=this.dynamicInputStartPosition;i<t;i++)e=e.concat(this.getInputData(i));this.setOutputData(0,e,!0)}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("string/string-join",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="String Length",this.description="'output' is the number of characters in the given String 'input' value.",this.addInput("input",a.Type.STRING),this.addOutput("output",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);null!=t?this.setOutputData(0,t.length):this.setOutputData(0,null)}}n.Container.registerNodeType("string/string-length",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="String Index Of",this.description="This node takes String 'input' and 'searchFor'; Numeric 'output' is the index(position) of the first instance of 'searchFor' in 'input'.  Index of 0 is the begginning of the 'input' string. ",this.addInputWithSettings("input",a.Type.STRING,"","Input Value",!1),this.addInputWithSettings("searchFor",a.Type.STRING,"","Search For Value",!1),this.addOutput("startIndex",a.Type.NUMBER),this.addOutput("endIndex",a.Type.NUMBER),this.setOutputData(0,null),this.setOutputData(1,null),this.settings.input={description:"string1 Value",value:"",type:s.SettingType.STRING},this.settings.searchFor={description:"Search For Value",value:"",type:s.SettingType.STRING}}onAdded(){this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(0),e=this.getInputData(1),i=t.indexOf(e),s=e.length;i<0?(this.setOutputData(0,null,!0),this.setOutputData(1,null,!0)):(this.setOutputData(0,i,!0),this.setOutputData(1,i+s,!0))}onAfterSettingsChange(){this.side===n.Side.server&&this.onInputUpdated()}}n.Container.registerNodeType("string/string-index-of",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Char at Index",this.description="'output' is the character at the Numeric 'index' (position) of String 'input'.  The first character of the String 'input' is 'index' 0. If 'index' is negative, characters will be selected from the end of the 'input' string (eg. -1 is the last character; -2 is the second to last character). 'output' will be 'null' on an invalid 'index'.",this.addInput("input",a.Type.STRING),this.addInputWithSettings("index",a.Type.NUMBER,0,"Index",!1),this.addOutput("output",a.Type.STRING)}onAdded(){this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(0),e=this.getInputData(1);null!=t&&null!=e?-1===e?this.setOutputData(0,t.slice(-1)):this.setOutputData(0,t.slice(e,e+1)):this.setOutputData(0,null)}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("string/char-at-index",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.currentIndex=0,this.title="String Split",this.description="Portions of the String 'input' are sent to the String 'output' sequentially when 'next' trasitions from 'false' to 'true'; these 'output' strings are portions of the 'input' string split by the String 'separator' value.  The Numeric 'left' outputs the number of 'output' strings remaining to be sent.  When 'start' transitions from 'false' to 'true', the 'output' string will go back to the first portion of the 'input' string. ",this.addInput("input",a.Type.STRING),this.addInputWithSettings("separator",a.Type.STRING,"","Separator Value",!1),this.addInput("start",a.Type.BOOLEAN),this.addInput("next",a.Type.BOOLEAN),this.addOutput("output",a.Type.STRING),this.addOutput("left",a.Type.NUMBER),this.setOutputData(0,null),this.setOutputData(1,0)}onCreated(){this.lastStart=!1,this.lastNext=!1}onAdded(){this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(2)||!1,e=this.getInputData(3)||!1;this.inputs[2].updated&&t&&!this.lastStart&&(this.currentIndex=0,this.splitNext()),this.lastStart=t,this.inputs[3].updated&&e&&!this.lastNext&&this.splitNext(),this.lastNext=e}onAfterSettingsChange(){this.onInputUpdated()}splitNext(){const t=this.getInputData(0),e=this.getInputData(1);if(null==t||null==e)return;const i=t.split(e);this.currentIndex>=i.length||(this.setOutputData(0,i[this.currentIndex]),this.setOutputData(1,i.length-this.currentIndex-1),this.currentIndex++)}}n.Container.registerNodeType("string/string-split",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3),o=i(4);class u extends s.Node{constructor(){super(),this.toTitleCase=t=>o.isString(t)&&!o.isNull(t)?t.toLowerCase().split(" ").map(t=>t.charAt(0).toUpperCase()+t.slice(1)).join(" "):null,this.title="String Case (Lower)",this.description="'output' is the 'input' string with all characters changed to either upper or lower case.  Upper or Lower case can be selected from settings.",this.addInput("input",a.Type.STRING),this.addOutput("output",a.Type.STRING),this.setOutputData(0,null),this.settings.function={description:"Select Case",type:s.SettingType.DROPDOWN,config:{items:[{value:"lower",text:"Lower Case"},{value:"upper",text:"Upper Case"},{value:"first_upper",text:"First Characters to Upper Case"}]},value:"lower"}}onAdded(){this.setTitleAndConversionFunction(),this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(0);r.default.hasInput(t)?this.setOutputData(0,this.conversionFunction(t),!0):this.setOutputData(0,null,!0)}onAfterSettingsChange(){this.setTitleAndConversionFunction(),this.onInputUpdated()}setTitleAndConversionFunction(){switch(this.settings.function.value){case"first_upper":this.title="String Case (First Character to Upper)",this.conversionFunction=t=>this.toTitleCase(t);break;case"lower":this.title="String Case (Lower)",this.conversionFunction=t=>t.toLowerCase();break;case"upper":this.title="String Case (Upper)",this.conversionFunction=t=>t.toUpperCase();break;default:this.title="String Case (Lower)",this.conversionFunction=t=>t.toLowerCase()}}}n.Container.registerNodeType("string/string-case",u)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Char to ASCII Code",this.description="'output' is the ASCII code of the first character of a given String 'input' value.",this.addInput("input",a.Type.STRING),this.addOutput("output",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);null!=t?this.setOutputData(0,t.charCodeAt(0)):this.setOutputData(0,null)}}n.Container.registerNodeType("string/char-to-ascii",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="ASCII Code to Char",this.description="'output' is the character of the given Numeric ASCII code 'input' value.",this.addInput("input",a.Type.NUMBER),this.addOutput("output",a.Type.STRING)}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);null!=t?this.setOutputData(0,String.fromCharCode(t)):this.setOutputData(0,null)}}n.Container.registerNodeType("string/ascii-to-char",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="String Buffer",this.description="",this.addInput("input",a.Type.STRING),this.addInput("sendBuffer",a.Type.BOOLEAN),this.addInput("clearBuffer",a.Type.BOOLEAN),this.addInput("addToBuffer",a.Type.BOOLEAN),this.addOutput("output",a.Type.STRING),this.addOutput("currentBuffer",a.Type.STRING),this.settings.useTrigger={description:"Select a Buffer Input Method",type:s.SettingType.DROPDOWN,config:{items:[{value:!0,text:"Add Input to Buffer When Triggered"},{value:!1,text:"Collect all Input Messages (no Trigger)"}]},value:!0},this.useTrigger=!0,this.bufferData=""}onCreated(){this.lastSend=!1,this.lastClear=!1,this.lastAdd=!1}onAdded(){this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(1)||!1,e=this.getInputData(2)||!1;let i=!1;if(this.useTrigger&&(i=this.getInputData(3)||!1),this.inputs[1].updated&&t&&!this.lastSend&&(this.setOutputData(0,this.bufferData),this.bufferData=""),this.lastSend=t,this.inputs[2].updated&&e&&!this.lastClear&&(this.bufferData=""),this.lastClear=e,!this.useTrigger&&this.inputs[0].updated||this.useTrigger&&this.inputs[3].updated&&i&&!this.lastAdd){const t=this.getInputData(0);if(null==t)return;this.bufferData+=String(t)}this.lastAdd=i,this.setOutputData(1,this.bufferData)}onAfterSettingsChange(){const t=this.settings.useTrigger.value;t!==this.useTrigger&&(t?this.addInput("addToBuffer",a.Type.BOOLEAN):this.removeInput(3)),this.useTrigger=t,this.onInputUpdated()}}n.Container.registerNodeType("string/string-buffer",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3);class o extends s.Node{constructor(){super(),this.title="Boolean Switch",this.description="Boolean 'switch' passes corresponding Boolean input to 'output'.  If 'switch' is 'true', Boolean 'inTrue' value will be passed to 'output'  'inTrue' and 'inFalse' values can be set in settings.",this.addInput("switch",a.Type.BOOLEAN),this.addInput("[inTrue]",a.Type.BOOLEAN),this.addInput("[inFalse]",a.Type.BOOLEAN),this.addOutput("output",a.Type.BOOLEAN),this.settings.inTrue={description:"True Value",type:s.SettingType.DROPDOWN,config:{items:[{value:!1,text:"false"},{value:!0,text:"true"},{value:null,text:"null"}]},value:null},this.settings.inFalse={description:"False Value",type:s.SettingType.DROPDOWN,config:{items:[{value:!1,text:"false"},{value:!0,text:"true"},{value:null,text:"null"}]},value:null}}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){let t=this.getInputData(0);if(!r.default.hasInput(t))return void this.setOutputData(0,null);let e=this.getInputData(1);r.default.hasInput(e)||(e=this.settings.inTrue.value);let i=this.getInputData(2);r.default.hasInput(i)||(i=this.settings.inFalse.value),t?this.setOutputData(0,e):this.setOutputData(0,i)}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("switch/bool-switch",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3);class o extends s.Node{constructor(){super(),this.title="Numeric Switch",this.description="Boolean 'switch' passes corresponding Numeric input to 'output'.  If 'switch' is 'true', Numeric 'inTrue' value will be passed to 'output'  'inTrue' and 'inFalse' values can be set in settings.",this.addInput("switch",a.Type.BOOLEAN),this.addInputWithSettings("inTrue",a.Type.NUMBER,null,"True Value"),this.addInputWithSettings("inFalse",a.Type.NUMBER,null,"False Value"),this.addOutput("output",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){let t=this.getInputData(0);if(!r.default.hasInput(t))return void this.setOutputData(0,null);const e=this.getInputData(1),i=this.getInputData(2);t?this.setOutputData(0,e):this.setOutputData(0,i)}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("switch/num-switch",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3);class o extends s.Node{constructor(){super(),this.title="String Switch",this.description="Boolean 'switch' passes corresponding String input to 'output'.  If 'switch' is 'true', String 'inTrue' value will be passed to 'output'  'inTrue' and 'inFalse' values can be set in settings.",this.addInput("switch",a.Type.BOOLEAN),this.addInputWithSettings("inTrue",a.Type.STRING,"","True Value"),this.addInputWithSettings("inFalse",a.Type.STRING,"","False Value"),this.addOutput("output",a.Type.NUMBER)}onAdded(){this.onInputUpdated()}onExecute(){}onInputUpdated(){let t=this.getInputData(0);if(!r.default.hasInput(t))return void this.setOutputData(0,null);const e=this.getInputData(1),i=this.getInputData(2);t?this.setOutputData(0,e):this.setOutputData(0,i)}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("switch/string-switch",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(1),a=i(3),r=i(6);class o extends r.FlexibleNode{constructor(){super(),this.dynamicInputsType=n.Type.BOOLEAN,super.dynamicInputStartPosition=1,this.title="Boolean Select",this.description="Numeric integer 'select' passes corresponding Boolean input to 'output'.  If 'select' is 2, 'in 2' will be passed to 'output' (likewise for other integer 'select' values). If the 'select' value does not have a corresponding 'in #' value, 'output' value will be 'null'.  The number of inputs and their values can be modified from settings.",this.addInput("select",n.Type.NUMBER),this.addOutput("output",n.Type.BOOLEAN)}onAdded(){this.size=this.computeSize(),this.onInputUpdated()}onExecute(){}onInputUpdated(){const t=this.getInputData(0);!a.default.hasInput(t)||t<this.dynamicInputStartPosition||t>this.getInputsCount()-this.dynamicInputStartPosition?this.setOutputData(0,null):this.setOutputData(0,this.getInputData(t))}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("switch/bool-select",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(1),a=i(3),r=i(6);class o extends r.FlexibleNode{constructor(){super(),this.dynamicInputsType=n.Type.NUMBER,super.dynamicInputStartPosition=1,this.title="Numeric Select",this.description="Numeric integer 'select' passes corresponding Numeric input to 'output'.  If 'select' is 2, 'in 2' will be passed to 'output' (likewise for other integer 'select' values). If the 'select' value does not have a corresponding 'in #' value, 'output' value will be 'null'.  The number of inputs and their values can be modified from settings.",this.addInput("select",n.Type.NUMBER),this.addOutput("output",n.Type.NUMBER)}onAdded(){this.size=this.computeSize(),this.onInputUpdated()}onExecute(){}onInputUpdated(){const t=this.getInputData(0);!a.default.hasInput(t)||t<this.dynamicInputStartPosition||t>this.getInputsCount()-this.dynamicInputStartPosition?this.setOutputData(0,null):this.setOutputData(0,this.getInputData(t))}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("switch/num-select",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(1),a=i(3),r=i(6);class o extends r.FlexibleNode{constructor(){super(),this.dynamicInputsType=n.Type.STRING,super.dynamicInputStartPosition=1,this.title="String Select",this.description="Numeric integer 'select' passes corresponding String input to 'output'.  If 'select' is 2, 'in 2' will be passed to 'output' (likewise for other integer 'select' values). If the 'select' value does not have a corresponding 'in #' value, 'output' value will be 'null'.  The number of inputs and their values can be modified from settings.",this.addInput("select",n.Type.NUMBER),this.addOutput("output",n.Type.STRING)}onAdded(){this.size=this.computeSize(),this.onInputUpdated()}onExecute(){}onInputUpdated(){const t=this.getInputData(0);!a.default.hasInput(t)||t<this.dynamicInputStartPosition||t>this.getInputsCount()-this.dynamicInputStartPosition?this.setOutputData(0,null):this.setOutputData(0,this.getInputData(t))}onAfterSettingsChange(){super.onAfterSettingsChange(),this.onInputUpdated()}}s.Container.registerNodeType("switch/string-select",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(6),a=i(1);class r extends n.FlexibleNode{constructor(){super(),this.dynamicOutputsExist=!0,this.dynamicInputsExist=!1,this.dynamicSettingsExist=!1,super.dynamicOutputsType=a.Type.BOOLEAN,this.title="Boolean Output Select",this.description="Numeric integer 'select' passes Boolean 'input' to the corresponding Boolean 'output'.  If 'select' is 2, 'input' will be passed to 'out 2' (likewise for other integer 'select' values). If the 'select' value does not have a corresponding 'out #' value, no values will be passed.  The number of outputs  can be modified from settings.",this.addInput("select",a.Type.NUMBER),this.addInput("input",a.Type.BOOLEAN)}onInputUpdated(){let t=this.getInputData(0),e=this.getInputData(1);t<0||t>=this.getOutputsCount()?this.debugWarn("Defined active output does not exist"):this.setOutputData(t,e)}}e.BoolOutputSelectNode=r,s.Container.registerNodeType("switch/bool-output-select",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(6),a=i(1);class r extends n.FlexibleNode{constructor(){super(),this.dynamicOutputsExist=!0,this.dynamicInputsExist=!1,this.dynamicSettingsExist=!1,super.dynamicOutputsType=a.Type.NUMBER,this.title="Numeric Output Select",this.description="Numeric integer 'select' passes Numeric 'input' to the corresponding Numeric 'output'. If 'select' is 2, 'input' will be passed to 'out 2' (likewise for other integer 'select' values). If the 'select' value does not have a corresponding 'out #' value, no values will be passed. The number of outputs can be modified from settings.",this.addInput("select",a.Type.NUMBER),this.addInput("input",a.Type.NUMBER)}onInputUpdated(){let t=this.getInputData(0),e=this.getInputData(1);t<0||t>=this.getOutputsCount()?this.debugWarn("Defined active output does not exist"):this.setOutputData(t,e)}}e.NumOutputSelectNode=r,s.Container.registerNodeType("switch/num-output-select",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(6),a=i(1);class r extends n.FlexibleNode{constructor(){super(),this.dynamicOutputsExist=!0,this.dynamicInputsExist=!1,this.dynamicSettingsExist=!1,super.dynamicOutputsType=a.Type.STRING,this.title="String Output Select",this.description="Numeric integer 'select' passes String 'input' to the corresponding String 'output'. If 'select' is 2, 'input' will be passed to 'out 2' (likewise for other integer 'select' values). If the 'select' value does not have a corresponding 'out #' value, no values will be passed. The number of outputs can be modified from settings.",this.addInput("select",a.Type.NUMBER),this.addInput("input",a.Type.STRING)}onInputUpdated(){let t=this.getInputData(0),e=this.getInputData(1);t<0||t>=this.getOutputsCount()?this.debugWarn("Defined active output does not exist"):this.setOutputData(t,e)}}e.StringOutputSelectNode=r,s.Container.registerNodeType("switch/string-output-select",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(37);class o extends s.Node{constructor(){super(),this.title="Host Info",this.description="## Description\n  This node outputs various linux system information\n  More Info:  https://docs.nube-iiot.com/en/nodes/home#host-info\n    \n ## On change of settings\n    \n  On change of settings output ***system-info*** will return data in json format\n ## On active Input\n    \n  On an active input ***trigger*** the outputs ***cpu-temp***, ***disc-usage***, ***system-time***, ***system-memory*** will return data in json format\n ## The data returned\n    \n  On change of settings output ***system-info*** will return data in json format\n    \n ",this.addInput("trigger",a.Type.BOOLEAN),this.addOutput("system-info",a.Type.JSON),this.addOutput("cpu-temp",a.Type.JSON),this.addOutput("disc-usage",a.Type.JSON),this.addOutput("system-time",a.Type.JSON),this.addOutput("system-memory",a.Type.JSON),this.addOutput("error",a.Type.STRING)}onCreated(){this.onAfterSettingsChange()}callSystemInfo(){r.default.systemInfo().then(t=>this.setOutputData(0,t)).catch(t=>this.setOutputData(5,t))}callInfo(){r.default.cpuTemperature().then(t=>this.setOutputData(1,t)).catch(t=>this.setOutputData(5,t)),r.default.fsSize().then(t=>this.setOutputData(2,t)).catch(t=>this.setOutputData(5,t)),r.default.systemTime().then(t=>this.setOutputData(3,t)).catch(t=>this.setOutputData(5,t)),r.default.systemMem().then(t=>this.setOutputData(4,t)).catch(t=>this.setOutputData(5,t))}onAfterSettingsChange(){this.side===n.Side.server&&this.callSystemInfo()}onInputUpdated(){this.side===n.Side.server&&this.callInfo()}}n.Container.registerNodeType("system/host-info",o)},function(t,e){t.exports=require("systeminformation")},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(2),a=i(14),r=i(0),o=i(1),u=i(37),d=i(27),p=i(88),l=i(8);class h extends a.ContainerNode{constructor(t){super(t),this.haystackSite={id:{description:"enter site id",value:"My ID",type:n.SettingType.STRING}},this.haystackAbout={serverName:u.default.hostName(),productVersion:u.default.getCurrentWiresVersion()},this.globalSettings={units:["metric, imperial"],vendorName:"Nube IO"},this.title="Platform",this.description="This node provides global settings for the Wires instance. It should be added to the main(root) Editor Pane of each Wires instance. ‘Client ID’ and ‘Device ID’ are used by each node with a history logging configuration to store data.",this.addInputWithSettings("clientId",o.Type.STRING,"client id","client id",!1),this.addInputWithSettings("siteId",o.Type.STRING,"site id","site id",!1),this.addInputWithSettings("clientName",o.Type.STRING,"client name","Client Name",!1),this.addInputWithSettings("siteName",o.Type.STRING,"site name","Site/Building Name",!1),this.addInputWithSettings("siteAddress",o.Type.STRING,"123 my street","Site/Building Address",!1),this.addOutput("device-id",o.Type.STRING),this.addOutput("client-id",o.Type.STRING),this.addOutput("site-id",o.Type.STRING),this.addOutput("wires-version",o.Type.STRING),this.addOutput("output-json",o.Type.JSON),this.settings.deviceIdType={description:"Device ID Type",type:n.SettingType.DROPDOWN,config:{items:[{value:!1,text:"Fixed ID"},{value:!0,text:"Custom ID"}]},value:!1},this.settings.deviceIDFixed={description:"Fixed Device ID",value:"unknownDeviceID",type:n.SettingType.READONLY},this.settings.deviceIDcustom={description:"Custom Device ID",value:"",type:n.SettingType.STRING},this.settings.serverName={description:"serverName",value:"",type:n.SettingType.READONLY},this.settings.productVersion={description:"productVersion",value:"",type:n.SettingType.READONLY},this.setSettingsConfig({groups:[],conditions:{deviceIDFixed:t=>!t.deviceIdType.value,deviceIDcustom:t=>!!t.deviceIdType.value}}),this.properties.deviceID={}}onAdded(){const t=Object.create(null,{onAdded:{get:()=>super.onAdded}});return s(this,void 0,void 0,(function*(){t.onAdded.call(this),yield this.haystackAbout.serverName.then(t=>{this.settings.serverName.value=t,this.broadcastSettingsToClients()}),yield this.haystackAbout.productVersion.then(t=>{this.settings.productVersion.value=t,this.broadcastSettingsToClients(),this.setOutputData(3,t)}),yield this.onAfterSettingsChange(null)}))}onInputUpdated(){return s(this,void 0,void 0,(function*(){yield this.onAfterSettingsChange(null)}))}onAfterSettingsChange(t){const e=Object.create(null,{onAfterSettingsChange:{get:()=>super.onAfterSettingsChange}});return s(this,void 0,void 0,(function*(){if(e.onAfterSettingsChange.call(this,t),this.side!==r.Side.server)return;yield this.doUUIDSteps(),this.properties.deviceID=this.settings.deviceIdType.value?this.settings.deviceIDcustom.value:this.settings.deviceIDFixed.value,this.persistSettings(),this.setOutputData(0,this.properties.deviceID),this.setOutputData(1,this.getInputData(0)),this.setOutputData(2,this.getInputData(1));const i={deviceID:this.properties.deviceID,clientID:this.getInputData(0),siteID:this.getInputData(1),clientName:this.getInputData(2),siteName:this.getInputData(3),siteAddress:this.getInputData(4)};this.setOutputData(4,i)}))}persistSettings(){this.container.db&&this.container.db.updateNode(this.id,this.container.id,{$set:{settings:this.settings,properties:this.properties}})}doUUIDSteps(){return s(this,void 0,void 0,(function*(){const t=`${l.default.dataDir}/ids`,e=`${t}/deviceUUID.txt`;if(!(yield d.default.checkForOldDirectory(e))){if(!(yield p.default.isUUIDFile(e)))try{yield p.default.makeUUIDFile(t,"deviceUUID.txt")}catch(t){this.debugErr(t)}}yield this.getDeviceUUID(e)}))}getDeviceUUID(t){return s(this,void 0,void 0,(function*(){try{const e=yield d.default.readFile(t);this.settings.deviceIDFixed.value=e.toString().trim(),this.broadcastSettingsToClients()}catch(t){this.debugWarn(t)}}))}}r.Container.registerNodeType("system/platform",h)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(89);class o extends s.Node{constructor(){super(),this.title="System Info",this.description="This node outputs various linux system information.  Once a system property has been selected from settings, a ‘false’ to ‘true’ transition on the ‘trigger’ input will update the ‘output’.  ‘error’ will display error information if the request is not successful.",this.addInput("trigger",a.Type.BOOLEAN),this.addOutput("output",a.Type.STRING),this.addOutput("error",a.Type.STRING),this.settings["output-type"]={description:"Output type",type:s.SettingType.DROPDOWN,config:{items:[{value:0,text:"total memory"},{value:1,text:"free memory"},{value:2,text:"Network Interfaces"},{value:3,text:"hostname"},{value:4,text:"platform"},{value:5,text:"uptime in sec"},{value:6,text:"home dir"},{value:7,text:"arch"},{value:8,text:"System load average"}]}}}onCreated(){this.onAfterSettingsChange()}onAdded(){this.updateTitle()}onAfterSettingsChange(){this.onInputUpdated(),this.settings["output-type"].value&&this.updateTitle()}updateTitle(){const t=this.settings["output-type"].config.items,e=[JSON.stringify(this.settings["output-type"].value)],i=Object.keys(t).filter(t=>e.includes(t)).reduce((e,i)=>(e[i]=t[i].text,e),{}),s=this.settings["output-type"].value;this.title="System Info ("+i[s]+")"}onInputUpdated(){const t=this.settings["output-type"].value;try{let e=function(t){switch(t){case 0:return r.totalmem()/1048576;case 1:return r.freemem()/1048576;case 2:return r.networkInterfaces();case 3:return r.hostname();case 4:return r.platform();case 5:return r.uptime();case 6:return r.homedir();case 7:return r.arch();case 8:return r.loadavg();default:return}}(t);this.setOutputData(0,e),this.setOutputData(1,!1)}catch(t){this.setOutputData(1,!0)}}}n.Container.registerNodeType("system/system-info",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Beep",this.description="This node plays a default system sound on the server (not in the browser) when ‘trigger’ transitions from ‘false’ to ‘true’.",this.addInput("trigger",a.Type.BOOLEAN),this.addOutput("error",a.Type.STRING)}onInputUpdated(){try{1==this.getInputData(0)&&process.stderr.write(""),this.setOutputData(0,!1)}catch(t){this.setOutputData(0,!0)}}}n.Container.registerNodeType("system/beep",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(19),r=i(1),o=i(4);class u extends s.Node{constructor(){super(),this.title="Execute Command",this.description="This node triggers commands to be run on the linux host.  The string input ‘command input’ will be run when ‘trigger’ transitions from ‘false’ to ‘true’.      NOTE: ONLY USE THIS NODE IF YOU KNOW EXACTLY WHAT YOU ARE DOING. SYSTEM COMMANDS CAN CHANGE SYSTEM CONFIGURATION WHICH CANNOT BE FIXED FROM WITHIN WIRES.  YOU COULD BREAK WIRES, THE CONTROLLER, OR YOUR PC. ",this.addInputWithSettings("command",r.Type.STRING,"pwd","Linux Command",!1),this.addInput("trigger",r.Type.BOOLEAN),this.addOutput("out stdout",r.Type.STRING),this.addOutput("out err",r.Type.STRING),this.addOutput("out stderr",r.Type.STRING),this.addOutput("error",r.Type.STRING)}onCreated(){this.lastTrigger=!1}onInputUpdated(){const t=this.getInputData(1)||!1;if(this.inputs[1].updated&&t&&!this.lastTrigger){const t=this.getInputData(0);if(o.isNull(t))return;try{a.exec(t,(t,e,i)=>{e&&(this.setOutputData(0,e),this.setOutputData(3,!1)),t&&(this.setOutputData(1,t),this.setOutputData(3,!0)),i&&(this.setOutputData(2,i),this.setOutputData(3,!0))})}catch(t){this.setOutputData(3,!0)}}this.lastTrigger=t}}n.Container.registerNodeType("system/execute-cmd",u)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Flow Export",this.description="A node to export the wires flow to JSON when trigger values gets changed to true from different state",this.addOutput("output",a.Type.STRING),this.addInput("trigger",a.Type.BOOLEAN)}init(){this.properties||(this.properties.lastTrigger=!1)}onInputUpdated(){if(this.side!=n.Side.server)return;const t=this.getInputData(0);if(this.properties.lastTrigger!==t&&t){n.Container.containers[0].db.getNodes((t,e)=>{t?this.debugErr(` Node id [ ${this.cid}/${this.id} ] has error: ${t.message}.`):this.setOutputData(0,JSON.stringify(e))})}this.properties.lastTrigger=t,this.persistProperties(!1,!0)}}n.Container.registerNodeType("system/flow-export",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3),o=i(91),u=i(19),d=i(37),p=i(93);class l extends s.Node{constructor(){super(),this.timeStamp=r.default.getTimeStamp(),this.interfaceEth0="eth0",this.eth0Ip=0,this.messageOutput=2,this.errorOutput=3,this.msgOut=(t,e)=>{this.setOutputData(t,e)},this.title="Network Interface EdgeIO-28",this.description="This node is used to configure the network (IP) interface for edge28 controllers.  Changes made to settings will only be saved if ‘Save changes on save’ is toggled ON.  In some cases a reboot will be required to save the changes, if ‘Reboot’ is toggled ON, then clicking ‘save’ will reboot the controller.        NOTE: Making changes on a remote device could cause the device to become inaccessible.",this.addInput("get interface address",a.Type.BOOLEAN),this.addInput("enable eth0 ",a.Type.BOOLEAN),this.addOutput("ip eth0",a.Type.STRING),this.addOutput("message",a.Type.STRING),this.addOutput("error",a.Type.STRING),this.settings.writeChanges={description:"Save changes on save",type:s.SettingType.BOOLEAN,value:!1},this.settings.reboot={description:"Optional Reboot. Warning this will reboot the device",type:s.SettingType.BOOLEAN,value:!1},this.settings.eth0_group={description:"Eth Port 0",value:"",type:s.SettingType.GROUP},this.settings.interfaceTypeEth0={description:"Interface Type eth0",type:s.SettingType.DROPDOWN,config:{items:[{value:0,text:"DHCP"},{value:1,text:"Static"}]},value:0},this.settings.newIpEth0={description:"IP",value:"192.168.0.40",type:s.SettingType.STRING},this.settings.netNetmaskEth0={description:"Netmask eth0",value:"255.255.255.0",type:s.SettingType.STRING},this.settings.newGatewayEth0={description:"Gateway",value:"192.168.0.1",type:s.SettingType.STRING},this.settings.newNameServerEth0={description:"Name Servers eth0",value:"8.8.8.8",type:s.SettingType.STRING},this.setSettingsConfig({groups:[{newIpEth0:{},netNetmaskEth0:{}},{newGatewayEth0:{},newNameServerEth0:{}}],conditions:{newIpEth0:t=>{const e=t.interfaceTypeEth0.value;return![0].includes(e)},netNetmaskEth0:t=>{const e=t.interfaceTypeEth0.value;return![0].includes(e)},newGatewayEth0:t=>{const e=t.interfaceTypeEth0.value;return![0].includes(e)},newNameServerEth0:t=>{const e=t.interfaceTypeEth0.value;return![0].includes(e)}}})}onAdded(){setTimeout(()=>{this.getInterfaces()},2e3)}onInputUpdated(){let t=this.getInputData(1);this.inputs[0].updated&&(this.msgOut(this.messageOutput,"called getInterfaces "+this.timeStamp),setTimeout(()=>{this.getInterfaces()},2e3)),this.inputs[1].updated&&(!0===t?(this.msgOut(this.messageOutput,"called enable Eth0 true "+this.timeStamp),this.enableNetwork(this.interfaceEth0)):!1===t&&(this.msgOut(this.messageOutput,"called disable Eth0 false "+this.timeStamp),this.disableNetwork(this.interfaceEth0)))}onAfterSettingsChange(){if(this.side!==n.Side.server)return;const t=this.settings.newIpEth0.value,e=this.settings.netNetmaskEth0.value,i=this.settings.newGatewayEth0.value,a=this.settings.newNameServerEth0.value,r=this.settings.interfaceTypeEth0.value,u=this.settings.writeChanges.value,l=this.settings.reboot.value,h=o.default.checkIpValid(t,e,i,a);l&&(this.msgOut(this.messageOutput,"called sudo reboot will reboot in 10 sec "+this.timeStamp),this.settings.reboot.value=!1,this.broadcastSettingsToClients(),setTimeout(()=>{this.execCommand("sudo reboot")},1e4)),d.default.systemInfo().then(n=>{"GENERIC AM33XX (FLATTENED DEVICE TREE)"===n.system.model?h&&u?0==r?(this.title="Adapter0(DHCP)",o.default.bbbGetInterfaceDetails().then(t=>{this.msgOut(this.messageOutput,`'MSG: get interface ID' ${t}`),o.default.bbbSetIPDHCP(t).then(t=>{this.msgOut(this.messageOutput,`'MSG: set ip to DHCP' ${t}`)}).catch(t=>{this.msgOut(this.messageOutput,`'ERROR: setting to DHCP' ${t}`)})}).catch(t=>{this.msgOut(this.messageOutput,`'ERROR: setting to DHCP' ${t}`)})):1==r&&(this.title="Adapter (Static)",o.default.bbbGetInterfaceDetails().then(s=>{o.default.bbbSetIPFixed(s,t,e,i).then(t=>{this.msgOut(this.messageOutput,`'MSG: set ip to fixed IP' ${t}`)}).catch(t=>{this.msgOut(this.messageOutput,`'ERROR: setting to fixed IP' ${t}`)})}).catch(t=>{this.msgOut(this.messageOutput,`'ERROR: setting to fixed IP' ${t}`)})):this.msgOut(this.messageOutput,"invalid ip settings"):(p.default.nodeColourChange(this,s.NodeState.ERROR),this.msgOut(this.messageOutput,`'ERROR: incorrect device type ${n.system.model}`))}).catch(t=>this.msgOut(this.messageOutput,`'ERROR: incorrect device type' ${t}`)),u||(this.msgOut(this.messageOutput,"nothing saved "+this.timeStamp),this.msgOut(this.errorOutput,!0))}execCommand(t){if(this.side===n.Side.server)try{u.exec(t,(e,i,s)=>{this.msgOut(this.messageOutput,"called command "+t+" "+this.timeStamp),i&&(this.msgOut(this.messageOutput,i+" "+this.timeStamp),this.msgOut(this.errorOutput,!1)),e&&(this.msgOut(this.messageOutput,e+" "+this.timeStamp),this.msgOut(this.errorOutput,!0)),s&&(this.msgOut(this.messageOutput,s+" "+this.timeStamp),this.msgOut(this.errorOutput,!0))})}catch(t){this.msgOut(this.messageOutput,t+" "+this.timeStamp),this.msgOut(this.errorOutput,!0)}}getInterfaces(){o.default.getActiveNetworks().then(t=>{const e=t.filter(t=>t.name==this.interfaceEth0);this.msgOut(this.eth0Ip,e[0].ip_address),this.msgOut(this.errorOutput,!1)}).catch(t=>{this.msgOut(this.messageOutput,t),this.msgOut(this.errorOutput,!0)})}enableNetwork(t){try{o.default.networkUpDown(t,"up").then(t=>{console.log(t),setTimeout(()=>{this.getInterfaces()},5e3)}).catch(t=>console.log(t))}catch(t){console.log(t)}}disableNetwork(t){try{o.default.networkUpDown(t,"down").then(t=>{console.log(t)}).catch(t=>console.log(t))}catch(t){console.log(t)}}}n.Container.registerNodeType("system/network-interface-edge-28",l)},function(t,e){t.exports=require("network")},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3),o=i(91),u=i(19),d=i(37),p=i(93),l=i(378),h=i(92);class c extends s.Node{constructor(){super(),this.timeStamp=r.default.getTimeStamp(),this.interfaceEth0="eth0",this.interfaceEth1="eth1",this.eth0Ip=0,this.eth1Ip=1,this.messageOutput=2,this.errorOutput=3,this.msgOut=(t,e)=>{this.setOutputData(t,e)},this.title="Network Interfaces",this.description="This node is used to configure the network (IP) interfaces for the device.  Changes made to settings will only be saved if ‘Save changes on save’ is toggled ON.  In some cases a reboot will be required to save the changes, if ‘Reboot’ is toggled ON, then clicking ‘save’ will reboot the controller.      NOTE: Making changes on a remote device could cause the device to become inaccessible.",this.addInput("get interface address",a.Type.BOOLEAN),this.addInput("enable eth0 ",a.Type.BOOLEAN),this.addInput("enable eth1 ",a.Type.BOOLEAN),this.addOutput("ip eth0",a.Type.STRING),this.addOutput("ip eth1",a.Type.STRING),this.addOutput("message",a.Type.STRING),this.addOutput("error",a.Type.STRING),this.settings.writeChanges={description:"Save changes on save",type:s.SettingType.BOOLEAN,value:!1},this.settings.reboot={description:"Reboot. Warning this will reboot the device",type:s.SettingType.BOOLEAN,value:!1},this.settings.eth0_group={description:"Eth Port 0",value:"",type:s.SettingType.GROUP},this.settings.interfaceTypeEth0={description:"Interface Type eth0",type:s.SettingType.DROPDOWN,config:{items:[{value:0,text:"DHCP"},{value:1,text:"Static"}]},value:0},this.settings.newIpEth0={description:"IP",value:"192.168.0.40",type:s.SettingType.STRING},this.settings.netNetmaskEth0={description:"Netmask eth0",value:"255.255.255.0",type:s.SettingType.STRING},this.settings.newGatewayEth0={description:"Gateway",value:"192.168.0.1",type:s.SettingType.STRING},this.settings.newNameServerEth0={description:"Name Servers eth0",value:"8.8.8.8",type:s.SettingType.STRING},this.settings.eth1_group={description:"Eth Port 1",value:"",type:s.SettingType.GROUP},this.settings.interfaceTypeEth1={description:"Interface Type eth1",type:s.SettingType.DROPDOWN,config:{items:[{value:0,text:"DHCP"},{value:1,text:"Static"}]},value:0},this.settings.newIpEth1={description:"IP",value:"192.168.1.40",type:s.SettingType.STRING},this.settings.netNetmaskEth1={description:"Netmask eth1",value:"255.255.255.0",type:s.SettingType.STRING},this.settings.newGatewayEth1={description:"Gateway",value:"192.168.1.1",type:s.SettingType.STRING},this.settings.newNameServerEth1={description:"Name Servers eth1",value:"8.8.8.8",type:s.SettingType.STRING},this.setSettingsConfig({groups:[{newIpEth0:{},netNetmaskEth0:{}},{newGatewayEth0:{},newNameServerEth0:{}},{newIpEth1:{},netNetmaskEth1:{}},{newGatewayEth1:{},newNameServerEth1:{}}],conditions:{newIpEth0:t=>{const e=t.interfaceTypeEth0.value;return![0].includes(e)},netNetmaskEth0:t=>{const e=t.interfaceTypeEth0.value;return![0].includes(e)},newGatewayEth0:t=>{const e=t.interfaceTypeEth0.value;return![0].includes(e)},newNameServerEth0:t=>{const e=t.interfaceTypeEth0.value;return![0].includes(e)},newIpEth1:t=>{const e=t.interfaceTypeEth1.value;return![0].includes(e)},netNetmaskEth1:t=>{const e=t.interfaceTypeEth1.value;return![0].includes(e)},newGatewayEth1:t=>{const e=t.interfaceTypeEth1.value;return![0].includes(e)},newNameServerEth1:t=>{const e=t.interfaceTypeEth1.value;return![0].includes(e)}}})}onAdded(){setTimeout(()=>{this.getInterfaces()},2e3)}onInputUpdated(){let t=this.getInputData(1),e=this.getInputData(2);this.inputs[0].updated&&(this.msgOut(this.messageOutput,"called getInterfaces "+this.timeStamp),setTimeout(()=>{this.getInterfaces()},2e3)),this.inputs[1].updated&&(!0===t?(this.msgOut(this.messageOutput,"called enable Eth0 true "+this.timeStamp),this.enableNetwork(this.interfaceEth0)):!1===t&&(this.msgOut(this.messageOutput,"called disable Eth0 false "+this.timeStamp),this.disableNetwork(this.interfaceEth0))),this.inputs[2].updated&&(!0===e?(this.msgOut(this.messageOutput,"called enable Eth1 true "+this.timeStamp),this.enableNetwork(this.interfaceEth1)):!1===e&&(this.msgOut(this.messageOutput,"called disable Eth1 false "+this.timeStamp),this.disableNetwork(this.interfaceEth1)))}onAfterSettingsChange(){if(this.side!==n.Side.server)return;const t=this.settings.newIpEth0.value,e=this.settings.netNetmaskEth0.value,i=this.settings.newGatewayEth0.value,a=this.settings.newNameServerEth0.value,r=this.settings.interfaceTypeEth0.value,u=this.settings.newIpEth1.value,c=this.settings.netNetmaskEth1.value,g=this.settings.newGatewayEth1.value,y=this.settings.newNameServerEth1.value,m=this.settings.interfaceTypeEth1.value,f=this.settings.writeChanges.value,v=this.settings.reboot.value,T=o.default.checkIpValid(t,e,i,a),O=o.default.checkIpValid(u,c,g,y);v&&(this.msgOut(this.messageOutput,"called sudo reboot will reboot in 10 sec "+this.timeStamp),this.settings.reboot.value=!1,this.broadcastSettingsToClients(),setTimeout(()=>{this.execCommand("sudo reboot")},1e4)),d.default.systemInfo().then(n=>{if("BCM2835"===n.system.model)if(T&&O&&f){let s=[];if(0==r){this.title="Adapter0(DHCP)";let t={interface:this.interfaceEth0,dhcp:!0};s.push(t)}if(1==r){this.title="Adapter (Static)";let n=h.subnet(t,e),r={interface:this.interfaceEth0,ip_address:t,prefix:n.subnetMaskLength,gateway:i,nameservers:[a]};s.push(r)}if(0==m){this.title="Adapter0(DHCP)";let t={interface:this.interfaceEth1,dhcp:!0};s.push(t)}if(1==m){this.title="Adapter (Static)";let t=h.subnet(u,c),e={interface:this.interfaceEth1,ip_address:u,prefix:t.subnetMaskLength,gateway:g,nameservers:[y]};s.push(e)}l.configure(s).then(()=>{this.msgOut(this.messageOutput,"updated "+this.timeStamp),this.msgOut(this.errorOutput,!1)})}else this.msgOut(this.messageOutput,"invalid ip settings");else p.default.nodeColourChange(this,s.NodeState.ERROR),this.msgOut(this.messageOutput,`'ERROR: incorrect device type ${n.system.model}`)}).catch(t=>this.msgOut(this.messageOutput,`'ERROR: incorrect device type' ${t}`)),f||(this.msgOut(this.messageOutput,"nothing saved "+this.timeStamp),this.msgOut(this.errorOutput,!0))}execCommand(t){if(this.side===n.Side.server)try{u.exec(t,(e,i,s)=>{this.msgOut(this.messageOutput,"called command "+t+" "+this.timeStamp),i&&(this.msgOut(this.messageOutput,i+" "+this.timeStamp),this.msgOut(this.errorOutput,!1)),e&&(this.msgOut(this.messageOutput,e+" "+this.timeStamp),this.msgOut(this.errorOutput,!0)),s&&(this.msgOut(this.messageOutput,s+" "+this.timeStamp),this.msgOut(this.errorOutput,!0))})}catch(t){this.msgOut(this.messageOutput,t+" "+this.timeStamp),this.msgOut(this.errorOutput,!0)}}getInterfaces(){o.default.getActiveNetworks().then(t=>{const e=t.filter(t=>t.name==this.interfaceEth0);this.msgOut(this.eth0Ip,e[0].ip_address),this.msgOut(this.errorOutput,!1);const i=t.filter(t=>t.name==this.interfaceEth1);this.msgOut(this.eth1Ip,i[0].ip_address),this.msgOut(this.errorOutput,!1)}).catch(t=>{this.msgOut(this.messageOutput,t),this.msgOut(this.errorOutput,!0)})}enableNetwork(t){try{o.default.networkUpDown(t,"up").then(t=>{console.log(t),setTimeout(()=>{this.getInterfaces()},5e3)}).catch(t=>console.log(t))}catch(t){console.log(t)}}disableNetwork(t){try{o.default.networkUpDown(t,"down").then(t=>{console.log(t)}).catch(t=>console.log(t))}catch(t){console.log(t)}}}n.Container.registerNodeType("system/network-interfaces",c)},function(t,e){t.exports=require("set-ip-address")},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(19),r=i(1),o=i(90);class u extends s.Node{constructor(){super(),this.title="Build Versions",this.description="A node for return the build versions of wires and nodejs'",this.addInput("in1",r.Type.STRING),this.addOutput("wires-version",r.Type.STRING),this.addOutput("nodejs-version",r.Type.STRING),this.addOutput("npm-version",r.Type.STRING),this.addOutput("json out",r.Type.STRING),this.addOutput("error",r.Type.STRING)}getCurrentWiresVersion(){return new Promise((function(t){return t({version:o.version})}))}getNodeJsVersion(){return new Promise((t,e)=>{a.exec("node -v",(i,s,n)=>{i?e(i):t({stdout:s})})})}getNPMVersion(){return new Promise((t,e)=>{a.exec("npm -v",(i,s,n)=>{i?e(i):t({stdout:s})})})}onInputUpdated(){let t=[];this.getCurrentWiresVersion().then(e=>{e=JSON.stringify(e).replace(/\\n/g,"").split("version").join("wires version"),t.push(e),this.setOutputData(0,e)}).catch(t=>{this.setOutputData(4,t)}),this.getNodeJsVersion().then(e=>{e=JSON.stringify(e).replace(/\\n/g,"").split("stdout").join("nodejs version"),t.push(e),this.setOutputData(1,e)}).catch(t=>{this.setOutputData(4,t)}),this.getNPMVersion().then(e=>{e=JSON.stringify(e).replace(/\\n/g,"").split("stdout").join("npm version"),t.push(e),this.setOutputData(3,t),this.setOutputData(2,e)}).catch(t=>{this.setOutputData(4,t)})}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("system/system-build-version",u)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3);class o extends s.Node{constructor(){super(),this.title="Time Conversion (min)",this.description="This node converts between Time units Days('day'), Hours('hour'), Minutes('min'), Seconds('sec'), and Milliseconds('milli').  Input type can be selected from settings. Outputs will change based on selected input type.  The number of decimal places that output values have can be set from the 'Precision' setting.",this.addInput("min",a.Type.NUMBER),this.addOutput("day",a.Type.NUMBER),this.addOutput("hour",a.Type.NUMBER),this.addOutput("sec",a.Type.NUMBER),this.addOutput("milli",a.Type.NUMBER),this.settings.inputType={description:"Input Type",type:s.SettingType.DROPDOWN,config:{items:[{value:"day",text:"Days (day)"},{value:"hour",text:"Hours (hour)"},{value:"min",text:"Minutes (min)"},{value:"sec",text:"Seconds (sec)"},{value:"milli",text:"Milliseconds(milli)"}]},value:"min"},this.settings.precision={description:"Precision",type:s.SettingType.NUMBER,value:"2"},this.conversionFunction=t=>{let e=[null,null,null,null];return e[0]=694444e-9*t,e[1]=.016666667*t,e[2]=60*t,e[3]=6e4*t,e}}onAdded(){this.setConversionFunction(),this.onAfterSettingsChange()}onInputUpdated(){this.onInputOrSettingsChange()}onAfterSettingsChange(){this.setConversionFunction(),this.onInputOrSettingsChange()}onInputOrSettingsChange(){const t=this.getInputData(0);if(!r.default.hasInput(t))return this.setOutputData(0,null),this.setOutputData(1,null),this.setOutputData(2,null),this.setOutputData(3,null),void this.setOutputData(4,null);const e=this.conversionFunction(t),i=Math.abs(this.settings.precision.value);this.setOutputData(0,Number(e[0]).toFixed(i)),this.setOutputData(1,Number(e[1]).toFixed(i)),this.setOutputData(2,Number(e[2]).toFixed(i)),this.setOutputData(3,Number(e[3]).toFixed(i)),this.setOutputData(4,Number(e[4]).toFixed(i))}setConversionFunction(){switch(this.settings.inputType.value){case"min":this.title="Time Conversion (min)",this.inputs[0].name="min",this.outputs[0].name="day",this.outputs[1].name="hour",this.outputs[2].name="sec",this.outputs[3].name="milli",this.conversionFunction=t=>{let e=[null,null,null,null];return e[0]=694444e-9*t,e[1]=.016666667*t,e[2]=60*t,e[3]=6e4*t,e};break;case"sec":this.title="Time Conversion (sec)",this.inputs[0].name="sec",this.outputs[0].name="day",this.outputs[1].name="hour",this.outputs[2].name="min",this.outputs[3].name="milli",this.conversionFunction=t=>{let e=[null,null,null,null];return e[0]=11574e-9*t,e[1]=277778e-9*t,e[2]=.016666667*t,e[3]=1e3*t,e};break;case"milli":this.title="Time Conversion (milli)",this.inputs[0].name="milli",this.outputs[0].name="day",this.outputs[1].name="hour",this.outputs[2].name="min",this.outputs[3].name="sec",this.conversionFunction=t=>{let e=[null,null,null,null];return e[0]=1.1574e-8*t,e[1]=2.7778e-7*t,e[2]=16667e-9*t,e[3]=.00100002*t,e};break;case"day":this.title="Time Conversion (day)",this.inputs[0].name="day",this.outputs[0].name="hour",this.outputs[1].name="min",this.outputs[2].name="sec",this.outputs[3].name="milli",this.conversionFunction=t=>{let e=[null,null,null,null];return e[0]=24*t,e[1]=1440*t,e[2]=86400*t,e[3]=864e5*t,e};break;case"hour":this.title="Time Conversion (hour)",this.inputs[0].name="hour",this.outputs[0].name="day",this.outputs[1].name="min",this.outputs[2].name="sec",this.outputs[3].name="milli",this.conversionFunction=t=>{let e=[null,null,null,null];return e[0]=.0416667*t,e[1]=60*t,e[2]=3600*t,e[3]=36e5*t,e};break;default:this.title="Time Conversion (min)",this.inputs[0].name="min",this.outputs[0].name="day",this.outputs[1].name="hour",this.outputs[2].name="sec",this.outputs[3].name="milli",this.conversionFunction=t=>{let e=[null,null,null,null];return e[0]=694444e-9*t,e[1]=.016666667*t,e[2]=60*t,e[3]=6e4*t,e}}}}e.TimeConvertNode=o,n.Container.registerNodeType("time/conversion",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(5);var o;!function(t){t.TIME="time string as input",t.EPOCH="time epoch as input",t.NEW_TS="time now"}(o||(o={}));class u extends s.Node{constructor(){super(),this.title="Time Conversion Json",this.description='## Description\n  This node will let you convert a timestamp or unix (epoch) timestamp into date and time parts \n  ## Example output\n  ***{"date":"Mon Aug 17 2020","yearMonthDay":"2020-08-17","year":"2020","month":"Aug","monthAsNumber":"08","dayAsNumber":"17","dayOfYearNumber":"230","day":"Mon","pmOrAm":"PM","hourAsAmPm":"8","hour":"20","timeHourMin":"20:26","time":"20:26:49","minute":"26","minutesSeconds":"26:49","seconds":"49","milliseconds":"000","epoch":"1597660009000","rawDate":"2020-08-17T10:26:49.000Z"}***\n ',this.addInput("input",a.Type.ANY),this.addOutput("out-json",a.Type.JSON),this.settings.time={description:"Time",type:s.SettingType.DROPDOWN,config:{items:[{value:o.TIME,text:o.TIME},{value:o.EPOCH,text:o.EPOCH},{value:o.NEW_TS,text:o.NEW_TS}]},value:o.TIME}}onInputUpdated(){const t=this.getInputData(0),e=this.timeSelection(t),i=r.default.timeConvertPlus(e);this.setOutputData(0,i)}onAfterSettingsChange(){this.onInputUpdated()}timeSelection(t){const e=this.settings.time.value;let i=null;return e===o.TIME?i=new Date(t):e===o.EPOCH?i=new Date(parseInt(t)):e===o.NEW_TS&&(i=new Date),i}}e.TimeConvertPlusNode=u,n.Container.registerNodeType("time/conversion-plus",u)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(383),o=i(12);class u extends s.Node{constructor(){super(),this.title="Timezone Conversion",this.description="## Description\n  The is node is used to convert two timestamps\n ",this.addInput("input",a.Type.ANY),this.addOutput("out-time-converted",a.Type.ANY),this.addOutput("out-local-converted",a.Type.ANY),this.settings.region={description:"Select Region",type:s.SettingType.DROPDOWN,config:{items:r.default.tsCategory}},this.settings.timezone={description:"Select TimeZone (Hit save to refresh)",value:"Sydney/Australia",type:s.SettingType.DROPDOWN}}onAdded(){this.onAfterSettingsChange()}onInputUpdated(){const t=this.getInputData(0);try{const e=o.tz(t,this.settings.timezone.value),i=o(t);this.setOutputData(0,e.format()),this.setOutputData(1,i.format())}catch(t){this.debugWarn(`ERROR: trying to convert a timezone${t}`)}}onAfterSettingsChange(){const t=this.settings.region.value;this.settings.timezone.config={items:r.default.tsType(t)},this.broadcastSettingsToClients(),this.onInputUpdated()}}e.TimezoneConvertNode=u,n.Container.registerNodeType("time/timezone-conversion",u)},function(t,e,i){"use strict";var s;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t.africaZones="Africa",t.americaZones="America",t.antarcticaZones="Antarctica",t.asiaZones="Asia",t.atlanticZones="Atlantic",t.australiaZones="Australia",t.europeZones="Europe",t.indianZones="Indian",t.pacificZones="Pacific"}(s||(s={}));class n{static tsType(t){switch(t){case s.africaZones:return Object.values(this.africaZones);case s.americaZones:return Object.values(this.americaZones);case s.antarcticaZones:return Object.values(this.antarcticaZones);case s.asiaZones:return Object.values(this.asiaZones);case s.atlanticZones:return Object.values(this.atlanticZones);case s.australiaZones:return Object.values(this.australiaZones);case s.europeZones:return Object.values(this.europeZones);case s.indianZones:return Object.values(this.indianZones);case s.pacificZones:return Object.values(this.pacificZones)}}}e.default=n,n.tsCategory=[s.africaZones,s.americaZones,s.antarcticaZones,s.asiaZones,s.atlanticZones,s.australiaZones,s.europeZones,s.indianZones,s.pacificZones].map(t=>({value:t,text:t})),n.europeZones=["Europe/Amsterdam","Europe/Andorra","Europe/Astrakhan","Europe/Athens","Europe/Belgrade","Europe/Berlin","Europe/Brussels","Europe/Bucharest","Europe/Budapest","Europe/Chisinau","Europe/Copenhagen","Europe/Dublin","Europe/Gibraltar","Europe/Helsinki","Europe/Istanbul","Europe/Kaliningrad","Europe/Kiev","Europe/Kirov","Europe/Lisbon","Europe/London","Europe/Luxembourg","Europe/Madrid","Europe/Malta","Europe/Minsk","Europe/Monaco","Europe/Moscow","Europe/Oslo","Europe/Paris","Europe/Prague","Europe/Riga","Europe/Rome","Europe/Samara","Europe/Saratov","Europe/Simferopol","Europe/Sofia","Europe/Stockholm","Europe/Tallinn","Europe/Tirane","Europe/Ulyanovsk","Europe/Uzhgorod","Europe/Vienna","Europe/Vilnius","Europe/Volgograd","Europe/Warsaw","Europe/Zaporozhye","Europe/Zurich"],n.africaZones=["Africa/Abidjan","Africa/Accra","Africa/Algiers","Africa/Bissau","Africa/Cairo","Africa/Casablanca","Africa/Ceuta","Africa/El_Aaiun","Africa/Johannesburg","Africa/Juba","Africa/Khartoum","Africa/Lagos","Africa/Maputo","Africa/Monrovia","Africa/Nairobi","Africa/Ndjamena","Africa/Sao_Tome","Africa/Tripoli","Africa/Tunis","Africa/Windhoek"],n.asiaZones=["Asia/Almaty","Asia/Amman","Asia/Anadyr","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Atyrau","Asia/Baghdad","Asia/Baku","Asia/Bangkok","Asia/Barnaul","Asia/Beirut","Asia/Bishkek","Asia/Brunei","Asia/Chita","Asia/Choibalsan","Asia/Colombo","Asia/Damascus","Asia/Dhaka","Asia/Dili","Asia/Dubai","Asia/Dushanbe","Asia/Famagusta","Asia/Gaza","Asia/Hebron","Asia/Ho_Chi_Minh","Asia/Hong_Kong","Asia/Hovd","Asia/Irkutsk","Asia/Jakarta","Asia/Jayapura","Asia/Jerusalem","Asia/Kabul","Asia/Kamchatka","Asia/Karachi","Asia/Kathmandu","Asia/Khandyga","Asia/Kolkata","Asia/Krasnoyarsk","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Macau","Asia/Magadan","Asia/Makassar","Asia/Manila","Asia/Nicosia","Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk","Asia/Oral","Asia/Pontianak","Asia/Pyongyang","Asia/Qatar","Asia/Qostanay","Asia/Qyzylorda","Asia/Riyadh","Asia/Sakhalin","Asia/Samarkand","Asia/Seoul","Asia/Shanghai","Asia/Singapore","Asia/Srednekolymsk","Asia/Taipei","Asia/Tashkent","Asia/Tbilisi","Asia/Tehran","Asia/Thimphu","Asia/Tokyo","Asia/Tomsk","Asia/Ulaanbaatar","Asia/Urumqi","Asia/Ust-Nera","Asia/Vladivostok","Asia/Yakutsk","Asia/Yangon","Asia/Yekaterinburg","Asia/Yerevan"],n.antarcticaZones=["Antarctica/Casey","Antarctica/Davis","Antarctica/DumontDUrville","Antarctica/Macquarie","Antarctica/Mawson","Antarctica/Palmer","Antarctica/Rothera","Antarctica/Syowa","Antarctica/Troll","Antarctica/Vostok"],n.americaZones=["America/Adak","America/Anchorage","America/Araguaina","America/Argentina/Buenos_Aires","America/Argentina/Catamarca","America/Argentina/Cordoba","America/Argentina/Jujuy","America/Argentina/La_Rioja","America/Argentina/Mendoza","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Asuncion","America/Atikokan","America/Bahia","America/Bahia_Banderas","America/Barbados","America/Belem","America/Belize","America/Blanc-Sablon","America/Boa_Vista","America/Bogota","America/Boise","America/Cambridge_Bay","America/Campo_Grande","America/Cancun","America/Caracas","America/Cayenne","America/Chicago","America/Chihuahua","America/Costa_Rica","America/Creston","America/Cuiaba","America/Curacao","America/Danmarkshavn","America/Dawson","America/Dawson_Creek","America/Denver","America/Detroit","America/Edmonton","America/Eirunepe","America/El_Salvador","America/Fort_Nelson","America/Fortaleza","America/Glace_Bay","America/Godthab","America/Goose_Bay","America/Grand_Turk","America/Guatemala","America/Guayaquil","America/Guyana","America/Halifax","America/Havana","America/Hermosillo","America/Indiana/Indianapolis","America/Indiana/Knox","America/Indiana/Marengo","America/Indiana/Petersburg","America/Indiana/Tell_City","America/Indiana/Vevay","America/Indiana/Vincennes","America/Indiana/Winamac","America/Inuvik","America/Iqaluit","America/Jamaica","America/Juneau","America/Kentucky/Louisville","America/Kentucky/Monticello","America/La_Paz","America/Lima","America/Los_Angeles","America/Maceio","America/Managua","America/Manaus","America/Martinique","America/Matamoros","America/Mazatlan","America/Menominee","America/Merida","America/Metlakatla","America/Mexico_City","America/Miquelon","America/Moncton","America/Monterrey","America/Montevideo","America/Nassau","America/New_York","America/Nipigon","America/Nome","America/Noronha","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Ojinaga","America/Panama","America/Pangnirtung","America/Paramaribo","America/Phoenix","America/Port-au-Prince","America/Port_of_Spain","America/Porto_Velho","America/Puerto_Rico","America/Punta_Arenas","America/Rainy_River","America/Rankin_Inlet","America/Recife","America/Regina","America/Resolute","America/Rio_Branco","America/Santarem","America/Santiago","America/Santo_Domingo","America/Sao_Paulo","America/Scoresbysund","America/Sitka","America/St_Johns","America/Swift_Current","America/Tegucigalpa","America/Thule","America/Thunder_Bay","America/Tijuana","America/Toronto","America/Vancouver","America/Whitehorse","America/Winnipeg","America/Yakutat","America/Yellowknife"],n.pacificZones=["Pacific/Apia","Pacific/Auckland","Pacific/Bougainville","Pacific/Chatham","Pacific/Chuuk","Pacific/Easter","Pacific/Efate","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Fiji","Pacific/Funafuti","Pacific/Galapagos","Pacific/Gambier","Pacific/Guadalcanal","Pacific/Guam","Pacific/Honolulu","Pacific/Kiritimati","Pacific/Kosrae","Pacific/Kwajalein","Pacific/Majuro","Pacific/Marquesas","Pacific/Nauru","Pacific/Niue","Pacific/Norfolk","Pacific/Noumea","Pacific/Pago_Pago","Pacific/Palau","Pacific/Pitcairn","Pacific/Pohnpei","Pacific/Port_Moresby","Pacific/Rarotonga","Pacific/Tahiti","Pacific/Tarawa","Pacific/Tongatapu","Pacific/Wake","Pacific/Wallis"],n.australiaZones=["Australia/Adelaide","Australia/Brisbane","Australia/Broken_Hill","Australia/Currie","Australia/Darwin","Australia/Eucla","Australia/Hobart","Australia/Lindeman","Australia/Lord_Howe","Australia/Melbourne","Australia/Perth","Australia/Sydney"],n.atlanticZones=["Atlantic/Azores","Atlantic/Bermuda","Atlantic/Canary","Atlantic/Cape_Verde","Atlantic/Faroe","Atlantic/Madeira","Atlantic/Reykjavik","Atlantic/South_Georgia","Atlantic/Stanley"],n.indianZones=["Indian/Chagos","Indian/Christmas","Indian/Cocos","Indian/Kerguelen","Indian/Mahe","Indian/Maldives","Indian/Mauritius","Indian/Reunion"]},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(5),o=i(24);class u extends s.Node{constructor(){super(),this.lastInterval=1e3,this.title="Clock",this.description="Outputs the System Time in various forms. Standard outputs are: Time('timeString') Hours('hour'), Minutes('min'), and Seconds('sec'). There are also Advanced outputs which can be enabled from settings. The Advanced outputs are: Milliseconds(millis), Time String including timezone ('longString'), Timezone Offset from UTC('TZOffset'), and Unix Timestamp ('epoch'). ‘interval’ is the output update frequency.   ‘interval’ units can be configured from settings. Maximum ‘interval’ setting is 587 hours.",this.addOutput("timeString",a.Type.STRING),this.addOutput("hour",a.Type.NUMBER),this.addOutput("min",a.Type.NUMBER),this.addOutput("sec",a.Type.NUMBER),this.addInputWithSettings("interval",a.Type.NUMBER,1,"Interval"),this.settings.time={description:"Time",type:s.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"seconds"},this.setSettingsConfig({groups:[{time:{},interval:{weight:2}}]}),this.settings.advanced={description:"Show Advanced Options",value:!1,type:s.SettingType.BOOLEAN},this.properties.advancedOutputs=!1}init(){this.settings.advanced.value&&this.addOutputs()}onAdded(){this.inputs[0].name=`[interval] (${this.settings.time.value})`,clearInterval(this.timeoutFunc);let t=this.getInputData(0);t=r.default.timeConvert(t,this.settings.time.value),this.timeoutFunc=setInterval(()=>{this.recalculate()},t),this.lastInterval=t,this.recalculate()}onInputUpdated(){let t=this.getInputData(0);t=r.default.timeConvert(t,this.settings.time.value),t!=this.lastInterval&&(this.lastInterval=t,clearInterval(this.timeoutFunc),this.timeoutFunc=setInterval(()=>{this.recalculate()},t))}recalculate(){if(this.side!==n.Side.server)return;const t=this.settings.advanced.value,e=o();this.setOutputData(0,e.format("HH:mm:ss"),!0),this.setOutputData(1,e.hours(),!0),this.setOutputData(2,e.minutes(),!0),this.setOutputData(3,e.seconds(),!0),t&&(this.setOutputData(4,e.milliseconds(),!0),this.setOutputData(5,e.toString(),!0),this.setOutputData(6,e.utcOffset()/60,!0),this.setOutputData(7,e.valueOf(),!0))}onAfterSettingsChange(){const t=this.settings.advanced.value;this.inputs[0].name=`[interval] (${this.settings.time.value})`,t&&!this.properties.advancedOutputs?(this.addOutputs(),this.properties.advancedOutputs=!0,this.persistProperties(!1,!0)):!t&&this.properties.advancedOutputs&&(this.removeOutput(4),this.removeOutput(5),this.removeOutput(6),this.removeOutput(7),this.properties.advancedOutputs=!1,this.persistProperties(!1,!0)),this.updateNodeOutput(),this.onInputUpdated()}addOutputs(){this.addOutput("millis",a.Type.NUMBER),this.addOutput("longString",a.Type.STRING),this.addOutput("TZOffset",a.Type.NUMBER),this.addOutput("epoch",a.Type.NUMBER)}}e.ClockNode=u,n.Container.registerNodeType("time/clock",u)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.interval=5e3,this.title="Date",this.description="Outputs various date information based on the system time.  String 'dateString' is the current date.  String 'dayString' is the current day of the week. Numeric 'dayOfWeek' is an integer between 0 and 6 corresponding to Sunday(0) through Saturday(6).  Numeric 'date' is and integer of the current date.  Numeric 'month' is an integer of the current month Jan(0) - Dec(12).  Numeric 'year' is an integer of the current year.",this.addOutput("dateString",a.Type.STRING),this.addOutput("dayString",a.Type.STRING),this.addOutput("dayOfWeek",a.Type.NUMBER),this.addOutput("date",a.Type.NUMBER),this.addOutput("month",a.Type.NUMBER),this.addOutput("year",a.Type.NUMBER)}onAdded(){clearInterval(this.timeoutFunc),this.timeoutFunc=setInterval(()=>{this.recalculate()},this.interval),this.recalculate()}recalculate(){let t=new Date;const e=t.getDay();let i=null;switch(e){case 0:i="Sunday";break;case 1:i="Monday";break;case 2:i="Tuesday";break;case 3:i="Wednesday";break;case 4:i="Thursday";break;case 5:i="Friday";break;case 6:i="Saturday"}this.setOutputData(0,t.toLocaleDateString(),!0),this.setOutputData(1,i,!0),this.setOutputData(2,e,!0),this.setOutputData(3,t.getDate(),!0),this.setOutputData(4,t.getMonth()+1,!0),this.setOutputData(5,t.getFullYear(),!0)}}e.DateNode=r,n.Container.registerNodeType("time/date",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(24),r=i(1);var o;!function(t){t.TIME="time string as input (YY:MM:DD)",t.EPOCH="time epoch as input (1597662977823)"}(o||(o={}));class u extends s.Node{constructor(){super(),this.title="Date Difference",this.description="## Description\n  The is node is used to compare the difference between two timestamps\n ## Inputs\n  The inputs can be sent as a unix timestamp ***epoch***. Change the settings ***Time input type*** for different input type \n ## Outputs (return data type is ***JSON***)\n  ***out-difference-time*** will return the time difference in for example: ***hours: 1, minutes: 30 ***\n  ***out-difference-totals*** will return the time difference in for example: ***hours: 1, minutes: 90 ***\n ",this.addInput("time-compare-1",r.Type.ANY),this.addInput("time-compare-2",r.Type.ANY),this.addOutput("out-difference-time",r.Type.ANY),this.addOutput("out-difference-totals",r.Type.ANY),this.settings.time={description:"Time input type",type:s.SettingType.DROPDOWN,config:{items:[{value:o.EPOCH,text:o.EPOCH}]},value:o.TIME}}onAdded(){this.onAfterSettingsChange()}onInputUpdated(){const t=this.getInputData(0),e=this.getInputData(1),i=this.settings.time.value;try{i===o.TIME?(this.setOutputData(0,this.diffTime(a(t),e)),this.setOutputData(1,this.diffTotals(a(t),e))):i===o.EPOCH&&(this.setOutputData(0,this.diffTime(a(parseInt(t)),a(parseInt(e)))),this.setOutputData(1,this.diffTotals(a(parseInt(t)),a(parseInt(e)))))}catch(t){this.debugWarn(`ERROR: trying to convert a timezone ${t}`)}}onAfterSettingsChange(){this.onInputUpdated()}diffTime(t,e){let i=t.diff(e,"year");e.add(i,"years");let s=t.diff(e,"months");e.add(s,"months");let n=t.diff(e,"days");e.add(n,"days");let a=t.diff(e,"hours");e.add(a,"hours");let r=t.diff(e,"minutes");return e.add(r,"minutes"),{years:i,months:s,days:n,hours:a,minutes:r,seconds:t.diff(e,"seconds"),ms:t.diff(e)}}diffTotals(t,e){return{years:t.diff(e,"year"),months:t.diff(e,"months"),days:t.diff(e,"days"),hours:t.diff(e,"hours"),minutes:t.diff(e,"minutes"),seconds:t.diff(e,"seconds"),ms:t.diff(e)}}}e.TimeDiffNode=u,n.Container.registerNodeType("time/date-difference",u)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3),o=i(5);class u extends s.Node{constructor(){super(),this.lastRunVal=!1,this.lastResetVal=!1,this.lastInterval=100,this.runState=!1,this.startTime=null,this.elapsed=0,this.units=1,this.digits=3,this.title="Stopwatch",this.description="This node converts between Time units Days('day'), Hours('hour'), Minutes('min'), Seconds('sec'), and Milliseconds('milli'). Input type can be selected from settings. Outputs will change based on selected input type. The number of decimal places that output values have can be set from the 'Precision' setting.  ‘interval’ units can be configured from settings. Maximum ‘interval’ setting is 587 hours.",this.addInputWithSettings("enable",a.Type.BOOLEAN,0,"Enable",!1),this.addInput("reset",a.Type.BOOLEAN),this.settings.units={description:"Output Units",type:s.SettingType.DROPDOWN,config:{items:[{value:1,text:"Milliseconds"},{value:1e3,text:"Seconds"},{value:6e4,text:"Minutes"},{value:36e5,text:"Hours"},{value:864e5,text:"Days"}]},value:1},this.addInputWithSettings("interval",a.Type.NUMBER,200,"Count Interval",!1),this.settings.time={description:"Units",type:s.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"milliseconds"},this.setSettingsConfig({groups:[{interval:{weight:2},time:{}}]}),this.addOutput("elapsed",a.Type.NUMBER),this.setOutputData(0,null),this.elapsed=0}onAdded(){this.runState=!1,this.setOutputData(0,this.elapsed),this.inputs[2].name=`[interval] (${this.settings.time.value})`,this.outputs[0].name="[elapsed] (milliseconds)",this.onAfterSettingsChange()}onInputUpdated(){let t=this.getInputData(0),e=this.getInputData(1);e&&!this.lastResetVal&&(this.elapsed=0,this.startTime=Date.now(),this.setOutputData(0,0,!0)),this.lastResetVal=e;let i=this.getInputData(2);i=o.default.timeConvert(i,this.settings.time.value),i!=this.lastInterval&&this.runState&&(clearInterval(this.timeoutFunc),this.setOutputData(0,Date.now()-this.startTime+this.elapsed,!0),this.timeoutFunc=setInterval(()=>{const t=(Date.now()-this.startTime+this.elapsed)/this.units;this.setOutputData(0,r.default.toFixedNumber(t,this.digits),!0)},i),this.lastInterval=i),t&&!this.lastRunVal?(this.setOutputData(0,this.elapsed,!0),this.runState=!0,this.startTime=Date.now(),this.timeoutFunc=setInterval(()=>{const t=(Date.now()-this.startTime+this.elapsed)/this.units;this.setOutputData(0,r.default.toFixedNumber(t,this.digits),!0)},i),this.lastRunVal=t):!t&&this.lastRunVal&&(clearInterval(this.timeoutFunc),this.elapsed=Date.now()-this.startTime+this.elapsed,this.runState=!1,this.setOutputData(0,this.elapsed,!0),this.lastRunVal=t)}onAfterSettingsChange(){switch(this.inputs[2].name=`[interval] (${this.settings.time.value})`,this.units=Number(this.settings.units.value),this.units){case 1:this.outputs[0].name="[elapsed] (milliseconds)";break;case 1e3:this.outputs[0].name="[elapsed] (seconds)";break;case 6e4:this.outputs[0].name="[elapsed] (minutes)";break;case 36e5:this.outputs[0].name="[elapsed] (hours)";break;case 864e5:this.outputs[0].name="[elapsed] (days)";break;default:this.outputs[0].name="[elapsed] (milliseconds)"}const t=Number(this.outputs[0].data)/this.units;this.setOutputData(0,r.default.toFixedNumber(t,this.digits),!0),this.onInputUpdated()}}n.Container.registerNodeType("time/stopwatch",u)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(56).CronJob,o=i(57),u=i(58);class d extends s.Node{constructor(){super(),this.job=null,this.jobCronExp="",this.title="Cron Interval",this.description="This node triggers 'output' to transition from 'false' to 'true' for 500 milliseconds at a selected times/intervals, configured in settings.  'info' will show information about the status of the node. 'cronExpression' represents the configured scheduled timings in Cron notation. 'cronDescription' represents the configured scheduled timings in plain english. 'nextExecution' is a String output representing the datetime that the next 'message' will be sent from 'output'. For more information on Cron Expressions see: (https://www.freeformatter.com/cron-expression-generator-quartz.html)",this.addInputWithSettings("enable",a.Type.BOOLEAN,!1,"Enable",!1),this.addOutput("output",a.Type.BOOLEAN),this.addOutput("info",a.Type.STRING),this.addOutput("cronExpression",a.Type.STRING),this.addOutput("cronDescription",a.Type.STRING),this.addOutput("nextExecution",a.Type.STRING),this.settings.timezone={description:"Enter the cron time zone",value:"Australia/Sydney",type:s.SettingType.STRING},this.settings["cron-type"]={description:"Cron Type",type:s.SettingType.DROPDOWN,config:{items:[{value:0,text:"Every Minutes (At every xth minute)"},{value:1,text:"Every Hours (At minute x past every xth hour.)"},{value:2,text:"Every Days (At x:xx every x days)"},{value:8,text:"Every Day At Time (x:xx)"},{value:3,text:"Every Month (Start of every month)"},{value:4,text:"Every Month On (On x Day at x:xx)"},{value:5,text:"Every Year (Start of every year)"},{value:6,text:"Every Year On (On x month x day at x:xx)"},{value:7,text:"Between Days (At x:xx between x and x day of the month)"}]},value:0},this.settings.min={description:"Set minute",value:1,type:s.SettingType.NUMBER},this.settings.hour={description:"Set hour",value:13,type:s.SettingType.NUMBER},this.settings.day={description:"Set day",value:1,type:s.SettingType.NUMBER},this.settings.dayBetweenStart={description:"Day Range Start",value:1,type:s.SettingType.NUMBER},this.settings.dayBetweenEnd={description:"Day Range End",value:15,type:s.SettingType.NUMBER},this.settings.month={description:"Set month",value:1,type:s.SettingType.NUMBER},this.setSettingsConfig({groups:[{dayBetweenStart:{},dayBetweenEnd:{}}],conditions:{min:t=>{const e=t["cron-type"].value;return 0==e||1==e||2==e||4==e||6==e||7==e||8==e},hour:t=>{const e=t["cron-type"].value;return 1==e||2==e||4==e||6==e||7==e||8==e},day:t=>{const e=t["cron-type"].value;return 2==e||4==e||6==e||7==e},dayBetweenStart:t=>7==t["cron-type"].value,dayBetweenEnd:t=>7==t["cron-type"].value,month:t=>6==t["cron-type"].value}})}onAdded(){clearInterval(this.timeoutFunc),this.setOutputData(0,!1),this.onAfterSettingsChange()}onAfterSettingsChange(){this.onInputUpdated()}onRemoved(){this.job&&this.job.stop()}jsonataQuery(t){return o("_d").evaluate(t)}onInputUpdated(){const t=this.getInputData(0),e=parseInt(this.settings.min.value),i=parseInt(this.settings.hour.value),s=parseInt(this.settings.day.value),n=parseInt(this.settings.dayBetweenStart.value),a=parseInt(this.settings.dayBetweenEnd.value),o=parseInt(this.settings.month.value),d=this.settings.timezone.value,p=this.settings["cron-type"].value;let l=null;if(t&&(l="invalid",0==p&&e>=0&&e<60?l="*/"+e+" * * * *":1==p&&e>=0&&e<60&&i>=0&&i<24?l=e+" */"+i+" * * *":2==p&&e>=0&&e<60&&i>=0&&i<24&&s>0&&s<=31?l=e+" "+i+" */"+s+" * *":3==p?l="0 0 1 * *":4==p&&e>=0&&e<60&&i>=0&&i<24&&s>0&&s<=31?l=e+" "+i+" "+s+" * *":5==p?l="0 0 1 1 *":6==p&&e>=0&&e<60&&i>=0&&i<24&&s>0&&s<=31&&o>=0&&o<=12?l=e+" "+i+" "+s+" "+o+" *":7==p&&e>=0&&e<60&&i>=0&&i<24&&n<a&&n>=1&&n<=30&&a>=2&&a<=31?l=e+" "+i+" "+n+"-"+a+" * *":8==p&&e>=0&&e<60&&i>=0&&i<24&&(l=e+" "+i+" * * *")),!t||null==l||"invalid"===l){"invalid"===l?this.setOutputData(1,"invalid configuration"):this.setOutputData(1,"CRON job stopped");try{this.job&&this.job.stop()}catch(t){this.setOutputData(1,t)}return this.job=null,this.jobCronExp="",this.setOutputData(0,!1,!0),this.setOutputData(2,null,!0),this.setOutputData(3,null,!0),void this.setOutputData(4,null,!0)}this.job&&l!==this.jobCronExp&&(this.setOutputData(1,"CRON job stopped"),this.job.stop(),this.job=null,this.jobCronExp="");try{this.jobCronExp=l,this.setOutputData(2,l),this.setOutputData(3,u.toString(l)),this.job=new r(l,()=>{this.setOutputData(0,!0),this.timeoutFunc=setTimeout(()=>{this.setOutputData(0,!1)},500);let t=this.job.nextDates(1);this.setOutputData(4,this.jsonataQuery(t))},null,null,d),setTimeout((function(){}),500),this.setOutputData(1,"CRON job started"),this.job.start();let t=this.job.nextDates(1);this.setOutputData(4,this.jsonataQuery(t))}catch(t){this.setOutputData(1,t)}}}e.CronIntervalNode=d,n.Container.registerNodeType("time/cron-interval",d)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(56).CronJob,o=i(57),u=i(58);class d extends s.Node{constructor(){super(),this.job=null,this.jobCronExp="",this.title="Cron Weekly",this.description="This node triggers 'output' to transition from 'false' to 'true' for 500 milliseconds at a configured time on each selected day. Days and Times are set in settings. 'info' will show information about the status of the node. 'cronExpression' represents the configured scheduled timings in Cron notation. 'cronDescription' represents the configured scheduled timings in plain english. 'nextExecution' is a String output representing the datetime that the next 'message' will be sent from 'output'. For more information on Cron Expressions see: (https://www.freeformatter.com/cron-expression-generator-quartz.html)",this.addInputWithSettings("enable",a.Type.BOOLEAN,!1,"Enable",!1),this.addOutput("output",a.Type.BOOLEAN),this.addOutput("info",a.Type.STRING),this.addOutput("cronExpression",a.Type.STRING),this.addOutput("cronDescription",a.Type.STRING),this.addOutput("nextExecution",a.Type.STRING),this.settings.timezone={description:"Enter the cron time zone",value:"Australia/Sydney",type:s.SettingType.STRING},this.settings.min={description:"Set minute",value:0,type:s.SettingType.NUMBER},this.settings.hour={description:"Set hour",value:6,type:s.SettingType.NUMBER},this.settings.sunday={description:"sunday",value:!1,type:s.SettingType.BOOLEAN},this.settings.monday={description:"monday",value:!1,type:s.SettingType.BOOLEAN},this.settings.tuesday={description:"tuesday",value:!1,type:s.SettingType.BOOLEAN},this.settings.wednesday={description:"wednesday",value:!1,type:s.SettingType.BOOLEAN},this.settings.thursday={description:"thursday",value:!1,type:s.SettingType.BOOLEAN},this.settings.friday={description:"friday",value:!1,type:s.SettingType.BOOLEAN},this.settings.saturday={description:"saturday",value:!1,type:s.SettingType.BOOLEAN}}onAdded(){clearInterval(this.timeoutFunc),this.setOutputData(0,!1),this.onAfterSettingsChange()}onAfterSettingsChange(){this.onInputUpdated()}onRemoved(){this.job&&this.job.stop()}jsonataQuery(t){return o("_d").evaluate(t)}onInputUpdated(){const t=this.getInputData(0);let e=null;if(t){e="invalid";const t=this.settings.min.value,i=this.settings.hour.value;if(t>=0&&t<=59&&i>=0&&i<24){e=t+" "+i+" * * ";let s=[];this.settings.sunday.value&&s.push("0"),this.settings.monday.value&&s.push("1"),this.settings.tuesday.value&&s.push("2"),this.settings.wednesday.value&&s.push("3"),this.settings.thursday.value&&s.push("4"),this.settings.friday.value&&s.push("5"),this.settings.saturday.value&&s.push("6"),e+=s.join(",")}}if(!t||null==e||"invalid"===e){"invalid"===e?this.setOutputData(1,"invalid configuration"):this.setOutputData(1,"CRON job stopped");try{this.job&&this.job.stop()}catch(t){this.setOutputData(1,t)}return this.job=null,this.jobCronExp="",this.setOutputData(0,!1,!0),this.setOutputData(2,null,!0),this.setOutputData(3,null,!0),void this.setOutputData(4,null,!0)}const i=this.settings.timezone.value;this.job&&e!==this.jobCronExp&&(this.setOutputData(1,"CRON job stopped"),this.job.stop(),this.job=null,this.jobCronExp="");try{this.jobCronExp=e,this.setOutputData(2,e),this.setOutputData(3,u.toString(e)),this.job=new r(e,()=>{this.setOutputData(0,!0),this.timeoutFunc=setTimeout(()=>{this.setOutputData(0,!1)},500);let t=this.job.nextDates(1);this.setOutputData(4,this.jsonataQuery(t))},null,null,i),setTimeout((function(){}),500),this.setOutputData(1,"CRON job started"),this.job.start();let t=this.job.nextDates(1);this.setOutputData(4,this.jsonataQuery(t))}catch(t){this.setOutputData(1,t)}}}e.CronWeeklyNode=d,n.Container.registerNodeType("time/cron-weekly",d)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(4),o=i(56).CronJob,u=i(57),d=i(58),p=i(391);class l extends s.Node{constructor(){super(),this.job=null,this.jobCronExp="",this.title="Cron Expression",this.description="This node triggers 'output' to transition from 'false' to 'true' for 500 milliseconds at times triggered by the 'input' CRON expression. 'info' will show information about the status of the node. 'cronDescription' represents the configured scheduled timings in plain english. 'nextExecution' is a String output representing the datetime that the next 'message' will be sent from 'output'. For more information on Cron Expressions see: (https://www.freeformatter.com/cron-expression-generator-quartz.html)",this.addInputWithSettings("enable",a.Type.BOOLEAN,!0,"Enable",!1),this.addInputWithSettings("cronExpression",a.Type.STRING,"","Cron Expression"),this.addOutput("output",a.Type.BOOLEAN),this.addOutput("info",a.Type.STRING),this.addOutput("cronDescription",a.Type.STRING),this.addOutput("nextExecution",a.Type.STRING),this.settings.timezone={description:"Enter the cron time zone",value:"Australia/Sydney",type:s.SettingType.STRING}}onAdded(){clearInterval(this.timeoutFunc),this.setOutputData(0,!1),this.onAfterSettingsChange()}onAfterSettingsChange(){this.onInputUpdated()}onRemoved(){this.job&&this.job.stop()}jsonataQuery(t){return u("_d").evaluate(t)}onInputUpdated(){const t=this.getInputData(0),e=this.getInputData(1),i=p.isValidCron(e);if(!t||!i){i?this.setOutputData(1,"CRON job stopped"):this.setOutputData(1,"invalid CRON Expression");try{this.job&&this.job.stop()}catch(t){this.setOutputData(1,t)}return this.job=null,this.jobCronExp="",this.setOutputData(0,!1,!0),this.setOutputData(2,null,!0),void this.setOutputData(3,null,!0)}const s=this.settings.timezone.value;this.job&&e!==this.jobCronExp&&(this.setOutputData(1,"CRON job stopped"),this.job.stop(),this.job=null,this.jobCronExp="");try{this.jobCronExp=e,this.setOutputData(2,d.toString(e)),this.job=new o(e,()=>{if(this.setOutputData(0,!0),this.timeoutFunc=setTimeout(()=>{this.setOutputData(0,!1)},500),r.isNull(this.job))return;let t=this.job.nextDates(1);this.setOutputData(3,this.jsonataQuery(t))},null,null,s),setTimeout((function(){}),500),this.setOutputData(1,"CRON job started"),this.job.start();let t=this.job.nextDates(1);this.setOutputData(3,this.jsonataQuery(t))}catch(t){this.setOutputData(1,t)}}}e.CronExpressionNode=l,n.Container.registerNodeType("time/cron-expression",l)},function(t,e){t.exports=require("cron-validator")},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(24),r=i(1);class o extends s.Node{constructor(){super(),this.title="Timestamp Generator",this.description='## Description\n  The is node is used to generate a timestamps\n ## Inputs\n  The an active input a timestamp will be generated based of the device time \n ## Outputs (return data type is ***JSON***)\n  ***date-string*** will return the timestamp: **"2019-08-31T11:54:27+10:00" ***\n  ***date-unix*** will return the timestamp: **1598838867***\n  ***date-format*** will return the time that is formatted as per moment js format options https://momentjs.com/docs/#/displaying/format/*\n ### Formatting options examples\n -ENTER in settings\t***LT*** with return 8:30 PM\n -ENTER in settings\t***LTS*** with return 8:30:25 PM\n -ENTER in settings\t***LLLL*** with return \tThursday, September 4, 1986 8:30 PM\n ',this.addInput("input",r.Type.ANY),this.addOutput("date-string",r.Type.STRING),this.addOutput("date-unix",r.Type.STRING),this.addOutput("date-format",r.Type.STRING),this.settings.format={description:"Formatting options",value:"x",type:s.SettingType.STRING}}onAfterSettingsChange(){}onInputUpdated(){const t=this.settings.format.value;let e=a();this.setOutputData(0,e.format()),this.setOutputData(1,e.unix()),this.setOutputData(2,e.format(t))}}e.TimestampGeneratorNode=o,n.Container.registerNodeType("time/timestamp-generator",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(5);class o extends s.Node{constructor(){super(),this.title="Change Of Value",this.description="when 'input' changes value, output becomes 'true' for 'interval' duration, then 'output' changes back to 'false'.  For Numeric 'input' values, the change of value must be greater than the 'threshold' value to trigger the output.",this.addInput("input",a.Type.ANY),this.addInputWithSettings("interval",a.Type.NUMBER,1,"Interval"),this.addInputWithSettings("threshold",a.Type.NUMBER,0,"COV Threshold"),this.addOutput("output",a.Type.BOOLEAN),this.settings.time={description:"Units",type:s.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"seconds"},this.setSettingsConfig({groups:[{interval:{weight:2},time:{}}]})}onAdded(){this.setOutputData(0,!1),this.inputs[1].name=`[interval] (${this.settings.time.value})`}onExecute(){}onInputUpdated(){const t=this.getInputData(0),e="number"==typeof t;if(this.inputs[0].updated&&t!==this.lastValue&&("number"!=typeof this.lastValue||!e||e&&Math.abs(t-this.lastValue)>=this.getInputData(2))){this.lastValue=t,this.setOutputData(0,!0);const e=r.default.timeConvert(this.getInputData(1),this.settings.time.value);this.timeoutFunc&&clearTimeout(this.timeoutFunc),this.timeoutFunc=setTimeout(()=>{this.setOutputData(0,!1)},e)}}onAfterSettingsChange(){this.inputs[1].name=`[interval] (${this.settings.time.value})`}}n.Container.registerNodeType("trigger/change-of-value",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(3);class o extends s.Node{constructor(){super(),this.state=!1,this.title="Random",this.description="When 'trigger' transitions from 'false' to 'true', a random number between 'min' and 'max' values is produced at 'output'.  The number of decimal places that 'output' values have can be set from settings.",this.settings.digits={description:"Number of decimal places",value:3,type:s.SettingType.NUMBER},this.addInput("trigger",a.Type.BOOLEAN),this.addInputWithSettings("max",a.Type.NUMBER,1,"Maximum Value"),this.addInputWithSettings("min",a.Type.NUMBER,0,"Minimum Value"),this.addOutput("output",a.Type.NUMBER),this.setOutputData(0,null)}onAdded(){this.onInputUpdated()}onInputUpdated(){let t=this.getInputData(0);if(null==t)this.lastVal=!1,this.setOutputData(0,null),this.state=!1;else if(t==this.lastVal)return;if(1==t){const t=this.getInputData(1),e=this.getInputData(2);this.settings.digits.value;let i=this.settings.digits.value,s=Math.random()*(t-e)+e;s=r.default.toFixedNumber(s,i),this.setOutputData(0,s)}this.lastVal=t}}n.Container.registerNodeType("trigger/random",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1);class r extends s.Node{constructor(){super(),this.title="Inject",this.description="While 'enable' is 'true', ‘output’ will send 'message' value when 'trigger' transitions from 'false' to 'true",this.addInputWithSettings("enable",a.Type.BOOLEAN,!0,"Enable"),this.addInputWithSettings("message",a.Type.STRING,"true","Message"),this.addInput("trigger",a.Type.BOOLEAN),this.addOutput("output",a.Type.BOOLEAN)}onCreated(){this.lastTrigger=!1}onAdded(){this.getInputData(0)||this.setOutputData(0,null)}onInputUpdated(){if(!this.getInputData(0))return void this.setOutputData(0,null,!0);let t=this.getInputData(2);if(t&&!this.lastTrigger){const t=this.getInputData(1);this.setOutputData(0,t,!1)}this.lastTrigger=t}onAfterSettingsChange(){}}e.TriggeredInjectNode=r,n.Container.registerNodeType("trigger/inject",r)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(5);class o extends s.Node{constructor(){super(),this.lastInterval=1e3,this.runState=!0,this.title="Interval Inject",this.description="While 'enable' is 'true', ‘output’ will send 'message' value at every 'interval' period. When 'enable' is 'false', ‘output’ will be 'null'.  ‘interval’ units can be configured from settings. Maximum ‘interval’ setting is 587 hours.",this.addInputWithSettings("enable",a.Type.BOOLEAN,!0,"Enable"),this.addInputWithSettings("message",a.Type.ANY,"true","Message"),this.addInputWithSettings("interval",a.Type.NUMBER,1,"Interval"),this.addOutput("output",a.Type.BOOLEAN),this.settings.time={description:"Units",type:s.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"seconds"},this.setSettingsConfig({groups:[{interval:{weight:2},time:{}}]})}onAdded(){if(clearInterval(this.timeoutFunc),this.inputs[2].name=`[interval] (${this.settings.time.value})`,!this.getInputData(0))return this.setOutputData(0,null),void(this.runState=!1);let t=this.getInputData(2);t=r.default.timeConvert(t,this.settings.time.value),this.timeoutFunc=setInterval(()=>{const t=this.getInputData(1);this.setOutputData(0,t)},t),this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(0);if(!t&&this.runState)return clearInterval(this.timeoutFunc),this.setOutputData(0,null,!0),void(this.runState=!1);if(!t&&!this.runState)return this.setOutputData(0,null,!0),void(this.runState=!1);if(t){let t=this.getInputData(2);if(t=r.default.timeConvert(t,this.settings.time.value),this.runState)return void(t!=this.lastInterval&&(this.lastInterval=t,clearInterval(this.timeoutFunc),this.timeoutFunc=setInterval(()=>{const t=this.getInputData(1);this.setOutputData(0,t)},t)));this.runState||(this.runState=!0,this.timeoutFunc=setInterval(()=>{const t=this.getInputData(1);this.setOutputData(0,t)},t))}}onAfterSettingsChange(){this.inputs[2].name=`[interval] (${this.settings.time.value})`,this.onInputUpdated()}}e.InjectNode=o,n.Container.registerNodeType("trigger/interval-inject",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(5);class o extends s.Node{constructor(){super(),this.state=!1,this.runState=!0,this.complete=!1,this.lastStart=!1,this.lastStop=!1,this.count=0,this.reqInterval=null,this.reqIterations=null,this.title="Iterator",this.description="This node generates a sequence of 'true' messages at 'output'. If the 'Generate False' setting is ticked (default), then a 'false' message will be sent between each 'true' at 'output'. The number of 'true' messages sent will be equal to 'iterations' value; these values are sent over the 'interval' duration (unless interrupted by ‘stop’ inputs). For example, if 'interval' is set to 5 (seconds) and 'iterations' is set to 5, a 'true' message will be sent from 'output' every 1000 millis. If 'stop’ input is ‘true’ then the next ‘true’ value will not be sent from ‘output’ until ‘stop’ is ‘false’ again. ‘interval’ units can be configured from settings. Maximum ‘interval’ setting is 587 hours.",this.addInputWithSettings("interval",a.Type.NUMBER,10,"Interval",!1),this.addInputWithSettings("iterations",a.Type.NUMBER,5,"Iterations",!1),this.addInput("start",a.Type.BOOLEAN),this.addInput("stop",a.Type.BOOLEAN),this.addOutput("output",a.Type.BOOLEAN),this.addOutput("complete",a.Type.BOOLEAN),this.addOutput("count",a.Type.NUMBER),this.settings.time={description:"Units",type:s.SettingType.DROPDOWN,config:{items:[{value:"milliseconds",text:"Milliseconds"},{value:"seconds",text:"Seconds"},{value:"minutes",text:"Minutes"},{value:"hours",text:"Hours"}]},value:"seconds"},this.setSettingsConfig({groups:[{interval:{weight:2},time:{}}]}),this.settings.false={description:"Generate False",value:!0,type:s.SettingType.BOOLEAN}}onAdded(){clearInterval(this.timeoutFunc),this.setOutputData(0,!1),this.setOutputData(1,!1),this.inputs[0].name=`[interval] (${this.settings.time.value})`,this.lastStart=!1,this.lastStop=!1,this.complete=!0,this.count=0,this.onInputUpdated()}start(){this.runState=!0,this.settings.false.value?this.timeoutFunc=setInterval(()=>{1==this.state?(this.state=!1,this.setOutputData(0,!1),this.count>=this.reqIterations&&(clearInterval(this.timeoutFunc),this.setOutputData(1,!1),this.complete=!0,this.runState=!1)):(this.state=!0,this.setOutputData(0,!0),this.count++,this.setOutputData(2,this.count))},this.reqInterval/(2*this.reqIterations-1)):this.timeoutFunc=setInterval(()=>{this.state=!0,this.setOutputData(0,!0),this.count++,this.setOutputData(2,this.count),this.count>=this.reqIterations&&(clearInterval(this.timeoutFunc),this.complete=!0,this.runState=!1)},this.reqInterval/(this.reqIterations-1))}onInputUpdated(){let t=this.getInputData(3);if(t&&!this.lastStop&&!this.complete)return this.lastStop=t,this.settings.false.value&&(this.state=!1,this.setOutputData(0,!1)),clearInterval(this.timeoutFunc),void(this.runState=!1);if(!t&&this.lastStop&&!this.complete)return this.lastStop=t,void this.start();this.lastStop=t;let e=this.getInputData(2);if(e&&!this.lastStart){this.lastStart=e,clearInterval(this.timeoutFunc),this.count=0,this.settings.false.value&&(this.state=!1,this.setOutputData(0,!1));let i=this.getInputData(0);i=r.default.timeConvert(i,this.settings.time.value);const s=this.getInputData(1);if(s<=0||i<=0)return void(this.runState=!1);if(this.reqInterval=i,this.reqIterations=s,this.setOutputData(0,!0),this.state=!0,this.complete=!1,this.count++,this.setOutputData(2,this.count),t)return this.settings.false.value?void setTimeout(()=>{this.runState=!1,this.state=!1,this.setOutputData(0,!1)},i/(2*s-1)):void(this.runState=!1);this.start()}this.lastStart=e}onAfterSettingsChange(){this.inputs[0].name=`[interval] (${this.settings.time.value})`,this.onInputUpdated()}}e.TimeIteratorNode=o,n.Container.registerNodeType("trigger/iterator",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(5);class o extends s.Node{constructor(){super(),this.currentMode="SCHEDULE",this.remainingRuntime=0,this.updateInterval=5e3,this.title="Schedule-Afterhours-Off Widget",this.description="This node works with a multi-select cloud dashboard widget to perform the logic to output 'enable' and 'remaining runtime'.  Widget Example:  "+'{"new":false,"widgetType":"MultiSwitch","dataSource":"Ditto","tableSelectionMode":"Tabular","cellWidthAuto":true,"numCharts":1,"timeSeriesData":true,"valuePrecision":3,"trimTableHeaders":0,"enableTooltip":true,"enableLegend":true,"enableZoomSlider":true,"syncTime":60,"chartSettings":[{"xAxisSplits":3,"yAxisSplits":5}],"graphType":"LineChart","fontSize":35,"statusImageName":"Light","trueStatus":1,"falseStatus":0,"priority":16,"sliderMin":10,"sliderMax":30,"sliderStep":0.1,"min":0,"max":100,"gaugeSplits":6,"maximum":0,"unit":"°C","steps":0,"reverseGradient":true,"lowerBound":0,"upperBound":100,"cellWidth":150,"tickCount":100,"theme":"nube","titleColor":"#333333","gateway":"/api/ditto","query":"/api/2/things/com.nubeio:97768707-4a17-4d36-baa5-e1f95cbd74d4/features/points/properties/CHAPEL_Mode","units":"%","title":"AC Control","containerHeight":150,"icon":"None","topicIcon":"None","subTopicIcon":"None","layouts":{"lg":{"w":6,"h":4,"x":0,"y":7,"moved":false,"static":false},"md":{"x":0,"y":144,"w":6,"h":8},"sm":{"x":0,"y":104,"w":6,"h":8},"xs":{"x":0,"y":8,"w":4,"h":8},"xxs":{"x":0,"y":8,"w":2,"h":8}},"numButtons":3,"buttonSettings":[{"name":"SCHEDULE","value":"SCHEDULE"},{"name":"AFTERHOURS","value":"AFTERHOURS"},{"name":"OFF","value":"OFF"}],"dataType":"Global","enableBackground":false,"isSelect":false,"fontWeight":"bold","fontColor":"","overriddenFields":[],"isTransparent":false,"isSelectedDitto":true,"showValue":true,"dataEditorCode":""}',this.addInput("modeInput",a.Type.STRING),this.addInput("scheduleInput",a.Type.BOOLEAN),this.addInput("scheduleNextStop",a.Type.NUMBER),this.addInputWithSettings("AH duration (mins)",a.Type.NUMBER,120,"Afterhours Duration (minutes)"),this.addOutput("modeOutput",a.Type.STRING),this.addOutput("enableOutput",a.Type.BOOLEAN),this.addOutput("remainingRuntime (ms)",a.Type.NUMBER),this.AHRuntime=r.default.timeConvert(120,"minutes")}onCreated(){this.currentMode="OFF",this.onInputUpdated()}onAdded(){this.currentMode="OFF",this.onInputUpdated()}onInputUpdated(){const t=this.getInputData(0);if(null==t)return this.currentMode=null,this.setOutputData(0,""),this.setOutputData(1,null),this.timeoutFunc&&clearInterval(this.timeoutFunc),this.remainingRuntime=0,void this.setOutputData(2,null);if("OFF"==t)return this.currentMode="OFF",this.setOutputData(0,"OFF"),this.setOutputData(1,!1),this.timeoutFunc&&clearInterval(this.timeoutFunc),this.remainingRuntime=0,void this.setOutputData(2,0);if("SCHEDULE"==t&&this.currentMode!==t?(this.currentMode="SCHEDULE",this.setOutputData(0,"SCHEDULE"),this.getInputData(1)?this.startSchedule():(this.timeoutFunc&&clearInterval(this.timeoutFunc),this.setOutputData(1,!1),this.setOutputData(2,0))):"AFTERHOURS"==t&&this.currentMode!==t&&this.startAfterhours(),"SCHEDULE"===this.currentMode){const t=this.getInputData(1);if(t||this.setOutputData(2,0),this.inputs[1].updated&&(t?(this.setOutputData(1,!0),this.startSchedule()):(this.setOutputData(1,!1),this.timeoutFunc&&clearInterval(this.timeoutFunc),this.setOutputData(2,0))),null==this.getInputData(2))this.setOutputData(2,null);else if(this.inputs[2].updated){const t=this.getInputData(2);t&&this.setOutputData(2,t-Date.now())}}else r.default.timeConvert(this.getInputData(3),"minutes")!==this.AHRuntime&&"AFTERHOURS"===this.currentMode&&this.startAfterhours()}startSchedule(){this.timeoutFunc&&clearInterval(this.timeoutFunc);const t=this.getInputData(2);t?(this.remainingRuntime=t-Date.now(),this.setOutputData(2,this.remainingRuntime),this.timeoutFunc=setInterval(()=>{this.remainingRuntime-=this.updateInterval,this.setOutputData(2,this.remainingRuntime)},this.updateInterval)):this.setOutputData(2,null),this.setOutputData(1,!0)}startAfterhours(){this.currentMode="AFTERHOURS",this.setOutputData(0,"AFTERHOURS"),this.setOutputData(1,!0),clearInterval(this.timeoutFunc);const t=r.default.timeConvert(this.getInputData(3)||120,"minutes");this.AHRuntime=t,this.remainingRuntime=t,this.setOutputData(2,t),this.timeoutFunc=setInterval(()=>{if(this.remainingRuntime-=this.updateInterval,this.remainingRuntime<=0)return this.setOutputData(1,!1),this.setOutputData(2,0),this.currentMode="SCHEDULE",this.setOutputData(0,"SCHEDULE"),clearInterval(this.timeoutFunc),void(this.getInputData(1)&&this.startSchedule());this.setOutputData(2,this.remainingRuntime)},this.updateInterval)}onAfterSettingsChange(){this.onInputUpdated()}}n.Container.registerNodeType("widget/schedule-afterhours-off",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2),n=i(0),a=i(1),r=i(5);class o extends s.Node{constructor(){super(),this.title="Schedule Prestart Fixed",this.description="This node provides a pre-start function based on fixed settings.  Conditions are evaluated every 30 seconds.",this.addInputWithSettings("enable",a.Type.BOOLEAN,!0,"Enable"),this.addInput("temp",a.Type.NUMBER),this.addInput("SP",a.Type.NUMBER),this.addInput("scheduleNextStart",a.Type.NUMBER),this.addInput("reset",a.Type.NUMBER),this.addOutput("output",a.Type.STRING),this.settings.condition1_range1={description:"temp > (SP + ?):",value:1,type:s.SettingType.NUMBER},this.settings.condition1_range2={description:"temp <= (SP + ?)",value:2.5,type:s.SettingType.NUMBER},this.settings.condition1_time={description:"Prestart Time (Mins)",value:20,type:s.SettingType.NUMBER},this.settings.condition2_range1={description:"temp > (SP + ?):",value:2.5,type:s.SettingType.NUMBER},this.settings.condition2_range2={description:"temp <= (SP + ?)",value:5,type:s.SettingType.NUMBER},this.settings.condition2_time={description:"Prestart Time (Mins)",value:40,type:s.SettingType.NUMBER},this.settings.condition3_range1={description:"temp > (SP + ?):",value:5,type:s.SettingType.NUMBER},this.settings.condition3_range2={description:"temp <= (SP + ?)",value:100,type:s.SettingType.NUMBER},this.settings.condition3_time={description:"Prestart Time (Mins)",value:60,type:s.SettingType.NUMBER},this.settings.condition4_range1={description:"temp > (SP + ?):",value:null,type:s.SettingType.NUMBER},this.settings.condition4_range2={description:"temp <= (SP + ?)",value:null,type:s.SettingType.NUMBER},this.settings.condition4_time={description:"Prestart Time (Mins)",value:null,type:s.SettingType.NUMBER},this.settings.condition5_range1={description:"temp > (SP + ?):",value:null,type:s.SettingType.NUMBER},this.settings.condition5_range2={description:"temp <= (SP + ?)",value:null,type:s.SettingType.NUMBER},this.settings.condition5_time={description:"Prestart Time (Mins)",value:null,type:s.SettingType.NUMBER},this.settings.condition6_range1={description:"temp < (SP + ?):",value:-1,type:s.SettingType.NUMBER},this.settings.condition6_range2={description:"temp >= (SP + ?)",value:-2.5,type:s.SettingType.NUMBER},this.settings.condition6_time={description:"Prestart Time (Mins)",value:30,type:s.SettingType.NUMBER},this.settings.condition7_range1={description:"temp < (SP + ?):",value:-2.5,type:s.SettingType.NUMBER},this.settings.condition7_range2={description:"temp >= (SP + ?)",value:-5,type:s.SettingType.NUMBER},this.settings.condition7_time={description:"Prestart Time (Mins)",value:40,type:s.SettingType.NUMBER},this.settings.condition8_range1={description:"temp < (SP + ?):",value:-5,type:s.SettingType.NUMBER},this.settings.condition8_range2={description:"temp >= (SP + ?)",value:-100,type:s.SettingType.NUMBER},this.settings.condition8_time={description:"Prestart Time (Mins)",value:60,type:s.SettingType.NUMBER},this.settings.condition9_range1={description:"temp < (SP + ?):",value:null,type:s.SettingType.NUMBER},this.settings.condition9_range2={description:"temp >= (SP + ?)",value:null,type:s.SettingType.NUMBER},this.settings.condition9_time={description:"Prestart Time (Mins)",value:null,type:s.SettingType.NUMBER},this.settings.condition10_range1={description:"temp < (SP + ?):",value:null,type:s.SettingType.NUMBER},this.settings.condition10_range2={description:"temp >= (SP + ?)",value:null,type:s.SettingType.NUMBER},this.settings.condition10_time={description:"Prestart Time (Mins)",value:null,type:s.SettingType.NUMBER},this.setSettingsConfig({groups:[{condition1_range1:{},condition1_range2:{},condition1_time:{}},{condition2_range1:{},condition2_range2:{},condition2_time:{}},{condition3_range1:{},condition3_range2:{},condition3_time:{}},{condition4_range1:{},condition4_range2:{},condition4_time:{}},{condition5_range1:{},condition5_range2:{},condition5_time:{}},{condition6_range1:{},condition6_range2:{},condition6_time:{}},{condition7_range1:{},condition7_range2:{},condition7_time:{}},{condition8_range1:{},condition8_range2:{},condition8_time:{}},{condition9_range1:{},condition9_range2:{},condition9_time:{}},{condition10_range1:{},condition10_range2:{},condition10_time:{}}]})}onCreated(){this.enabled=!1,this.EXECUTE_INTERVAL=3e4}onAdded(){this.EXECUTE_INTERVAL=3e4,this.onInputUpdated()}onAfterSettingsChange(){this.onInputUpdated(),this.onExecute()}onExecute(){const t=(new Date).valueOf();if(!this.getInputData(0)||null==this.nextStart||this.nextStart-t<0)return this.setOutputData(0,!1),void(this.enabled=!1);if(this.enabled)return;const e=this.getInputData(1),i=this.getInputData(2);if(null!=e&&null!=i)for(var s=1;s<=10;s++){var n=this.settings[`condition${s}_range1`].value,a=this.settings[`condition${s}_range2`].value,o=this.settings[`condition${s}_time`].value;if(null!=n&&null!=a&&null!=o&&(o=r.default.timeConvert(o,"minutes"),this.nextStart-t<=o)){if(s<=5&&e>i+n&&e<=i+a)return this.enabled=!0,void this.setOutputData(0,!0);if(s>5&&e<i+n&&e>=i+a)return this.enabled=!0,void this.setOutputData(0,!0)}}}onInputUpdated(){if(!this.getInputData(0))return this.setOutputData(0,!1),void(this.enabled=!1);this.getInputData(4)&&this.inputs[4].updated&&(this.enabled=!1,this.setOutputData(0,!1));const t=this.getInputData(3);null!=t&&t===this.nextStart||(this.nextStart=t,this.setOutputData(0,!1),this.enabled=!1)}}n.Container.registerNodeType("widget/schedule-prestart-fixed",o)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(0),n=i(9),a=i(401);s.Container.registerNodeType(n.UNKNOWN_NODE,a.UnknownNode,null,!1)},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=i(2);class n extends s.Node{constructor(){super(),this.title="Unknown",this.description="Fallback node, this node need to be replace by another node"}}e.UnknownNode=n},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(403),a=i(404),r=i(405),o=i(406),u=i(407),d=i(408),p=i(409);class l{constructor(){this.authUserDatabase=new p.default,this.userDatabase=new d.default,this.nodeDatabase=new r.default,this.dashboardDatabase=new a.default,this.appDatabase=new n.default,this.scheduleDatabase=new o.default,this.historianDatabase=new u.default}asyncLoadDatabase(t=l.CLEANUP_INTERVAL){return s(this,void 0,void 0,(function*(){try{yield this.authUserDatabase.asyncLoadDatabase(t),yield this.userDatabase.asyncLoadDatabase(t),yield this.nodeDatabase.asyncLoadDatabase(t),yield this.dashboardDatabase.asyncLoadDatabase(t),yield this.appDatabase.asyncLoadDatabase(t),yield this.scheduleDatabase.asyncLoadDatabase(t),yield this.historianDatabase.asyncLoadDatabase(t)}catch(t){throw t}return null}))}addUser(t,e){this.userDatabase.addUser(t,e)}addOrUpdateUser(t,e){return this.userDatabase.addOrUpdateUser(t,e)}getUsers(t){this.userDatabase.getUsers(t)}getUser(t,e){this.userDatabase.getUser(t,e)}getAsyncUsers(){return this.userDatabase.getAsyncUsers()}updateUser(t,e,i){this.userDatabase.updateUser(t,e)}getUsersCount(t){this.userDatabase.getUsersCount(t)}removeUser(t,e){this.userDatabase.removeUser(t,e)}dropUsers(t){this.userDatabase.dropUsers()}addNode(t,e){this.nodeDatabase.addNode(t,e)}getNodes(t){this.nodeDatabase.getNodes(t)}getNodeType(t,e){this.nodeDatabase.getNodeType(t,e)}getNodeByQuery(t,e){this.nodeDatabase.getNodeByQuery(t,e)}getNode(t,e,i){this.nodeDatabase.getNode(t,e,i)}updateNode(t,e,i,s){this.nodeDatabase.updateNode(t,e,i,s)}removeNode(t,e,i){this.nodeDatabase.removeNode(t,e,i)}dropNodes(t){this.nodeDatabase.dropNodes(t)}addUiPanel(t,e){this.dashboardDatabase.addUiPanel(t,e)}getUiPanels(t){this.dashboardDatabase.getUiPanels(t)}getUiPanel(t,e){this.dashboardDatabase.getUiPanel(t,e)}updateUiPanel(t,e,i){this.dashboardDatabase.updateUiPanel(t,e,i)}dropUiPanels(t){this.dashboardDatabase.dropUiPanels(t)}removeUiPanel(t,e){this.dashboardDatabase.removeUiPanel(t,e)}getLastContainerId(t){this.appDatabase.getLastContainerId(t)}updateLastContainerId(t,e){this.appDatabase.updateLastContainerId(t,e)}getLastRootNodeId(t){this.appDatabase.getLastRootNodeId(t)}updateLastRootNodeId(t,e){this.appDatabase.updateLastRootNodeId(t,e)}dropApp(t){this.appDatabase.dropApp(t)}addSchedule(t,e){this.scheduleDatabase.addSchedule(t,e)}updateSchedule(t,e,i){this.scheduleDatabase.updateSchedule(t,e,i)}removeSchedule(t,e){this.scheduleDatabase.removeSchedule(t,e)}addHistory(t,e){this.historianDatabase.addHistory(t,e)}updateHistory(t,e,i){this.historianDatabase.updateHistory(t,e,i)}removeHistory(t,e){this.historianDatabase.removeHistory(t,e)}addAuthUser(t){return this.authUserDatabase.addAuthUser(t)}getAuthUser(){return this.authUserDatabase.getAuthUser()}deleteAuthUsers(){return this.authUserDatabase.deleteAuthUsers()}getAuthToken(t){return this.authUserDatabase.getAuthToken(t)}isAuthenticated(t){return this.authUserDatabase.isAuthenticated(t)}}l.CLEANUP_INTERVAL=3e5;const h=new l;e.db=h},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(23),a=i(8),r=i(7).create("database",{color:4});e.default=class{asyncLoadDatabase(t){return s(this,void 0,void 0,(function*(){const e=a.default.dataDir;return this.app=new n(`${e}/app.db`),this.app.persistence.setAutocompactionInterval(t),this.loadApp()}))}loadApp(){return new Promise((t,e)=>{this.app.loadDatabase(i=>(i&&(r.error(i),e(i)),t()))})}getLastContainerId(t){this.app.findOne({_id:"lastContainerId"},(function(e,i){e&&r.error(e),t&&t(e,i?i.last:null)}))}updateLastContainerId(t,e){this.app.update({_id:"lastContainerId"},{$set:{last:t}},{upsert:!0},(function(t,i){t&&r.error(t),0==i&&r.error("Cat't update. Document not found."),e&&e(t)}))}getLastRootNodeId(t){this.app.findOne({_id:"lastRootNodeId"},(function(e,i){e&&r.error(e),t&&t(e,i?i.last:null)}))}updateLastRootNodeId(t,e){this.app.update({_id:"lastRootNodeId"},{$set:{last:t}},{upsert:!0},(function(t,i){t&&r.error(t),0==i&&r.error("Cat't update. Document not found."),e&&e(t)}))}dropApp(t){this.app.remove({},{multi:!0},(function(e){e&&r.error(e),t&&t(e)}))}}},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(23),a=i(8),r=i(7).create("database",{color:4});e.default=class{asyncLoadDatabase(t){return s(this,void 0,void 0,(function*(){const e=a.default.dataDir;return this.dashboard=new n(`${e}/dashboard.db`),this.dashboard.persistence.setAutocompactionInterval(t),this.loadDashboard()}))}loadDashboard(){return new Promise((t,e)=>{this.dashboard.loadDatabase(i=>(i&&(r.error(i),e(i)),t()))})}addUiPanel(t,e){this.dashboard.insert(t,(function(t,i){t&&r.error(t),e&&e(t,i)}))}getUiPanels(t){this.dashboard.find({},(function(e,i){e&&r.error(e),t&&t(e,i)}))}getUiPanel(t,e){this.dashboard.findOne({name:t},(function(t,i){t&&r.error(t),e&&e(t,i)}))}updateUiPanel(t,e,i){this.dashboard.update({name:t},e,{},(function(e,s){e&&r.error(e),0==s&&r.error(`Cat't update dashboard panel [${t}]. Document not found.`),i&&i(e)}))}removeUiPanel(t,e){this.dashboard.remove({name:t},{},(function(t,i){t&&r.error(t),0==i&&r.error("Cat't remove. Document not found."),e&&e(t)}))}dropUiPanels(t){this.dashboard.remove({},{multi:!0},(function(e){e&&r.error(e),t&&t(e)}))}}},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(23),a=i(8),r=i(7).create("database",{color:4});e.default=class{asyncLoadDatabase(t){return s(this,void 0,void 0,(function*(){const e=a.default.dataDir;return this.nodes=new n(`${e}/nodes.db`),this.nodes.persistence.setAutocompactionInterval(t),this.load()}))}load(){return new Promise((t,e)=>{this.nodes.loadDatabase(i=>(i&&(r.error(i),e(i)),t()))})}addNode(t,e){let i=t.serialize();i._id="c"+i.cid+"n"+i.id,this.nodes.insert(i,(function(t,i){t&&r.error(t),e&&e(t,i)}))}getNodes(t){this.nodes.find({},(function(e,i){e&&r.error(e),t&&t(e,i)}))}getNode(t,e,i){let s="c"+e+"n"+t;this.nodes.findOne({_id:s},(function(t,e){t&&r.error(t),i&&i(t,e)}))}getNodeType(t,e){this.nodes.find({type:t},(function(t,i){t&&r.error(t),e&&e(t,i)}))}getNodeByQuery(t,e){this.nodes.find(t,(function(t,i){t&&r.error(t),e&&e(t,i)}))}updateNode(t,e,i,s){let n="c"+e+"n"+t;this.nodes.update({_id:n},i,{},(function(i,n){i&&r.error(i),0==n&&r.error(`Cat't update node [${e}/${t}]. Document not found.`),s&&s(i)}))}removeNode(t,e,i){let s="c"+e+"n"+t;this.nodes.remove({_id:s},{},(function(t,e){t&&r.error(t),0==e&&r.error("Cat't remove. Document not found."),i&&i(t)}))}dropNodes(t){this.nodes.remove({},{multi:!0},(function(e){e&&r.error(e),t&&t(e)}))}}},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(23),a=i(8),r=i(7).create("database",{color:4});e.default=class{asyncLoadDatabase(t){return s(this,void 0,void 0,(function*(){const e=a.default.dataDir;return this.schedule=new n(`${e}/schedule.db`),this.schedule.persistence.setAutocompactionInterval(t),this.loadSchedule()}))}loadSchedule(){return new Promise((t,e)=>{this.schedule.loadDatabase(i=>(i&&(r.error(i),e(i)),t()))})}addSchedule(t,e){this.schedule.insert(t,(function(t,i){t&&r.error(t),e&&e(t,i)}))}updateSchedule(t,e,i,s){this.schedule.update(t,e,{},(function(t,e){t?r.error(t):s(e),0==e&&r.error(`Can't update schedule [${name}]. Document not found.`),i&&i(t)}))}removeSchedule(t,e,i){this.schedule.remove(t,{},(function(t,s){t?r.error(t):i(s),0==s&&r.debug("Cat't remove. Schedule Document not found."),e&&e(t)}))}}},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(23),a=i(8),r=i(7).create("database",{color:4});e.default=class{asyncLoadDatabase(t){return s(this,void 0,void 0,(function*(){const e=a.default.dataDir;return this.history=new n(`${e}/history.db`),this.history.persistence.setAutocompactionInterval(t),this.loadHistory()}))}loadHistory(){return new Promise((t,e)=>{this.history.loadDatabase(i=>(i&&(r.error(i),e(i)),t()))})}addHistory(t,e){this.history.insert(t,(function(t,i){t&&r.error(t),e&&e(t,i)}))}updateHistory(t,e,i,s){this.history.update(t,e,{},(function(t,e){t?r.error(t):s(e),0==e&&r.error(`Can't update history [${name}]. Document not found.`),i&&i(t)}))}removeHistory(t,e,i){this.history.remove(t,{},(function(t,s){t?r.error(t):i(s),0==s&&r.debug("Cat't remove. History Document not found."),e&&e(t)}))}}},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(23),a=i(8),r=i(7).create("database",{color:4});e.default=class{asyncLoadDatabase(t){return s(this,void 0,void 0,(function*(){const e=a.default.dataDir;return this.users=new n(`${e}/users.db`),this.users.persistence.setAutocompactionInterval(t),this.loadUsers()}))}loadUsers(){return new Promise((t,e)=>{this.users.loadDatabase(i=>(i&&(r.error(i),e(i)),t()))})}addUser(t,e){this.users.insert(t,(function(t,i){t&&r.error(t),e&&e(t,i)}))}getUser(t,e){this.users.findOne(t,(function(t,i){t&&r.error(t),e&&e(t,i)}))}getUsers(t){this.users.find({},(function(e,i){e&&r.error(e),t&&t(e,i)}))}getAsyncUsers(){return new Promise((t,e)=>{this.users.find({},(function(i,s){i?(r.error(i),e(i)):t(s)}))})}updateUser(t,e,i){this.users.update(t,e,{},(function(t,e){t&&r.error(t),0==e&&r.error(`Cat't update user [${name}]. Document not found.`),i&&i(t)}))}getUsersCount(t){this.users.count({},(function(e,i){e&&r.error(e),t&&t(e,i)}))}addOrUpdateUser(t,e){return new Promise((i,s)=>{this.getUser(t,(n,a)=>{a?this.updateUser(t,e,t=>{t?s(t):i()}):this.addUser(e,t=>{t?s(t):i()})})})}removeUser(t,e){this.users.remove(t,{},(function(t,i){t&&r.error(t),e&&e(t)}))}dropUsers(t){this.users.remove({},{multi:!0},(function(e){e&&r.error(e),t&&t(e)}))}}},function(t,e,i){"use strict";var s=this&&this.__awaiter||function(t,e,i,s){return new(i||(i=Promise))((function(n,a){function r(t){try{u(s.next(t))}catch(t){a(t)}}function o(t){try{u(s.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(r,o)}u((s=s.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0});const n=i(23),a=i(8),r=i(17),o=i(410),u=i(7).create("auth-database",{color:4});e.default=class{asyncLoadDatabase(t){return s(this,void 0,void 0,(function*(){const e=a.default.dataDir;return this.auth=new n(`${e}/auth.db`),this.auth.persistence.setAutocompactionInterval(t),this.loadAuth()}))}loadAuth(){return new Promise((t,e)=>{this.auth.loadDatabase(i=>(i&&(u.error(i),e(i)),t()))})}addAuthUser(t){return new Promise((e,i)=>{this.auth.find({},(s,n)=>{if(n.length)return u.warn("User is already inserted"),void i("User is already inserted");t.password=r.default.encrypt(t.password),this.auth.insert(t,(t,s)=>{t?(i(t),u.error(t)):e(s)})})})}getAuthUser(){return new Promise((t,e)=>{this.auth.findOne({},(i,s)=>{i?(e(i),u.error(i)):t(s)})})}deleteAuthUsers(){return new Promise((t,e)=>{this.auth.remove({},{multi:!0},i=>{i?(e(i),u.error(i)):t("Successfully removed")})})}getAuthToken(t){return new Promise((e,i)=>{this.auth.findOne({username:t.username},(s,n)=>{if(s)i(s),u.error(s);else if(n&&r.default.decrypt(n.password)===t.password){const t=o.sign({username:n.username},a.default.secretKey,{expiresIn:18e3});e(`${t}`)}else u.warn("Invalid Credentials"),i("Invalid Credentials")})})}isAuthenticated(t){return new Promise((e,i)=>{o.verify(t,a.default.secretKey,(t,s)=>{t?(u.error(t),i(t)):e(s)})})}}},function(t,e){t.exports=require("jsonwebtoken")}]);
//# sourceMappingURL=app.js.map